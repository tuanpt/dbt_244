{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v5.json", "dbt_version": "1.1.3", "generated_at": "2023-02-23T09:40:22.223035Z", "invocation_id": "4aa3838a-8a0d-4e39-b30d-745d4de2cfb9", "env": {}, "project_id": "0b94292529fe716c37e3eff457394e97", "user_id": null, "send_anonymous_usage_stats": false, "adapter_type": "mysql"}, "nodes": {"model.airbyte_utils.thong_tin_goi_thau_ab2": {"raw_sql": "{{ config(\n    unique_key = '_airbyte_ab_id',\n    schema = \"_airbyte_bid\",\n    tags = [ \"top-level-intermediate\" ]\n) }}\n-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type\n-- depends_on: {{ ref('thong_tin_goi_thau_ab1') }}\nselect\n    cast(id as {{ dbt_utils.type_bigint() }}) as id,\n    cast(link as {{ dbt_utils.type_string() }}(1024)) as link,\n    cast(deleted as {{ dbt_utils.type_bigint() }}) as deleted,\n    cast(loai_tb as {{ dbt_utils.type_string() }}(1024)) as loai_tb,\n    cast(so_tbmt as {{ dbt_utils.type_string() }}(1024)) as so_tbmt,\n    cast(linh_vuc as {{ dbt_utils.type_string() }}(1024)) as linh_vuc,\n    cast(services as {{ dbt_utils.type_string() }}(6144)) as services,\n    cast(nguon_von as {{ dbt_utils.type_string() }}(1024)) as nguon_von,\n    cast(phan_loai as {{ dbt_utils.type_string() }}(1024)) as phan_loai,\n    cast(tien_dbdt as {{ dbt_utils.type_string() }}(1024)) as tien_dbdt,\n    cast({{ adapter.quote('timestamp') }} as {{ dbt_utils.type_string() }}(1024)) as {{ adapter.quote('timestamp') }},\n    cast(company_id as {{ dbt_utils.type_string() }}(1024)) as company_id,\n    cast(ten_khlcnt as {{ dbt_utils.type_string() }}(1024)) as ten_khlcnt,\n    cast(trang_thai as {{ dbt_utils.type_bigint() }}) as trang_thai,\n    cast(gia_du_toan as {{ dbt_utils.type_string() }}(1024)) as gia_du_toan,\n    cast(ten_du_toan as {{ dbt_utils.type_string() }}(1024)) as ten_du_toan,\n    cast(ben_moi_thau as {{ dbt_utils.type_string() }}(1024)) as ben_moi_thau,\n    cast(gia_goi_thau as {{ dbt_utils.type_string() }}(1024)) as gia_goi_thau,\n    cast(hinh_thuc_tb as {{ dbt_utils.type_string() }}(1024)) as hinh_thuc_tb,\n    cast(send_mail_id as {{ dbt_utils.type_string() }}(1024)) as send_mail_id,\n    cast(ten_goi_thau as {{ dbt_utils.type_string() }}(1024)) as ten_goi_thau,\n    cast(competitor_id as {{ dbt_utils.type_string() }}(1024)) as competitor_id,\n    cast(loai_hop_dong as {{ dbt_utils.type_string() }}(1024)) as loai_hop_dong,\n    cast(score_by_name as {{ dbt_utils.type_float() }}) as score_by_name,\n    cast(score_service as {{ dbt_utils.type_float() }}) as score_service,\n    cast(gia_trung_thau as {{ dbt_utils.type_string() }}(1024)) as gia_trung_thau,\n    cast(hinh_thuc_dbdt as {{ dbt_utils.type_string() }}(1024)) as hinh_thuc_dbdt,\n    cast(hinh_thuc_lcnt as {{ dbt_utils.type_string() }}(1024)) as hinh_thuc_lcnt,\n    cast(ngay_phe_duyet as {{ dbt_utils.type_string() }}(1024)) as ngay_phe_duyet,\n    cast(score_by_scope as {{ dbt_utils.type_float() }}) as score_by_scope,\n    cast(so_hieu_khlcnt as {{ dbt_utils.type_string() }}(1024)) as so_hieu_khlcnt,\n    cast(hieu_luc_e_hsdt as {{ dbt_utils.type_string() }}(1024)) as hieu_luc_e_hsdt,\n    cast(so_tbmt_version as {{ dbt_utils.type_string() }}(1024)) as so_tbmt_version,\n    cast(dia_diem_mo_thau as {{ dbt_utils.type_string() }}(1024)) as dia_diem_mo_thau,\n    cast(phuong_thuc_lcnt as {{ dbt_utils.type_string() }}(1024)) as phuong_thuc_lcnt,\n    cast(services_by_name as {{ dbt_utils.type_string() }}(6144)) as services_by_name,\n    cast(don_vi_trung_thau as {{ dbt_utils.type_string() }}(1024)) as don_vi_trung_thau,\n    cast(hinh_thuc_du_thau as {{ dbt_utils.type_string() }}(1024)) as hinh_thuc_du_thau,\n    cast(services_by_scope as {{ dbt_utils.type_string() }}(6144)) as services_by_scope,\n    cast(dia_diem_nhan_hsdt as {{ dbt_utils.type_string() }}(1024)) as dia_diem_nhan_hsdt,\n    cast(dia_diem_thuc_hien as {{ dbt_utils.type_string() }}(1024)) as dia_diem_thuc_hien,\n    cast(nhan_e_hsdt_tu_ngay as {{ dbt_utils.type_string() }}(1024)) as nhan_e_hsdt_tu_ngay,\n    cast(thoi_gian_thuc_hien as {{ dbt_utils.type_string() }}(1024)) as thoi_gian_thuc_hien,\n    cast(nhan_e_hsdt_den_ngay as {{ dbt_utils.type_string() }}(1024)) as nhan_e_hsdt_den_ngay,\n    cast(thoi_diem_dong_mo_thau as {{ dbt_utils.type_string() }}(1024)) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    {{ current_timestamp() }} as _airbyte_normalized_at\nfrom {{ ref('thong_tin_goi_thau_ab1') }}\n-- thong_tin_goi_thau\nwhere 1 = 1", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.type_bigint", "macro.dbt_utils.type_string", "macro.dbt_utils.type_float", "macro.dbt.current_timestamp"], "nodes": ["model.airbyte_utils.thong_tin_goi_thau_ab1", "model.airbyte_utils.thong_tin_goi_thau_ab1"]}, "config": {"enabled": true, "alias": null, "schema": "_airbyte_bid", "database": null, "tags": ["airbyte_internal_cte", "top-level-intermediate"], "meta": {}, "materialized": "ephemeral", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "_airbyte_ab_id", "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": null, "schema": "_airbyte_bid", "fqn": ["airbyte_utils", "generated", "airbyte_ctes", "bid", "thong_tin_goi_thau_ab2"], "unique_id": "model.airbyte_utils.thong_tin_goi_thau_ab2", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "generated/airbyte_ctes/bid/thong_tin_goi_thau_ab2.sql", "original_file_path": "models/generated/airbyte_ctes/bid/thong_tin_goi_thau_ab2.sql", "name": "thong_tin_goi_thau_ab2", "alias": "thong_tin_goi_thau_ab2", "checksum": {"name": "sha256", "checksum": "de46c650e9e35ccd46f949020cb15adbaa9b0f3e9a6179ef9b3a865ad911cd90"}, "tags": ["airbyte_internal_cte", "top-level-intermediate"], "refs": [["thong_tin_goi_thau_ab1"], ["thong_tin_goi_thau_ab1"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "build/compiled/airbyte_utils/models/generated/airbyte_ctes/bid/thong_tin_goi_thau_ab2.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["top-level-intermediate"], "unique_key": "_airbyte_ab_id", "schema": "_airbyte_bid"}, "created_at": 1677145224.0510974, "compiled_sql": "\nwith __dbt__cte__thong_tin_goi_thau_ab1 as (\n\n-- SQL model to parse JSON blob stored in a single column and extract into separated field columns as described by the JSON Schema\n-- depends_on: bid._airbyte_raw_thong_tin_goi_thau\nselect\n    json_value(_airbyte_data, \n    '$.\"id\"' RETURNING CHAR) as id,\n    json_value(_airbyte_data, \n    '$.\"link\"' RETURNING CHAR) as link,\n    json_value(_airbyte_data, \n    '$.\"deleted\"' RETURNING CHAR) as deleted,\n    json_value(_airbyte_data, \n    '$.\"loai_tb\"' RETURNING CHAR) as loai_tb,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt\"' RETURNING CHAR) as so_tbmt,\n    json_value(_airbyte_data, \n    '$.\"linh_vuc\"' RETURNING CHAR) as linh_vuc,\n    json_value(_airbyte_data, \n    '$.\"services\"' RETURNING CHAR) as services,\n    json_value(_airbyte_data, \n    '$.\"nguon_von\"' RETURNING CHAR) as nguon_von,\n    json_value(_airbyte_data, \n    '$.\"phan_loai\"' RETURNING CHAR) as phan_loai,\n    json_value(_airbyte_data, \n    '$.\"tien_dbdt\"' RETURNING CHAR) as tien_dbdt,\n    json_value(_airbyte_data, \n    '$.\"timestamp\"' RETURNING CHAR) as `timestamp`,\n    json_value(_airbyte_data, \n    '$.\"company_id\"' RETURNING CHAR) as company_id,\n    json_value(_airbyte_data, \n    '$.\"ten_khlcnt\"' RETURNING CHAR) as ten_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"trang_thai\"' RETURNING CHAR) as trang_thai,\n    json_value(_airbyte_data, \n    '$.\"gia_du_toan\"' RETURNING CHAR) as gia_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ten_du_toan\"' RETURNING CHAR) as ten_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ben_moi_thau\"' RETURNING CHAR) as ben_moi_thau,\n    json_value(_airbyte_data, \n    '$.\"gia_goi_thau\"' RETURNING CHAR) as gia_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_tb\"' RETURNING CHAR) as hinh_thuc_tb,\n    json_value(_airbyte_data, \n    '$.\"send_mail_id\"' RETURNING CHAR) as send_mail_id,\n    json_value(_airbyte_data, \n    '$.\"ten_goi_thau\"' RETURNING CHAR) as ten_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"competitor_id\"' RETURNING CHAR) as competitor_id,\n    json_value(_airbyte_data, \n    '$.\"loai_hop_dong\"' RETURNING CHAR) as loai_hop_dong,\n    json_value(_airbyte_data, \n    '$.\"score_by_name\"' RETURNING CHAR) as score_by_name,\n    json_value(_airbyte_data, \n    '$.\"score_service\"' RETURNING CHAR) as score_service,\n    json_value(_airbyte_data, \n    '$.\"gia_trung_thau\"' RETURNING CHAR) as gia_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_dbdt\"' RETURNING CHAR) as hinh_thuc_dbdt,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_lcnt\"' RETURNING CHAR) as hinh_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"ngay_phe_duyet\"' RETURNING CHAR) as ngay_phe_duyet,\n    json_value(_airbyte_data, \n    '$.\"score_by_scope\"' RETURNING CHAR) as score_by_scope,\n    json_value(_airbyte_data, \n    '$.\"so_hieu_khlcnt\"' RETURNING CHAR) as so_hieu_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"hieu_luc_e_hsdt\"' RETURNING CHAR) as hieu_luc_e_hsdt,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt_version\"' RETURNING CHAR) as so_tbmt_version,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_mo_thau\"' RETURNING CHAR) as dia_diem_mo_thau,\n    json_value(_airbyte_data, \n    '$.\"phuong_thuc_lcnt\"' RETURNING CHAR) as phuong_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"services_by_name\"' RETURNING CHAR) as services_by_name,\n    json_value(_airbyte_data, \n    '$.\"don_vi_trung_thau\"' RETURNING CHAR) as don_vi_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_du_thau\"' RETURNING CHAR) as hinh_thuc_du_thau,\n    json_value(_airbyte_data, \n    '$.\"services_by_scope\"' RETURNING CHAR) as services_by_scope,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_nhan_hsdt\"' RETURNING CHAR) as dia_diem_nhan_hsdt,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_thuc_hien\"' RETURNING CHAR) as dia_diem_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_tu_ngay\"' RETURNING CHAR) as nhan_e_hsdt_tu_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_gian_thuc_hien\"' RETURNING CHAR) as thoi_gian_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_den_ngay\"' RETURNING CHAR) as nhan_e_hsdt_den_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_diem_dong_mo_thau\"' RETURNING CHAR) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom bid._airbyte_raw_thong_tin_goi_thau as table_alias\n-- thong_tin_goi_thau\nwhere 1 = 1\n)-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type\n-- depends_on: __dbt__cte__thong_tin_goi_thau_ab1\nselect\n    cast(id as \n    signed\n) as id,\n    cast(link as char(1024)) as link,\n    cast(deleted as \n    signed\n) as deleted,\n    cast(loai_tb as char(1024)) as loai_tb,\n    cast(so_tbmt as char(1024)) as so_tbmt,\n    cast(linh_vuc as char(1024)) as linh_vuc,\n    cast(services as char(6144)) as services,\n    cast(nguon_von as char(1024)) as nguon_von,\n    cast(phan_loai as char(1024)) as phan_loai,\n    cast(tien_dbdt as char(1024)) as tien_dbdt,\n    cast(`timestamp` as char(1024)) as `timestamp`,\n    cast(company_id as char(1024)) as company_id,\n    cast(ten_khlcnt as char(1024)) as ten_khlcnt,\n    cast(trang_thai as \n    signed\n) as trang_thai,\n    cast(gia_du_toan as char(1024)) as gia_du_toan,\n    cast(ten_du_toan as char(1024)) as ten_du_toan,\n    cast(ben_moi_thau as char(1024)) as ben_moi_thau,\n    cast(gia_goi_thau as char(1024)) as gia_goi_thau,\n    cast(hinh_thuc_tb as char(1024)) as hinh_thuc_tb,\n    cast(send_mail_id as char(1024)) as send_mail_id,\n    cast(ten_goi_thau as char(1024)) as ten_goi_thau,\n    cast(competitor_id as char(1024)) as competitor_id,\n    cast(loai_hop_dong as char(1024)) as loai_hop_dong,\n    cast(score_by_name as \n    float\n) as score_by_name,\n    cast(score_service as \n    float\n) as score_service,\n    cast(gia_trung_thau as char(1024)) as gia_trung_thau,\n    cast(hinh_thuc_dbdt as char(1024)) as hinh_thuc_dbdt,\n    cast(hinh_thuc_lcnt as char(1024)) as hinh_thuc_lcnt,\n    cast(ngay_phe_duyet as char(1024)) as ngay_phe_duyet,\n    cast(score_by_scope as \n    float\n) as score_by_scope,\n    cast(so_hieu_khlcnt as char(1024)) as so_hieu_khlcnt,\n    cast(hieu_luc_e_hsdt as char(1024)) as hieu_luc_e_hsdt,\n    cast(so_tbmt_version as char(1024)) as so_tbmt_version,\n    cast(dia_diem_mo_thau as char(1024)) as dia_diem_mo_thau,\n    cast(phuong_thuc_lcnt as char(1024)) as phuong_thuc_lcnt,\n    cast(services_by_name as char(6144)) as services_by_name,\n    cast(don_vi_trung_thau as char(1024)) as don_vi_trung_thau,\n    cast(hinh_thuc_du_thau as char(1024)) as hinh_thuc_du_thau,\n    cast(services_by_scope as char(6144)) as services_by_scope,\n    cast(dia_diem_nhan_hsdt as char(1024)) as dia_diem_nhan_hsdt,\n    cast(dia_diem_thuc_hien as char(1024)) as dia_diem_thuc_hien,\n    cast(nhan_e_hsdt_tu_ngay as char(1024)) as nhan_e_hsdt_tu_ngay,\n    cast(thoi_gian_thuc_hien as char(1024)) as thoi_gian_thuc_hien,\n    cast(nhan_e_hsdt_den_ngay as char(1024)) as nhan_e_hsdt_den_ngay,\n    cast(thoi_diem_dong_mo_thau as char(1024)) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom __dbt__cte__thong_tin_goi_thau_ab1\n-- thong_tin_goi_thau\nwhere 1 = 1", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.airbyte_utils.thong_tin_goi_thau_ab1", "sql": " __dbt__cte__thong_tin_goi_thau_ab1 as (\n\n-- SQL model to parse JSON blob stored in a single column and extract into separated field columns as described by the JSON Schema\n-- depends_on: bid._airbyte_raw_thong_tin_goi_thau\nselect\n    json_value(_airbyte_data, \n    '$.\"id\"' RETURNING CHAR) as id,\n    json_value(_airbyte_data, \n    '$.\"link\"' RETURNING CHAR) as link,\n    json_value(_airbyte_data, \n    '$.\"deleted\"' RETURNING CHAR) as deleted,\n    json_value(_airbyte_data, \n    '$.\"loai_tb\"' RETURNING CHAR) as loai_tb,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt\"' RETURNING CHAR) as so_tbmt,\n    json_value(_airbyte_data, \n    '$.\"linh_vuc\"' RETURNING CHAR) as linh_vuc,\n    json_value(_airbyte_data, \n    '$.\"services\"' RETURNING CHAR) as services,\n    json_value(_airbyte_data, \n    '$.\"nguon_von\"' RETURNING CHAR) as nguon_von,\n    json_value(_airbyte_data, \n    '$.\"phan_loai\"' RETURNING CHAR) as phan_loai,\n    json_value(_airbyte_data, \n    '$.\"tien_dbdt\"' RETURNING CHAR) as tien_dbdt,\n    json_value(_airbyte_data, \n    '$.\"timestamp\"' RETURNING CHAR) as `timestamp`,\n    json_value(_airbyte_data, \n    '$.\"company_id\"' RETURNING CHAR) as company_id,\n    json_value(_airbyte_data, \n    '$.\"ten_khlcnt\"' RETURNING CHAR) as ten_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"trang_thai\"' RETURNING CHAR) as trang_thai,\n    json_value(_airbyte_data, \n    '$.\"gia_du_toan\"' RETURNING CHAR) as gia_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ten_du_toan\"' RETURNING CHAR) as ten_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ben_moi_thau\"' RETURNING CHAR) as ben_moi_thau,\n    json_value(_airbyte_data, \n    '$.\"gia_goi_thau\"' RETURNING CHAR) as gia_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_tb\"' RETURNING CHAR) as hinh_thuc_tb,\n    json_value(_airbyte_data, \n    '$.\"send_mail_id\"' RETURNING CHAR) as send_mail_id,\n    json_value(_airbyte_data, \n    '$.\"ten_goi_thau\"' RETURNING CHAR) as ten_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"competitor_id\"' RETURNING CHAR) as competitor_id,\n    json_value(_airbyte_data, \n    '$.\"loai_hop_dong\"' RETURNING CHAR) as loai_hop_dong,\n    json_value(_airbyte_data, \n    '$.\"score_by_name\"' RETURNING CHAR) as score_by_name,\n    json_value(_airbyte_data, \n    '$.\"score_service\"' RETURNING CHAR) as score_service,\n    json_value(_airbyte_data, \n    '$.\"gia_trung_thau\"' RETURNING CHAR) as gia_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_dbdt\"' RETURNING CHAR) as hinh_thuc_dbdt,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_lcnt\"' RETURNING CHAR) as hinh_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"ngay_phe_duyet\"' RETURNING CHAR) as ngay_phe_duyet,\n    json_value(_airbyte_data, \n    '$.\"score_by_scope\"' RETURNING CHAR) as score_by_scope,\n    json_value(_airbyte_data, \n    '$.\"so_hieu_khlcnt\"' RETURNING CHAR) as so_hieu_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"hieu_luc_e_hsdt\"' RETURNING CHAR) as hieu_luc_e_hsdt,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt_version\"' RETURNING CHAR) as so_tbmt_version,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_mo_thau\"' RETURNING CHAR) as dia_diem_mo_thau,\n    json_value(_airbyte_data, \n    '$.\"phuong_thuc_lcnt\"' RETURNING CHAR) as phuong_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"services_by_name\"' RETURNING CHAR) as services_by_name,\n    json_value(_airbyte_data, \n    '$.\"don_vi_trung_thau\"' RETURNING CHAR) as don_vi_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_du_thau\"' RETURNING CHAR) as hinh_thuc_du_thau,\n    json_value(_airbyte_data, \n    '$.\"services_by_scope\"' RETURNING CHAR) as services_by_scope,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_nhan_hsdt\"' RETURNING CHAR) as dia_diem_nhan_hsdt,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_thuc_hien\"' RETURNING CHAR) as dia_diem_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_tu_ngay\"' RETURNING CHAR) as nhan_e_hsdt_tu_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_gian_thuc_hien\"' RETURNING CHAR) as thoi_gian_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_den_ngay\"' RETURNING CHAR) as nhan_e_hsdt_den_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_diem_dong_mo_thau\"' RETURNING CHAR) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom bid._airbyte_raw_thong_tin_goi_thau as table_alias\n-- thong_tin_goi_thau\nwhere 1 = 1\n)"}], "relation_name": null}, "model.airbyte_utils.thong_tin_goi_thau_ab3": {"raw_sql": "{{ config(\n    unique_key = '_airbyte_ab_id',\n    schema = \"_airbyte_bid\",\n    tags = [ \"top-level-intermediate\" ]\n) }}\n-- SQL model to build a hash column based on the values of this record\n-- depends_on: {{ ref('thong_tin_goi_thau_ab2') }}\nselect\n    {{ dbt_utils.surrogate_key([\n        'id',\n        'link',\n        'deleted',\n        'loai_tb',\n        'so_tbmt',\n        'linh_vuc',\n        'services',\n        'nguon_von',\n        'phan_loai',\n        'tien_dbdt',\n        adapter.quote('timestamp'),\n        'company_id',\n        'ten_khlcnt',\n        'trang_thai',\n        'gia_du_toan',\n        'ten_du_toan',\n        'ben_moi_thau',\n        'gia_goi_thau',\n        'hinh_thuc_tb',\n        'send_mail_id',\n        'ten_goi_thau',\n        'competitor_id',\n        'loai_hop_dong',\n        'score_by_name',\n        'score_service',\n        'gia_trung_thau',\n        'hinh_thuc_dbdt',\n        'hinh_thuc_lcnt',\n        'ngay_phe_duyet',\n        'score_by_scope',\n        'so_hieu_khlcnt',\n        'hieu_luc_e_hsdt',\n        'so_tbmt_version',\n        'dia_diem_mo_thau',\n        'phuong_thuc_lcnt',\n        'services_by_name',\n        'don_vi_trung_thau',\n        'hinh_thuc_du_thau',\n        'services_by_scope',\n        'dia_diem_nhan_hsdt',\n        'dia_diem_thuc_hien',\n        'nhan_e_hsdt_tu_ngay',\n        'thoi_gian_thuc_hien',\n        'nhan_e_hsdt_den_ngay',\n        'thoi_diem_dong_mo_thau',\n    ]) }} as _airbyte_thong_tin_goi_thau_hashid,\n    tmp.*\nfrom {{ ref('thong_tin_goi_thau_ab2') }} tmp\n-- thong_tin_goi_thau\nwhere 1 = 1", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key"], "nodes": ["model.airbyte_utils.thong_tin_goi_thau_ab2", "model.airbyte_utils.thong_tin_goi_thau_ab2"]}, "config": {"enabled": true, "alias": null, "schema": "_airbyte_bid", "database": null, "tags": ["airbyte_internal_cte", "top-level-intermediate"], "meta": {}, "materialized": "ephemeral", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "_airbyte_ab_id", "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": null, "schema": "_airbyte_bid", "fqn": ["airbyte_utils", "generated", "airbyte_ctes", "bid", "thong_tin_goi_thau_ab3"], "unique_id": "model.airbyte_utils.thong_tin_goi_thau_ab3", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "generated/airbyte_ctes/bid/thong_tin_goi_thau_ab3.sql", "original_file_path": "models/generated/airbyte_ctes/bid/thong_tin_goi_thau_ab3.sql", "name": "thong_tin_goi_thau_ab3", "alias": "thong_tin_goi_thau_ab3", "checksum": {"name": "sha256", "checksum": "89fdcad8ad84752f95c8022d2a7e91c0937fd84da53e37fe1302eac674ea1326"}, "tags": ["airbyte_internal_cte", "top-level-intermediate"], "refs": [["thong_tin_goi_thau_ab2"], ["thong_tin_goi_thau_ab2"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "build/compiled/airbyte_utils/models/generated/airbyte_ctes/bid/thong_tin_goi_thau_ab3.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["top-level-intermediate"], "unique_key": "_airbyte_ab_id", "schema": "_airbyte_bid"}, "created_at": 1677145224.140748, "compiled_sql": "\nwith __dbt__cte__thong_tin_goi_thau_ab1 as (\n\n-- SQL model to parse JSON blob stored in a single column and extract into separated field columns as described by the JSON Schema\n-- depends_on: bid._airbyte_raw_thong_tin_goi_thau\nselect\n    json_value(_airbyte_data, \n    '$.\"id\"' RETURNING CHAR) as id,\n    json_value(_airbyte_data, \n    '$.\"link\"' RETURNING CHAR) as link,\n    json_value(_airbyte_data, \n    '$.\"deleted\"' RETURNING CHAR) as deleted,\n    json_value(_airbyte_data, \n    '$.\"loai_tb\"' RETURNING CHAR) as loai_tb,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt\"' RETURNING CHAR) as so_tbmt,\n    json_value(_airbyte_data, \n    '$.\"linh_vuc\"' RETURNING CHAR) as linh_vuc,\n    json_value(_airbyte_data, \n    '$.\"services\"' RETURNING CHAR) as services,\n    json_value(_airbyte_data, \n    '$.\"nguon_von\"' RETURNING CHAR) as nguon_von,\n    json_value(_airbyte_data, \n    '$.\"phan_loai\"' RETURNING CHAR) as phan_loai,\n    json_value(_airbyte_data, \n    '$.\"tien_dbdt\"' RETURNING CHAR) as tien_dbdt,\n    json_value(_airbyte_data, \n    '$.\"timestamp\"' RETURNING CHAR) as `timestamp`,\n    json_value(_airbyte_data, \n    '$.\"company_id\"' RETURNING CHAR) as company_id,\n    json_value(_airbyte_data, \n    '$.\"ten_khlcnt\"' RETURNING CHAR) as ten_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"trang_thai\"' RETURNING CHAR) as trang_thai,\n    json_value(_airbyte_data, \n    '$.\"gia_du_toan\"' RETURNING CHAR) as gia_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ten_du_toan\"' RETURNING CHAR) as ten_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ben_moi_thau\"' RETURNING CHAR) as ben_moi_thau,\n    json_value(_airbyte_data, \n    '$.\"gia_goi_thau\"' RETURNING CHAR) as gia_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_tb\"' RETURNING CHAR) as hinh_thuc_tb,\n    json_value(_airbyte_data, \n    '$.\"send_mail_id\"' RETURNING CHAR) as send_mail_id,\n    json_value(_airbyte_data, \n    '$.\"ten_goi_thau\"' RETURNING CHAR) as ten_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"competitor_id\"' RETURNING CHAR) as competitor_id,\n    json_value(_airbyte_data, \n    '$.\"loai_hop_dong\"' RETURNING CHAR) as loai_hop_dong,\n    json_value(_airbyte_data, \n    '$.\"score_by_name\"' RETURNING CHAR) as score_by_name,\n    json_value(_airbyte_data, \n    '$.\"score_service\"' RETURNING CHAR) as score_service,\n    json_value(_airbyte_data, \n    '$.\"gia_trung_thau\"' RETURNING CHAR) as gia_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_dbdt\"' RETURNING CHAR) as hinh_thuc_dbdt,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_lcnt\"' RETURNING CHAR) as hinh_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"ngay_phe_duyet\"' RETURNING CHAR) as ngay_phe_duyet,\n    json_value(_airbyte_data, \n    '$.\"score_by_scope\"' RETURNING CHAR) as score_by_scope,\n    json_value(_airbyte_data, \n    '$.\"so_hieu_khlcnt\"' RETURNING CHAR) as so_hieu_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"hieu_luc_e_hsdt\"' RETURNING CHAR) as hieu_luc_e_hsdt,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt_version\"' RETURNING CHAR) as so_tbmt_version,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_mo_thau\"' RETURNING CHAR) as dia_diem_mo_thau,\n    json_value(_airbyte_data, \n    '$.\"phuong_thuc_lcnt\"' RETURNING CHAR) as phuong_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"services_by_name\"' RETURNING CHAR) as services_by_name,\n    json_value(_airbyte_data, \n    '$.\"don_vi_trung_thau\"' RETURNING CHAR) as don_vi_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_du_thau\"' RETURNING CHAR) as hinh_thuc_du_thau,\n    json_value(_airbyte_data, \n    '$.\"services_by_scope\"' RETURNING CHAR) as services_by_scope,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_nhan_hsdt\"' RETURNING CHAR) as dia_diem_nhan_hsdt,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_thuc_hien\"' RETURNING CHAR) as dia_diem_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_tu_ngay\"' RETURNING CHAR) as nhan_e_hsdt_tu_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_gian_thuc_hien\"' RETURNING CHAR) as thoi_gian_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_den_ngay\"' RETURNING CHAR) as nhan_e_hsdt_den_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_diem_dong_mo_thau\"' RETURNING CHAR) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom bid._airbyte_raw_thong_tin_goi_thau as table_alias\n-- thong_tin_goi_thau\nwhere 1 = 1\n),  __dbt__cte__thong_tin_goi_thau_ab2 as (\n\n-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type\n-- depends_on: __dbt__cte__thong_tin_goi_thau_ab1\nselect\n    cast(id as \n    signed\n) as id,\n    cast(link as char(1024)) as link,\n    cast(deleted as \n    signed\n) as deleted,\n    cast(loai_tb as char(1024)) as loai_tb,\n    cast(so_tbmt as char(1024)) as so_tbmt,\n    cast(linh_vuc as char(1024)) as linh_vuc,\n    cast(services as char(6144)) as services,\n    cast(nguon_von as char(1024)) as nguon_von,\n    cast(phan_loai as char(1024)) as phan_loai,\n    cast(tien_dbdt as char(1024)) as tien_dbdt,\n    cast(`timestamp` as char(1024)) as `timestamp`,\n    cast(company_id as char(1024)) as company_id,\n    cast(ten_khlcnt as char(1024)) as ten_khlcnt,\n    cast(trang_thai as \n    signed\n) as trang_thai,\n    cast(gia_du_toan as char(1024)) as gia_du_toan,\n    cast(ten_du_toan as char(1024)) as ten_du_toan,\n    cast(ben_moi_thau as char(1024)) as ben_moi_thau,\n    cast(gia_goi_thau as char(1024)) as gia_goi_thau,\n    cast(hinh_thuc_tb as char(1024)) as hinh_thuc_tb,\n    cast(send_mail_id as char(1024)) as send_mail_id,\n    cast(ten_goi_thau as char(1024)) as ten_goi_thau,\n    cast(competitor_id as char(1024)) as competitor_id,\n    cast(loai_hop_dong as char(1024)) as loai_hop_dong,\n    cast(score_by_name as \n    float\n) as score_by_name,\n    cast(score_service as \n    float\n) as score_service,\n    cast(gia_trung_thau as char(1024)) as gia_trung_thau,\n    cast(hinh_thuc_dbdt as char(1024)) as hinh_thuc_dbdt,\n    cast(hinh_thuc_lcnt as char(1024)) as hinh_thuc_lcnt,\n    cast(ngay_phe_duyet as char(1024)) as ngay_phe_duyet,\n    cast(score_by_scope as \n    float\n) as score_by_scope,\n    cast(so_hieu_khlcnt as char(1024)) as so_hieu_khlcnt,\n    cast(hieu_luc_e_hsdt as char(1024)) as hieu_luc_e_hsdt,\n    cast(so_tbmt_version as char(1024)) as so_tbmt_version,\n    cast(dia_diem_mo_thau as char(1024)) as dia_diem_mo_thau,\n    cast(phuong_thuc_lcnt as char(1024)) as phuong_thuc_lcnt,\n    cast(services_by_name as char(6144)) as services_by_name,\n    cast(don_vi_trung_thau as char(1024)) as don_vi_trung_thau,\n    cast(hinh_thuc_du_thau as char(1024)) as hinh_thuc_du_thau,\n    cast(services_by_scope as char(6144)) as services_by_scope,\n    cast(dia_diem_nhan_hsdt as char(1024)) as dia_diem_nhan_hsdt,\n    cast(dia_diem_thuc_hien as char(1024)) as dia_diem_thuc_hien,\n    cast(nhan_e_hsdt_tu_ngay as char(1024)) as nhan_e_hsdt_tu_ngay,\n    cast(thoi_gian_thuc_hien as char(1024)) as thoi_gian_thuc_hien,\n    cast(nhan_e_hsdt_den_ngay as char(1024)) as nhan_e_hsdt_den_ngay,\n    cast(thoi_diem_dong_mo_thau as char(1024)) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom __dbt__cte__thong_tin_goi_thau_ab1\n-- thong_tin_goi_thau\nwhere 1 = 1\n)-- SQL model to build a hash column based on the values of this record\n-- depends_on: __dbt__cte__thong_tin_goi_thau_ab2\nselect\n    md5(cast(concat(coalesce(cast(id as char), ''), '-', coalesce(cast(link as char), ''), '-', coalesce(cast(deleted as char), ''), '-', coalesce(cast(loai_tb as char), ''), '-', coalesce(cast(so_tbmt as char), ''), '-', coalesce(cast(linh_vuc as char), ''), '-', coalesce(cast(services as char), ''), '-', coalesce(cast(nguon_von as char), ''), '-', coalesce(cast(phan_loai as char), ''), '-', coalesce(cast(tien_dbdt as char), ''), '-', coalesce(cast(`timestamp` as char), ''), '-', coalesce(cast(company_id as char), ''), '-', coalesce(cast(ten_khlcnt as char), ''), '-', coalesce(cast(trang_thai as char), ''), '-', coalesce(cast(gia_du_toan as char), ''), '-', coalesce(cast(ten_du_toan as char), ''), '-', coalesce(cast(ben_moi_thau as char), ''), '-', coalesce(cast(gia_goi_thau as char), ''), '-', coalesce(cast(hinh_thuc_tb as char), ''), '-', coalesce(cast(send_mail_id as char), ''), '-', coalesce(cast(ten_goi_thau as char), ''), '-', coalesce(cast(competitor_id as char), ''), '-', coalesce(cast(loai_hop_dong as char), ''), '-', coalesce(cast(score_by_name as char), ''), '-', coalesce(cast(score_service as char), ''), '-', coalesce(cast(gia_trung_thau as char), ''), '-', coalesce(cast(hinh_thuc_dbdt as char), ''), '-', coalesce(cast(hinh_thuc_lcnt as char), ''), '-', coalesce(cast(ngay_phe_duyet as char), ''), '-', coalesce(cast(score_by_scope as char), ''), '-', coalesce(cast(so_hieu_khlcnt as char), ''), '-', coalesce(cast(hieu_luc_e_hsdt as char), ''), '-', coalesce(cast(so_tbmt_version as char), ''), '-', coalesce(cast(dia_diem_mo_thau as char), ''), '-', coalesce(cast(phuong_thuc_lcnt as char), ''), '-', coalesce(cast(services_by_name as char), ''), '-', coalesce(cast(don_vi_trung_thau as char), ''), '-', coalesce(cast(hinh_thuc_du_thau as char), ''), '-', coalesce(cast(services_by_scope as char), ''), '-', coalesce(cast(dia_diem_nhan_hsdt as char), ''), '-', coalesce(cast(dia_diem_thuc_hien as char), ''), '-', coalesce(cast(nhan_e_hsdt_tu_ngay as char), ''), '-', coalesce(cast(thoi_gian_thuc_hien as char), ''), '-', coalesce(cast(nhan_e_hsdt_den_ngay as char), ''), '-', coalesce(cast(thoi_diem_dong_mo_thau as char), '')) as char)) as _airbyte_thong_tin_goi_thau_hashid,\n    tmp.*\nfrom __dbt__cte__thong_tin_goi_thau_ab2 tmp\n-- thong_tin_goi_thau\nwhere 1 = 1", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.airbyte_utils.thong_tin_goi_thau_ab1", "sql": " __dbt__cte__thong_tin_goi_thau_ab1 as (\n\n-- SQL model to parse JSON blob stored in a single column and extract into separated field columns as described by the JSON Schema\n-- depends_on: bid._airbyte_raw_thong_tin_goi_thau\nselect\n    json_value(_airbyte_data, \n    '$.\"id\"' RETURNING CHAR) as id,\n    json_value(_airbyte_data, \n    '$.\"link\"' RETURNING CHAR) as link,\n    json_value(_airbyte_data, \n    '$.\"deleted\"' RETURNING CHAR) as deleted,\n    json_value(_airbyte_data, \n    '$.\"loai_tb\"' RETURNING CHAR) as loai_tb,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt\"' RETURNING CHAR) as so_tbmt,\n    json_value(_airbyte_data, \n    '$.\"linh_vuc\"' RETURNING CHAR) as linh_vuc,\n    json_value(_airbyte_data, \n    '$.\"services\"' RETURNING CHAR) as services,\n    json_value(_airbyte_data, \n    '$.\"nguon_von\"' RETURNING CHAR) as nguon_von,\n    json_value(_airbyte_data, \n    '$.\"phan_loai\"' RETURNING CHAR) as phan_loai,\n    json_value(_airbyte_data, \n    '$.\"tien_dbdt\"' RETURNING CHAR) as tien_dbdt,\n    json_value(_airbyte_data, \n    '$.\"timestamp\"' RETURNING CHAR) as `timestamp`,\n    json_value(_airbyte_data, \n    '$.\"company_id\"' RETURNING CHAR) as company_id,\n    json_value(_airbyte_data, \n    '$.\"ten_khlcnt\"' RETURNING CHAR) as ten_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"trang_thai\"' RETURNING CHAR) as trang_thai,\n    json_value(_airbyte_data, \n    '$.\"gia_du_toan\"' RETURNING CHAR) as gia_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ten_du_toan\"' RETURNING CHAR) as ten_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ben_moi_thau\"' RETURNING CHAR) as ben_moi_thau,\n    json_value(_airbyte_data, \n    '$.\"gia_goi_thau\"' RETURNING CHAR) as gia_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_tb\"' RETURNING CHAR) as hinh_thuc_tb,\n    json_value(_airbyte_data, \n    '$.\"send_mail_id\"' RETURNING CHAR) as send_mail_id,\n    json_value(_airbyte_data, \n    '$.\"ten_goi_thau\"' RETURNING CHAR) as ten_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"competitor_id\"' RETURNING CHAR) as competitor_id,\n    json_value(_airbyte_data, \n    '$.\"loai_hop_dong\"' RETURNING CHAR) as loai_hop_dong,\n    json_value(_airbyte_data, \n    '$.\"score_by_name\"' RETURNING CHAR) as score_by_name,\n    json_value(_airbyte_data, \n    '$.\"score_service\"' RETURNING CHAR) as score_service,\n    json_value(_airbyte_data, \n    '$.\"gia_trung_thau\"' RETURNING CHAR) as gia_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_dbdt\"' RETURNING CHAR) as hinh_thuc_dbdt,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_lcnt\"' RETURNING CHAR) as hinh_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"ngay_phe_duyet\"' RETURNING CHAR) as ngay_phe_duyet,\n    json_value(_airbyte_data, \n    '$.\"score_by_scope\"' RETURNING CHAR) as score_by_scope,\n    json_value(_airbyte_data, \n    '$.\"so_hieu_khlcnt\"' RETURNING CHAR) as so_hieu_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"hieu_luc_e_hsdt\"' RETURNING CHAR) as hieu_luc_e_hsdt,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt_version\"' RETURNING CHAR) as so_tbmt_version,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_mo_thau\"' RETURNING CHAR) as dia_diem_mo_thau,\n    json_value(_airbyte_data, \n    '$.\"phuong_thuc_lcnt\"' RETURNING CHAR) as phuong_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"services_by_name\"' RETURNING CHAR) as services_by_name,\n    json_value(_airbyte_data, \n    '$.\"don_vi_trung_thau\"' RETURNING CHAR) as don_vi_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_du_thau\"' RETURNING CHAR) as hinh_thuc_du_thau,\n    json_value(_airbyte_data, \n    '$.\"services_by_scope\"' RETURNING CHAR) as services_by_scope,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_nhan_hsdt\"' RETURNING CHAR) as dia_diem_nhan_hsdt,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_thuc_hien\"' RETURNING CHAR) as dia_diem_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_tu_ngay\"' RETURNING CHAR) as nhan_e_hsdt_tu_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_gian_thuc_hien\"' RETURNING CHAR) as thoi_gian_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_den_ngay\"' RETURNING CHAR) as nhan_e_hsdt_den_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_diem_dong_mo_thau\"' RETURNING CHAR) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom bid._airbyte_raw_thong_tin_goi_thau as table_alias\n-- thong_tin_goi_thau\nwhere 1 = 1\n)"}, {"id": "model.airbyte_utils.thong_tin_goi_thau_ab2", "sql": " __dbt__cte__thong_tin_goi_thau_ab2 as (\n\n-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type\n-- depends_on: __dbt__cte__thong_tin_goi_thau_ab1\nselect\n    cast(id as \n    signed\n) as id,\n    cast(link as char(1024)) as link,\n    cast(deleted as \n    signed\n) as deleted,\n    cast(loai_tb as char(1024)) as loai_tb,\n    cast(so_tbmt as char(1024)) as so_tbmt,\n    cast(linh_vuc as char(1024)) as linh_vuc,\n    cast(services as char(6144)) as services,\n    cast(nguon_von as char(1024)) as nguon_von,\n    cast(phan_loai as char(1024)) as phan_loai,\n    cast(tien_dbdt as char(1024)) as tien_dbdt,\n    cast(`timestamp` as char(1024)) as `timestamp`,\n    cast(company_id as char(1024)) as company_id,\n    cast(ten_khlcnt as char(1024)) as ten_khlcnt,\n    cast(trang_thai as \n    signed\n) as trang_thai,\n    cast(gia_du_toan as char(1024)) as gia_du_toan,\n    cast(ten_du_toan as char(1024)) as ten_du_toan,\n    cast(ben_moi_thau as char(1024)) as ben_moi_thau,\n    cast(gia_goi_thau as char(1024)) as gia_goi_thau,\n    cast(hinh_thuc_tb as char(1024)) as hinh_thuc_tb,\n    cast(send_mail_id as char(1024)) as send_mail_id,\n    cast(ten_goi_thau as char(1024)) as ten_goi_thau,\n    cast(competitor_id as char(1024)) as competitor_id,\n    cast(loai_hop_dong as char(1024)) as loai_hop_dong,\n    cast(score_by_name as \n    float\n) as score_by_name,\n    cast(score_service as \n    float\n) as score_service,\n    cast(gia_trung_thau as char(1024)) as gia_trung_thau,\n    cast(hinh_thuc_dbdt as char(1024)) as hinh_thuc_dbdt,\n    cast(hinh_thuc_lcnt as char(1024)) as hinh_thuc_lcnt,\n    cast(ngay_phe_duyet as char(1024)) as ngay_phe_duyet,\n    cast(score_by_scope as \n    float\n) as score_by_scope,\n    cast(so_hieu_khlcnt as char(1024)) as so_hieu_khlcnt,\n    cast(hieu_luc_e_hsdt as char(1024)) as hieu_luc_e_hsdt,\n    cast(so_tbmt_version as char(1024)) as so_tbmt_version,\n    cast(dia_diem_mo_thau as char(1024)) as dia_diem_mo_thau,\n    cast(phuong_thuc_lcnt as char(1024)) as phuong_thuc_lcnt,\n    cast(services_by_name as char(6144)) as services_by_name,\n    cast(don_vi_trung_thau as char(1024)) as don_vi_trung_thau,\n    cast(hinh_thuc_du_thau as char(1024)) as hinh_thuc_du_thau,\n    cast(services_by_scope as char(6144)) as services_by_scope,\n    cast(dia_diem_nhan_hsdt as char(1024)) as dia_diem_nhan_hsdt,\n    cast(dia_diem_thuc_hien as char(1024)) as dia_diem_thuc_hien,\n    cast(nhan_e_hsdt_tu_ngay as char(1024)) as nhan_e_hsdt_tu_ngay,\n    cast(thoi_gian_thuc_hien as char(1024)) as thoi_gian_thuc_hien,\n    cast(nhan_e_hsdt_den_ngay as char(1024)) as nhan_e_hsdt_den_ngay,\n    cast(thoi_diem_dong_mo_thau as char(1024)) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom __dbt__cte__thong_tin_goi_thau_ab1\n-- thong_tin_goi_thau\nwhere 1 = 1\n)"}], "relation_name": null}, "model.airbyte_utils.thong_tin_goi_thau_ab1": {"raw_sql": "{{ config(\n    unique_key = '_airbyte_ab_id',\n    schema = \"_airbyte_bid\",\n    tags = [ \"top-level-intermediate\" ]\n) }}\n-- SQL model to parse JSON blob stored in a single column and extract into separated field columns as described by the JSON Schema\n-- depends_on: {{ source('bid', '_airbyte_raw_thong_tin_goi_thau') }}\nselect\n    {{ json_extract_scalar('_airbyte_data', ['id'], ['id']) }} as id,\n    {{ json_extract_scalar('_airbyte_data', ['link'], ['link']) }} as link,\n    {{ json_extract_scalar('_airbyte_data', ['deleted'], ['deleted']) }} as deleted,\n    {{ json_extract_scalar('_airbyte_data', ['loai_tb'], ['loai_tb']) }} as loai_tb,\n    {{ json_extract_scalar('_airbyte_data', ['so_tbmt'], ['so_tbmt']) }} as so_tbmt,\n    {{ json_extract_scalar('_airbyte_data', ['linh_vuc'], ['linh_vuc']) }} as linh_vuc,\n    {{ json_extract_scalar('_airbyte_data', ['services'], ['services']) }} as services,\n    {{ json_extract_scalar('_airbyte_data', ['nguon_von'], ['nguon_von']) }} as nguon_von,\n    {{ json_extract_scalar('_airbyte_data', ['phan_loai'], ['phan_loai']) }} as phan_loai,\n    {{ json_extract_scalar('_airbyte_data', ['tien_dbdt'], ['tien_dbdt']) }} as tien_dbdt,\n    {{ json_extract_scalar('_airbyte_data', ['timestamp'], ['timestamp']) }} as {{ adapter.quote('timestamp') }},\n    {{ json_extract_scalar('_airbyte_data', ['company_id'], ['company_id']) }} as company_id,\n    {{ json_extract_scalar('_airbyte_data', ['ten_khlcnt'], ['ten_khlcnt']) }} as ten_khlcnt,\n    {{ json_extract_scalar('_airbyte_data', ['trang_thai'], ['trang_thai']) }} as trang_thai,\n    {{ json_extract_scalar('_airbyte_data', ['gia_du_toan'], ['gia_du_toan']) }} as gia_du_toan,\n    {{ json_extract_scalar('_airbyte_data', ['ten_du_toan'], ['ten_du_toan']) }} as ten_du_toan,\n    {{ json_extract_scalar('_airbyte_data', ['ben_moi_thau'], ['ben_moi_thau']) }} as ben_moi_thau,\n    {{ json_extract_scalar('_airbyte_data', ['gia_goi_thau'], ['gia_goi_thau']) }} as gia_goi_thau,\n    {{ json_extract_scalar('_airbyte_data', ['hinh_thuc_tb'], ['hinh_thuc_tb']) }} as hinh_thuc_tb,\n    {{ json_extract_scalar('_airbyte_data', ['send_mail_id'], ['send_mail_id']) }} as send_mail_id,\n    {{ json_extract_scalar('_airbyte_data', ['ten_goi_thau'], ['ten_goi_thau']) }} as ten_goi_thau,\n    {{ json_extract_scalar('_airbyte_data', ['competitor_id'], ['competitor_id']) }} as competitor_id,\n    {{ json_extract_scalar('_airbyte_data', ['loai_hop_dong'], ['loai_hop_dong']) }} as loai_hop_dong,\n    {{ json_extract_scalar('_airbyte_data', ['score_by_name'], ['score_by_name']) }} as score_by_name,\n    {{ json_extract_scalar('_airbyte_data', ['score_service'], ['score_service']) }} as score_service,\n    {{ json_extract_scalar('_airbyte_data', ['gia_trung_thau'], ['gia_trung_thau']) }} as gia_trung_thau,\n    {{ json_extract_scalar('_airbyte_data', ['hinh_thuc_dbdt'], ['hinh_thuc_dbdt']) }} as hinh_thuc_dbdt,\n    {{ json_extract_scalar('_airbyte_data', ['hinh_thuc_lcnt'], ['hinh_thuc_lcnt']) }} as hinh_thuc_lcnt,\n    {{ json_extract_scalar('_airbyte_data', ['ngay_phe_duyet'], ['ngay_phe_duyet']) }} as ngay_phe_duyet,\n    {{ json_extract_scalar('_airbyte_data', ['score_by_scope'], ['score_by_scope']) }} as score_by_scope,\n    {{ json_extract_scalar('_airbyte_data', ['so_hieu_khlcnt'], ['so_hieu_khlcnt']) }} as so_hieu_khlcnt,\n    {{ json_extract_scalar('_airbyte_data', ['hieu_luc_e_hsdt'], ['hieu_luc_e_hsdt']) }} as hieu_luc_e_hsdt,\n    {{ json_extract_scalar('_airbyte_data', ['so_tbmt_version'], ['so_tbmt_version']) }} as so_tbmt_version,\n    {{ json_extract_scalar('_airbyte_data', ['dia_diem_mo_thau'], ['dia_diem_mo_thau']) }} as dia_diem_mo_thau,\n    {{ json_extract_scalar('_airbyte_data', ['phuong_thuc_lcnt'], ['phuong_thuc_lcnt']) }} as phuong_thuc_lcnt,\n    {{ json_extract_scalar('_airbyte_data', ['services_by_name'], ['services_by_name']) }} as services_by_name,\n    {{ json_extract_scalar('_airbyte_data', ['don_vi_trung_thau'], ['don_vi_trung_thau']) }} as don_vi_trung_thau,\n    {{ json_extract_scalar('_airbyte_data', ['hinh_thuc_du_thau'], ['hinh_thuc_du_thau']) }} as hinh_thuc_du_thau,\n    {{ json_extract_scalar('_airbyte_data', ['services_by_scope'], ['services_by_scope']) }} as services_by_scope,\n    {{ json_extract_scalar('_airbyte_data', ['dia_diem_nhan_hsdt'], ['dia_diem_nhan_hsdt']) }} as dia_diem_nhan_hsdt,\n    {{ json_extract_scalar('_airbyte_data', ['dia_diem_thuc_hien'], ['dia_diem_thuc_hien']) }} as dia_diem_thuc_hien,\n    {{ json_extract_scalar('_airbyte_data', ['nhan_e_hsdt_tu_ngay'], ['nhan_e_hsdt_tu_ngay']) }} as nhan_e_hsdt_tu_ngay,\n    {{ json_extract_scalar('_airbyte_data', ['thoi_gian_thuc_hien'], ['thoi_gian_thuc_hien']) }} as thoi_gian_thuc_hien,\n    {{ json_extract_scalar('_airbyte_data', ['nhan_e_hsdt_den_ngay'], ['nhan_e_hsdt_den_ngay']) }} as nhan_e_hsdt_den_ngay,\n    {{ json_extract_scalar('_airbyte_data', ['thoi_diem_dong_mo_thau'], ['thoi_diem_dong_mo_thau']) }} as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    {{ current_timestamp() }} as _airbyte_normalized_at\nfrom {{ source('bid', '_airbyte_raw_thong_tin_goi_thau') }} as table_alias\n-- thong_tin_goi_thau\nwhere 1 = 1", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.airbyte_utils.json_extract_scalar", "macro.dbt.current_timestamp"], "nodes": ["source.airbyte_utils.bid._airbyte_raw_thong_tin_goi_thau", "source.airbyte_utils.bid._airbyte_raw_thong_tin_goi_thau"]}, "config": {"enabled": true, "alias": null, "schema": "_airbyte_bid", "database": null, "tags": ["airbyte_internal_cte", "top-level-intermediate"], "meta": {}, "materialized": "ephemeral", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "_airbyte_ab_id", "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": null, "schema": "_airbyte_bid", "fqn": ["airbyte_utils", "generated", "airbyte_ctes", "bid", "thong_tin_goi_thau_ab1"], "unique_id": "model.airbyte_utils.thong_tin_goi_thau_ab1", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "generated/airbyte_ctes/bid/thong_tin_goi_thau_ab1.sql", "original_file_path": "models/generated/airbyte_ctes/bid/thong_tin_goi_thau_ab1.sql", "name": "thong_tin_goi_thau_ab1", "alias": "thong_tin_goi_thau_ab1", "checksum": {"name": "sha256", "checksum": "70871f736431b3217a829677917f82f010ebca8828095986419ae73a40094b48"}, "tags": ["airbyte_internal_cte", "top-level-intermediate"], "refs": [], "sources": [["bid", "_airbyte_raw_thong_tin_goi_thau"], ["bid", "_airbyte_raw_thong_tin_goi_thau"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "build/compiled/airbyte_utils/models/generated/airbyte_ctes/bid/thong_tin_goi_thau_ab1.sql", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "ephemeral", "tags": ["top-level-intermediate"], "unique_key": "_airbyte_ab_id", "schema": "_airbyte_bid"}, "created_at": 1677145224.189204, "compiled_sql": "\n-- SQL model to parse JSON blob stored in a single column and extract into separated field columns as described by the JSON Schema\n-- depends_on: bid._airbyte_raw_thong_tin_goi_thau\nselect\n    json_value(_airbyte_data, \n    '$.\"id\"' RETURNING CHAR) as id,\n    json_value(_airbyte_data, \n    '$.\"link\"' RETURNING CHAR) as link,\n    json_value(_airbyte_data, \n    '$.\"deleted\"' RETURNING CHAR) as deleted,\n    json_value(_airbyte_data, \n    '$.\"loai_tb\"' RETURNING CHAR) as loai_tb,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt\"' RETURNING CHAR) as so_tbmt,\n    json_value(_airbyte_data, \n    '$.\"linh_vuc\"' RETURNING CHAR) as linh_vuc,\n    json_value(_airbyte_data, \n    '$.\"services\"' RETURNING CHAR) as services,\n    json_value(_airbyte_data, \n    '$.\"nguon_von\"' RETURNING CHAR) as nguon_von,\n    json_value(_airbyte_data, \n    '$.\"phan_loai\"' RETURNING CHAR) as phan_loai,\n    json_value(_airbyte_data, \n    '$.\"tien_dbdt\"' RETURNING CHAR) as tien_dbdt,\n    json_value(_airbyte_data, \n    '$.\"timestamp\"' RETURNING CHAR) as `timestamp`,\n    json_value(_airbyte_data, \n    '$.\"company_id\"' RETURNING CHAR) as company_id,\n    json_value(_airbyte_data, \n    '$.\"ten_khlcnt\"' RETURNING CHAR) as ten_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"trang_thai\"' RETURNING CHAR) as trang_thai,\n    json_value(_airbyte_data, \n    '$.\"gia_du_toan\"' RETURNING CHAR) as gia_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ten_du_toan\"' RETURNING CHAR) as ten_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ben_moi_thau\"' RETURNING CHAR) as ben_moi_thau,\n    json_value(_airbyte_data, \n    '$.\"gia_goi_thau\"' RETURNING CHAR) as gia_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_tb\"' RETURNING CHAR) as hinh_thuc_tb,\n    json_value(_airbyte_data, \n    '$.\"send_mail_id\"' RETURNING CHAR) as send_mail_id,\n    json_value(_airbyte_data, \n    '$.\"ten_goi_thau\"' RETURNING CHAR) as ten_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"competitor_id\"' RETURNING CHAR) as competitor_id,\n    json_value(_airbyte_data, \n    '$.\"loai_hop_dong\"' RETURNING CHAR) as loai_hop_dong,\n    json_value(_airbyte_data, \n    '$.\"score_by_name\"' RETURNING CHAR) as score_by_name,\n    json_value(_airbyte_data, \n    '$.\"score_service\"' RETURNING CHAR) as score_service,\n    json_value(_airbyte_data, \n    '$.\"gia_trung_thau\"' RETURNING CHAR) as gia_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_dbdt\"' RETURNING CHAR) as hinh_thuc_dbdt,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_lcnt\"' RETURNING CHAR) as hinh_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"ngay_phe_duyet\"' RETURNING CHAR) as ngay_phe_duyet,\n    json_value(_airbyte_data, \n    '$.\"score_by_scope\"' RETURNING CHAR) as score_by_scope,\n    json_value(_airbyte_data, \n    '$.\"so_hieu_khlcnt\"' RETURNING CHAR) as so_hieu_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"hieu_luc_e_hsdt\"' RETURNING CHAR) as hieu_luc_e_hsdt,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt_version\"' RETURNING CHAR) as so_tbmt_version,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_mo_thau\"' RETURNING CHAR) as dia_diem_mo_thau,\n    json_value(_airbyte_data, \n    '$.\"phuong_thuc_lcnt\"' RETURNING CHAR) as phuong_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"services_by_name\"' RETURNING CHAR) as services_by_name,\n    json_value(_airbyte_data, \n    '$.\"don_vi_trung_thau\"' RETURNING CHAR) as don_vi_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_du_thau\"' RETURNING CHAR) as hinh_thuc_du_thau,\n    json_value(_airbyte_data, \n    '$.\"services_by_scope\"' RETURNING CHAR) as services_by_scope,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_nhan_hsdt\"' RETURNING CHAR) as dia_diem_nhan_hsdt,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_thuc_hien\"' RETURNING CHAR) as dia_diem_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_tu_ngay\"' RETURNING CHAR) as nhan_e_hsdt_tu_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_gian_thuc_hien\"' RETURNING CHAR) as thoi_gian_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_den_ngay\"' RETURNING CHAR) as nhan_e_hsdt_den_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_diem_dong_mo_thau\"' RETURNING CHAR) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom bid._airbyte_raw_thong_tin_goi_thau as table_alias\n-- thong_tin_goi_thau\nwhere 1 = 1", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "model.airbyte_utils.thong_tin_goi_thau": {"raw_sql": "{{ config(\n    unique_key = '_airbyte_ab_id',\n    schema = \"bid\",\n    post_hook = [\"\n                    {%\n                        set scd_table_relation = adapter.get_relation(\n                            database=this.database,\n                            schema=this.schema,\n                            identifier='thong_tin_goi_thau_scd'\n                        )\n                    %}\n                    {%\n                        if scd_table_relation is not none\n                    %}\n                    {%\n                            do adapter.drop_relation(scd_table_relation)\n                    %}\n                    {% endif %}\n                        \"],\n    tags = [ \"top-level\" ]\n) }}\n-- Final base SQL model\n-- depends_on: {{ ref('thong_tin_goi_thau_ab3') }}\nselect\n    id,\n    link,\n    deleted,\n    loai_tb,\n    so_tbmt,\n    linh_vuc,\n    services,\n    nguon_von,\n    phan_loai,\n    tien_dbdt,\n    {{ adapter.quote('timestamp') }},\n    company_id,\n    ten_khlcnt,\n    trang_thai,\n    gia_du_toan,\n    ten_du_toan,\n    ben_moi_thau,\n    gia_goi_thau,\n    hinh_thuc_tb,\n    send_mail_id,\n    ten_goi_thau,\n    competitor_id,\n    loai_hop_dong,\n    score_by_name,\n    score_service,\n    gia_trung_thau,\n    hinh_thuc_dbdt,\n    hinh_thuc_lcnt,\n    ngay_phe_duyet,\n    score_by_scope,\n    so_hieu_khlcnt,\n    hieu_luc_e_hsdt,\n    so_tbmt_version,\n    dia_diem_mo_thau,\n    phuong_thuc_lcnt,\n    services_by_name,\n    don_vi_trung_thau,\n    hinh_thuc_du_thau,\n    services_by_scope,\n    dia_diem_nhan_hsdt,\n    dia_diem_thuc_hien,\n    nhan_e_hsdt_tu_ngay,\n    thoi_gian_thuc_hien,\n    nhan_e_hsdt_den_ngay,\n    thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    {{ current_timestamp() }} as _airbyte_normalized_at,\n    _airbyte_thong_tin_goi_thau_hashid\nfrom {{ ref('thong_tin_goi_thau_ab3') }}\n-- thong_tin_goi_thau from {{ source('bid', '_airbyte_raw_thong_tin_goi_thau') }}\nwhere 1 = 1", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt.current_timestamp", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_indexes", "macro.dbt.persist_docs"], "nodes": ["source.airbyte_utils.bid._airbyte_raw_thong_tin_goi_thau", "model.airbyte_utils.thong_tin_goi_thau_ab3", "model.airbyte_utils.thong_tin_goi_thau_ab3"]}, "config": {"enabled": true, "alias": null, "schema": "bid", "database": null, "tags": ["normalized_tables", "top-level"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "_airbyte_ab_id", "on_schema_change": "ignore", "post-hook": [{"sql": "\n                    {%\n                        set scd_table_relation = adapter.get_relation(\n                            database=this.database,\n                            schema=this.schema,\n                            identifier='thong_tin_goi_thau_scd'\n                        )\n                    %}\n                    {%\n                        if scd_table_relation is not none\n                    %}\n                    {%\n                            do adapter.drop_relation(scd_table_relation)\n                    %}\n                    {% endif %}\n                        ", "transaction": true, "index": null}], "pre-hook": []}, "database": null, "schema": "bid", "fqn": ["airbyte_utils", "generated", "airbyte_tables", "bid", "thong_tin_goi_thau"], "unique_id": "model.airbyte_utils.thong_tin_goi_thau", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "generated/airbyte_tables/bid/thong_tin_goi_thau.sql", "original_file_path": "models/generated/airbyte_tables/bid/thong_tin_goi_thau.sql", "name": "thong_tin_goi_thau", "alias": "thong_tin_goi_thau", "checksum": {"name": "sha256", "checksum": "90c43235a95ca537c0f5c2619484cd6ae13f71454f60432cec877a01c429cd3c"}, "tags": ["normalized_tables", "top-level"], "refs": [["thong_tin_goi_thau_ab3"], ["thong_tin_goi_thau_ab3"]], "sources": [["bid", "_airbyte_raw_thong_tin_goi_thau"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "build/compiled/airbyte_utils/models/generated/airbyte_tables/bid/thong_tin_goi_thau.sql", "build_path": "build/run/airbyte_utils/models/generated/airbyte_tables/bid/thong_tin_goi_thau.sql", "deferred": false, "unrendered_config": {"materialized": "table", "tags": ["top-level"], "unique_key": "_airbyte_ab_id", "schema": "bid", "post-hook": ["\n                    {%\n                        set scd_table_relation = adapter.get_relation(\n                            database=this.database,\n                            schema=this.schema,\n                            identifier='thong_tin_goi_thau_scd'\n                        )\n                    %}\n                    {%\n                        if scd_table_relation is not none\n                    %}\n                    {%\n                            do adapter.drop_relation(scd_table_relation)\n                    %}\n                    {% endif %}\n                        "]}, "created_at": 1677145224.2633836, "compiled_sql": "\nwith __dbt__cte__thong_tin_goi_thau_ab1 as (\n\n-- SQL model to parse JSON blob stored in a single column and extract into separated field columns as described by the JSON Schema\n-- depends_on: bid._airbyte_raw_thong_tin_goi_thau\nselect\n    json_value(_airbyte_data, \n    '$.\"id\"' RETURNING CHAR) as id,\n    json_value(_airbyte_data, \n    '$.\"link\"' RETURNING CHAR) as link,\n    json_value(_airbyte_data, \n    '$.\"deleted\"' RETURNING CHAR) as deleted,\n    json_value(_airbyte_data, \n    '$.\"loai_tb\"' RETURNING CHAR) as loai_tb,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt\"' RETURNING CHAR) as so_tbmt,\n    json_value(_airbyte_data, \n    '$.\"linh_vuc\"' RETURNING CHAR) as linh_vuc,\n    json_value(_airbyte_data, \n    '$.\"services\"' RETURNING CHAR) as services,\n    json_value(_airbyte_data, \n    '$.\"nguon_von\"' RETURNING CHAR) as nguon_von,\n    json_value(_airbyte_data, \n    '$.\"phan_loai\"' RETURNING CHAR) as phan_loai,\n    json_value(_airbyte_data, \n    '$.\"tien_dbdt\"' RETURNING CHAR) as tien_dbdt,\n    json_value(_airbyte_data, \n    '$.\"timestamp\"' RETURNING CHAR) as `timestamp`,\n    json_value(_airbyte_data, \n    '$.\"company_id\"' RETURNING CHAR) as company_id,\n    json_value(_airbyte_data, \n    '$.\"ten_khlcnt\"' RETURNING CHAR) as ten_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"trang_thai\"' RETURNING CHAR) as trang_thai,\n    json_value(_airbyte_data, \n    '$.\"gia_du_toan\"' RETURNING CHAR) as gia_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ten_du_toan\"' RETURNING CHAR) as ten_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ben_moi_thau\"' RETURNING CHAR) as ben_moi_thau,\n    json_value(_airbyte_data, \n    '$.\"gia_goi_thau\"' RETURNING CHAR) as gia_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_tb\"' RETURNING CHAR) as hinh_thuc_tb,\n    json_value(_airbyte_data, \n    '$.\"send_mail_id\"' RETURNING CHAR) as send_mail_id,\n    json_value(_airbyte_data, \n    '$.\"ten_goi_thau\"' RETURNING CHAR) as ten_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"competitor_id\"' RETURNING CHAR) as competitor_id,\n    json_value(_airbyte_data, \n    '$.\"loai_hop_dong\"' RETURNING CHAR) as loai_hop_dong,\n    json_value(_airbyte_data, \n    '$.\"score_by_name\"' RETURNING CHAR) as score_by_name,\n    json_value(_airbyte_data, \n    '$.\"score_service\"' RETURNING CHAR) as score_service,\n    json_value(_airbyte_data, \n    '$.\"gia_trung_thau\"' RETURNING CHAR) as gia_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_dbdt\"' RETURNING CHAR) as hinh_thuc_dbdt,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_lcnt\"' RETURNING CHAR) as hinh_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"ngay_phe_duyet\"' RETURNING CHAR) as ngay_phe_duyet,\n    json_value(_airbyte_data, \n    '$.\"score_by_scope\"' RETURNING CHAR) as score_by_scope,\n    json_value(_airbyte_data, \n    '$.\"so_hieu_khlcnt\"' RETURNING CHAR) as so_hieu_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"hieu_luc_e_hsdt\"' RETURNING CHAR) as hieu_luc_e_hsdt,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt_version\"' RETURNING CHAR) as so_tbmt_version,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_mo_thau\"' RETURNING CHAR) as dia_diem_mo_thau,\n    json_value(_airbyte_data, \n    '$.\"phuong_thuc_lcnt\"' RETURNING CHAR) as phuong_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"services_by_name\"' RETURNING CHAR) as services_by_name,\n    json_value(_airbyte_data, \n    '$.\"don_vi_trung_thau\"' RETURNING CHAR) as don_vi_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_du_thau\"' RETURNING CHAR) as hinh_thuc_du_thau,\n    json_value(_airbyte_data, \n    '$.\"services_by_scope\"' RETURNING CHAR) as services_by_scope,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_nhan_hsdt\"' RETURNING CHAR) as dia_diem_nhan_hsdt,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_thuc_hien\"' RETURNING CHAR) as dia_diem_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_tu_ngay\"' RETURNING CHAR) as nhan_e_hsdt_tu_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_gian_thuc_hien\"' RETURNING CHAR) as thoi_gian_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_den_ngay\"' RETURNING CHAR) as nhan_e_hsdt_den_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_diem_dong_mo_thau\"' RETURNING CHAR) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom bid._airbyte_raw_thong_tin_goi_thau as table_alias\n-- thong_tin_goi_thau\nwhere 1 = 1\n),  __dbt__cte__thong_tin_goi_thau_ab2 as (\n\n-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type\n-- depends_on: __dbt__cte__thong_tin_goi_thau_ab1\nselect\n    cast(id as \n    signed\n) as id,\n    cast(link as char(1024)) as link,\n    cast(deleted as \n    signed\n) as deleted,\n    cast(loai_tb as char(1024)) as loai_tb,\n    cast(so_tbmt as char(1024)) as so_tbmt,\n    cast(linh_vuc as char(1024)) as linh_vuc,\n    cast(services as char(6144)) as services,\n    cast(nguon_von as char(1024)) as nguon_von,\n    cast(phan_loai as char(1024)) as phan_loai,\n    cast(tien_dbdt as char(1024)) as tien_dbdt,\n    cast(`timestamp` as char(1024)) as `timestamp`,\n    cast(company_id as char(1024)) as company_id,\n    cast(ten_khlcnt as char(1024)) as ten_khlcnt,\n    cast(trang_thai as \n    signed\n) as trang_thai,\n    cast(gia_du_toan as char(1024)) as gia_du_toan,\n    cast(ten_du_toan as char(1024)) as ten_du_toan,\n    cast(ben_moi_thau as char(1024)) as ben_moi_thau,\n    cast(gia_goi_thau as char(1024)) as gia_goi_thau,\n    cast(hinh_thuc_tb as char(1024)) as hinh_thuc_tb,\n    cast(send_mail_id as char(1024)) as send_mail_id,\n    cast(ten_goi_thau as char(1024)) as ten_goi_thau,\n    cast(competitor_id as char(1024)) as competitor_id,\n    cast(loai_hop_dong as char(1024)) as loai_hop_dong,\n    cast(score_by_name as \n    float\n) as score_by_name,\n    cast(score_service as \n    float\n) as score_service,\n    cast(gia_trung_thau as char(1024)) as gia_trung_thau,\n    cast(hinh_thuc_dbdt as char(1024)) as hinh_thuc_dbdt,\n    cast(hinh_thuc_lcnt as char(1024)) as hinh_thuc_lcnt,\n    cast(ngay_phe_duyet as char(1024)) as ngay_phe_duyet,\n    cast(score_by_scope as \n    float\n) as score_by_scope,\n    cast(so_hieu_khlcnt as char(1024)) as so_hieu_khlcnt,\n    cast(hieu_luc_e_hsdt as char(1024)) as hieu_luc_e_hsdt,\n    cast(so_tbmt_version as char(1024)) as so_tbmt_version,\n    cast(dia_diem_mo_thau as char(1024)) as dia_diem_mo_thau,\n    cast(phuong_thuc_lcnt as char(1024)) as phuong_thuc_lcnt,\n    cast(services_by_name as char(6144)) as services_by_name,\n    cast(don_vi_trung_thau as char(1024)) as don_vi_trung_thau,\n    cast(hinh_thuc_du_thau as char(1024)) as hinh_thuc_du_thau,\n    cast(services_by_scope as char(6144)) as services_by_scope,\n    cast(dia_diem_nhan_hsdt as char(1024)) as dia_diem_nhan_hsdt,\n    cast(dia_diem_thuc_hien as char(1024)) as dia_diem_thuc_hien,\n    cast(nhan_e_hsdt_tu_ngay as char(1024)) as nhan_e_hsdt_tu_ngay,\n    cast(thoi_gian_thuc_hien as char(1024)) as thoi_gian_thuc_hien,\n    cast(nhan_e_hsdt_den_ngay as char(1024)) as nhan_e_hsdt_den_ngay,\n    cast(thoi_diem_dong_mo_thau as char(1024)) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom __dbt__cte__thong_tin_goi_thau_ab1\n-- thong_tin_goi_thau\nwhere 1 = 1\n),  __dbt__cte__thong_tin_goi_thau_ab3 as (\n\n-- SQL model to build a hash column based on the values of this record\n-- depends_on: __dbt__cte__thong_tin_goi_thau_ab2\nselect\n    md5(cast(concat(coalesce(cast(id as char), ''), '-', coalesce(cast(link as char), ''), '-', coalesce(cast(deleted as char), ''), '-', coalesce(cast(loai_tb as char), ''), '-', coalesce(cast(so_tbmt as char), ''), '-', coalesce(cast(linh_vuc as char), ''), '-', coalesce(cast(services as char), ''), '-', coalesce(cast(nguon_von as char), ''), '-', coalesce(cast(phan_loai as char), ''), '-', coalesce(cast(tien_dbdt as char), ''), '-', coalesce(cast(`timestamp` as char), ''), '-', coalesce(cast(company_id as char), ''), '-', coalesce(cast(ten_khlcnt as char), ''), '-', coalesce(cast(trang_thai as char), ''), '-', coalesce(cast(gia_du_toan as char), ''), '-', coalesce(cast(ten_du_toan as char), ''), '-', coalesce(cast(ben_moi_thau as char), ''), '-', coalesce(cast(gia_goi_thau as char), ''), '-', coalesce(cast(hinh_thuc_tb as char), ''), '-', coalesce(cast(send_mail_id as char), ''), '-', coalesce(cast(ten_goi_thau as char), ''), '-', coalesce(cast(competitor_id as char), ''), '-', coalesce(cast(loai_hop_dong as char), ''), '-', coalesce(cast(score_by_name as char), ''), '-', coalesce(cast(score_service as char), ''), '-', coalesce(cast(gia_trung_thau as char), ''), '-', coalesce(cast(hinh_thuc_dbdt as char), ''), '-', coalesce(cast(hinh_thuc_lcnt as char), ''), '-', coalesce(cast(ngay_phe_duyet as char), ''), '-', coalesce(cast(score_by_scope as char), ''), '-', coalesce(cast(so_hieu_khlcnt as char), ''), '-', coalesce(cast(hieu_luc_e_hsdt as char), ''), '-', coalesce(cast(so_tbmt_version as char), ''), '-', coalesce(cast(dia_diem_mo_thau as char), ''), '-', coalesce(cast(phuong_thuc_lcnt as char), ''), '-', coalesce(cast(services_by_name as char), ''), '-', coalesce(cast(don_vi_trung_thau as char), ''), '-', coalesce(cast(hinh_thuc_du_thau as char), ''), '-', coalesce(cast(services_by_scope as char), ''), '-', coalesce(cast(dia_diem_nhan_hsdt as char), ''), '-', coalesce(cast(dia_diem_thuc_hien as char), ''), '-', coalesce(cast(nhan_e_hsdt_tu_ngay as char), ''), '-', coalesce(cast(thoi_gian_thuc_hien as char), ''), '-', coalesce(cast(nhan_e_hsdt_den_ngay as char), ''), '-', coalesce(cast(thoi_diem_dong_mo_thau as char), '')) as char)) as _airbyte_thong_tin_goi_thau_hashid,\n    tmp.*\nfrom __dbt__cte__thong_tin_goi_thau_ab2 tmp\n-- thong_tin_goi_thau\nwhere 1 = 1\n)-- Final base SQL model\n-- depends_on: __dbt__cte__thong_tin_goi_thau_ab3\nselect\n    id,\n    link,\n    deleted,\n    loai_tb,\n    so_tbmt,\n    linh_vuc,\n    services,\n    nguon_von,\n    phan_loai,\n    tien_dbdt,\n    `timestamp`,\n    company_id,\n    ten_khlcnt,\n    trang_thai,\n    gia_du_toan,\n    ten_du_toan,\n    ben_moi_thau,\n    gia_goi_thau,\n    hinh_thuc_tb,\n    send_mail_id,\n    ten_goi_thau,\n    competitor_id,\n    loai_hop_dong,\n    score_by_name,\n    score_service,\n    gia_trung_thau,\n    hinh_thuc_dbdt,\n    hinh_thuc_lcnt,\n    ngay_phe_duyet,\n    score_by_scope,\n    so_hieu_khlcnt,\n    hieu_luc_e_hsdt,\n    so_tbmt_version,\n    dia_diem_mo_thau,\n    phuong_thuc_lcnt,\n    services_by_name,\n    don_vi_trung_thau,\n    hinh_thuc_du_thau,\n    services_by_scope,\n    dia_diem_nhan_hsdt,\n    dia_diem_thuc_hien,\n    nhan_e_hsdt_tu_ngay,\n    thoi_gian_thuc_hien,\n    nhan_e_hsdt_den_ngay,\n    thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at,\n    _airbyte_thong_tin_goi_thau_hashid\nfrom __dbt__cte__thong_tin_goi_thau_ab3\n-- thong_tin_goi_thau from bid._airbyte_raw_thong_tin_goi_thau\nwhere 1 = 1", "extra_ctes_injected": true, "extra_ctes": [{"id": "model.airbyte_utils.thong_tin_goi_thau_ab1", "sql": " __dbt__cte__thong_tin_goi_thau_ab1 as (\n\n-- SQL model to parse JSON blob stored in a single column and extract into separated field columns as described by the JSON Schema\n-- depends_on: bid._airbyte_raw_thong_tin_goi_thau\nselect\n    json_value(_airbyte_data, \n    '$.\"id\"' RETURNING CHAR) as id,\n    json_value(_airbyte_data, \n    '$.\"link\"' RETURNING CHAR) as link,\n    json_value(_airbyte_data, \n    '$.\"deleted\"' RETURNING CHAR) as deleted,\n    json_value(_airbyte_data, \n    '$.\"loai_tb\"' RETURNING CHAR) as loai_tb,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt\"' RETURNING CHAR) as so_tbmt,\n    json_value(_airbyte_data, \n    '$.\"linh_vuc\"' RETURNING CHAR) as linh_vuc,\n    json_value(_airbyte_data, \n    '$.\"services\"' RETURNING CHAR) as services,\n    json_value(_airbyte_data, \n    '$.\"nguon_von\"' RETURNING CHAR) as nguon_von,\n    json_value(_airbyte_data, \n    '$.\"phan_loai\"' RETURNING CHAR) as phan_loai,\n    json_value(_airbyte_data, \n    '$.\"tien_dbdt\"' RETURNING CHAR) as tien_dbdt,\n    json_value(_airbyte_data, \n    '$.\"timestamp\"' RETURNING CHAR) as `timestamp`,\n    json_value(_airbyte_data, \n    '$.\"company_id\"' RETURNING CHAR) as company_id,\n    json_value(_airbyte_data, \n    '$.\"ten_khlcnt\"' RETURNING CHAR) as ten_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"trang_thai\"' RETURNING CHAR) as trang_thai,\n    json_value(_airbyte_data, \n    '$.\"gia_du_toan\"' RETURNING CHAR) as gia_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ten_du_toan\"' RETURNING CHAR) as ten_du_toan,\n    json_value(_airbyte_data, \n    '$.\"ben_moi_thau\"' RETURNING CHAR) as ben_moi_thau,\n    json_value(_airbyte_data, \n    '$.\"gia_goi_thau\"' RETURNING CHAR) as gia_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_tb\"' RETURNING CHAR) as hinh_thuc_tb,\n    json_value(_airbyte_data, \n    '$.\"send_mail_id\"' RETURNING CHAR) as send_mail_id,\n    json_value(_airbyte_data, \n    '$.\"ten_goi_thau\"' RETURNING CHAR) as ten_goi_thau,\n    json_value(_airbyte_data, \n    '$.\"competitor_id\"' RETURNING CHAR) as competitor_id,\n    json_value(_airbyte_data, \n    '$.\"loai_hop_dong\"' RETURNING CHAR) as loai_hop_dong,\n    json_value(_airbyte_data, \n    '$.\"score_by_name\"' RETURNING CHAR) as score_by_name,\n    json_value(_airbyte_data, \n    '$.\"score_service\"' RETURNING CHAR) as score_service,\n    json_value(_airbyte_data, \n    '$.\"gia_trung_thau\"' RETURNING CHAR) as gia_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_dbdt\"' RETURNING CHAR) as hinh_thuc_dbdt,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_lcnt\"' RETURNING CHAR) as hinh_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"ngay_phe_duyet\"' RETURNING CHAR) as ngay_phe_duyet,\n    json_value(_airbyte_data, \n    '$.\"score_by_scope\"' RETURNING CHAR) as score_by_scope,\n    json_value(_airbyte_data, \n    '$.\"so_hieu_khlcnt\"' RETURNING CHAR) as so_hieu_khlcnt,\n    json_value(_airbyte_data, \n    '$.\"hieu_luc_e_hsdt\"' RETURNING CHAR) as hieu_luc_e_hsdt,\n    json_value(_airbyte_data, \n    '$.\"so_tbmt_version\"' RETURNING CHAR) as so_tbmt_version,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_mo_thau\"' RETURNING CHAR) as dia_diem_mo_thau,\n    json_value(_airbyte_data, \n    '$.\"phuong_thuc_lcnt\"' RETURNING CHAR) as phuong_thuc_lcnt,\n    json_value(_airbyte_data, \n    '$.\"services_by_name\"' RETURNING CHAR) as services_by_name,\n    json_value(_airbyte_data, \n    '$.\"don_vi_trung_thau\"' RETURNING CHAR) as don_vi_trung_thau,\n    json_value(_airbyte_data, \n    '$.\"hinh_thuc_du_thau\"' RETURNING CHAR) as hinh_thuc_du_thau,\n    json_value(_airbyte_data, \n    '$.\"services_by_scope\"' RETURNING CHAR) as services_by_scope,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_nhan_hsdt\"' RETURNING CHAR) as dia_diem_nhan_hsdt,\n    json_value(_airbyte_data, \n    '$.\"dia_diem_thuc_hien\"' RETURNING CHAR) as dia_diem_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_tu_ngay\"' RETURNING CHAR) as nhan_e_hsdt_tu_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_gian_thuc_hien\"' RETURNING CHAR) as thoi_gian_thuc_hien,\n    json_value(_airbyte_data, \n    '$.\"nhan_e_hsdt_den_ngay\"' RETURNING CHAR) as nhan_e_hsdt_den_ngay,\n    json_value(_airbyte_data, \n    '$.\"thoi_diem_dong_mo_thau\"' RETURNING CHAR) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom bid._airbyte_raw_thong_tin_goi_thau as table_alias\n-- thong_tin_goi_thau\nwhere 1 = 1\n)"}, {"id": "model.airbyte_utils.thong_tin_goi_thau_ab2", "sql": " __dbt__cte__thong_tin_goi_thau_ab2 as (\n\n-- SQL model to cast each column to its adequate SQL type converted from the JSON schema type\n-- depends_on: __dbt__cte__thong_tin_goi_thau_ab1\nselect\n    cast(id as \n    signed\n) as id,\n    cast(link as char(1024)) as link,\n    cast(deleted as \n    signed\n) as deleted,\n    cast(loai_tb as char(1024)) as loai_tb,\n    cast(so_tbmt as char(1024)) as so_tbmt,\n    cast(linh_vuc as char(1024)) as linh_vuc,\n    cast(services as char(6144)) as services,\n    cast(nguon_von as char(1024)) as nguon_von,\n    cast(phan_loai as char(1024)) as phan_loai,\n    cast(tien_dbdt as char(1024)) as tien_dbdt,\n    cast(`timestamp` as char(1024)) as `timestamp`,\n    cast(company_id as char(1024)) as company_id,\n    cast(ten_khlcnt as char(1024)) as ten_khlcnt,\n    cast(trang_thai as \n    signed\n) as trang_thai,\n    cast(gia_du_toan as char(1024)) as gia_du_toan,\n    cast(ten_du_toan as char(1024)) as ten_du_toan,\n    cast(ben_moi_thau as char(1024)) as ben_moi_thau,\n    cast(gia_goi_thau as char(1024)) as gia_goi_thau,\n    cast(hinh_thuc_tb as char(1024)) as hinh_thuc_tb,\n    cast(send_mail_id as char(1024)) as send_mail_id,\n    cast(ten_goi_thau as char(1024)) as ten_goi_thau,\n    cast(competitor_id as char(1024)) as competitor_id,\n    cast(loai_hop_dong as char(1024)) as loai_hop_dong,\n    cast(score_by_name as \n    float\n) as score_by_name,\n    cast(score_service as \n    float\n) as score_service,\n    cast(gia_trung_thau as char(1024)) as gia_trung_thau,\n    cast(hinh_thuc_dbdt as char(1024)) as hinh_thuc_dbdt,\n    cast(hinh_thuc_lcnt as char(1024)) as hinh_thuc_lcnt,\n    cast(ngay_phe_duyet as char(1024)) as ngay_phe_duyet,\n    cast(score_by_scope as \n    float\n) as score_by_scope,\n    cast(so_hieu_khlcnt as char(1024)) as so_hieu_khlcnt,\n    cast(hieu_luc_e_hsdt as char(1024)) as hieu_luc_e_hsdt,\n    cast(so_tbmt_version as char(1024)) as so_tbmt_version,\n    cast(dia_diem_mo_thau as char(1024)) as dia_diem_mo_thau,\n    cast(phuong_thuc_lcnt as char(1024)) as phuong_thuc_lcnt,\n    cast(services_by_name as char(6144)) as services_by_name,\n    cast(don_vi_trung_thau as char(1024)) as don_vi_trung_thau,\n    cast(hinh_thuc_du_thau as char(1024)) as hinh_thuc_du_thau,\n    cast(services_by_scope as char(6144)) as services_by_scope,\n    cast(dia_diem_nhan_hsdt as char(1024)) as dia_diem_nhan_hsdt,\n    cast(dia_diem_thuc_hien as char(1024)) as dia_diem_thuc_hien,\n    cast(nhan_e_hsdt_tu_ngay as char(1024)) as nhan_e_hsdt_tu_ngay,\n    cast(thoi_gian_thuc_hien as char(1024)) as thoi_gian_thuc_hien,\n    cast(nhan_e_hsdt_den_ngay as char(1024)) as nhan_e_hsdt_den_ngay,\n    cast(thoi_diem_dong_mo_thau as char(1024)) as thoi_diem_dong_mo_thau,\n    _airbyte_ab_id,\n    _airbyte_emitted_at,\n    \n    CURRENT_TIMESTAMP\n as _airbyte_normalized_at\nfrom __dbt__cte__thong_tin_goi_thau_ab1\n-- thong_tin_goi_thau\nwhere 1 = 1\n)"}, {"id": "model.airbyte_utils.thong_tin_goi_thau_ab3", "sql": " __dbt__cte__thong_tin_goi_thau_ab3 as (\n\n-- SQL model to build a hash column based on the values of this record\n-- depends_on: __dbt__cte__thong_tin_goi_thau_ab2\nselect\n    md5(cast(concat(coalesce(cast(id as char), ''), '-', coalesce(cast(link as char), ''), '-', coalesce(cast(deleted as char), ''), '-', coalesce(cast(loai_tb as char), ''), '-', coalesce(cast(so_tbmt as char), ''), '-', coalesce(cast(linh_vuc as char), ''), '-', coalesce(cast(services as char), ''), '-', coalesce(cast(nguon_von as char), ''), '-', coalesce(cast(phan_loai as char), ''), '-', coalesce(cast(tien_dbdt as char), ''), '-', coalesce(cast(`timestamp` as char), ''), '-', coalesce(cast(company_id as char), ''), '-', coalesce(cast(ten_khlcnt as char), ''), '-', coalesce(cast(trang_thai as char), ''), '-', coalesce(cast(gia_du_toan as char), ''), '-', coalesce(cast(ten_du_toan as char), ''), '-', coalesce(cast(ben_moi_thau as char), ''), '-', coalesce(cast(gia_goi_thau as char), ''), '-', coalesce(cast(hinh_thuc_tb as char), ''), '-', coalesce(cast(send_mail_id as char), ''), '-', coalesce(cast(ten_goi_thau as char), ''), '-', coalesce(cast(competitor_id as char), ''), '-', coalesce(cast(loai_hop_dong as char), ''), '-', coalesce(cast(score_by_name as char), ''), '-', coalesce(cast(score_service as char), ''), '-', coalesce(cast(gia_trung_thau as char), ''), '-', coalesce(cast(hinh_thuc_dbdt as char), ''), '-', coalesce(cast(hinh_thuc_lcnt as char), ''), '-', coalesce(cast(ngay_phe_duyet as char), ''), '-', coalesce(cast(score_by_scope as char), ''), '-', coalesce(cast(so_hieu_khlcnt as char), ''), '-', coalesce(cast(hieu_luc_e_hsdt as char), ''), '-', coalesce(cast(so_tbmt_version as char), ''), '-', coalesce(cast(dia_diem_mo_thau as char), ''), '-', coalesce(cast(phuong_thuc_lcnt as char), ''), '-', coalesce(cast(services_by_name as char), ''), '-', coalesce(cast(don_vi_trung_thau as char), ''), '-', coalesce(cast(hinh_thuc_du_thau as char), ''), '-', coalesce(cast(services_by_scope as char), ''), '-', coalesce(cast(dia_diem_nhan_hsdt as char), ''), '-', coalesce(cast(dia_diem_thuc_hien as char), ''), '-', coalesce(cast(nhan_e_hsdt_tu_ngay as char), ''), '-', coalesce(cast(thoi_gian_thuc_hien as char), ''), '-', coalesce(cast(nhan_e_hsdt_den_ngay as char), ''), '-', coalesce(cast(thoi_diem_dong_mo_thau as char), '')) as char)) as _airbyte_thong_tin_goi_thau_hashid,\n    tmp.*\nfrom __dbt__cte__thong_tin_goi_thau_ab2 tmp\n-- thong_tin_goi_thau\nwhere 1 = 1\n)"}], "relation_name": "bid.`thong_tin_goi_thau`"}}, "sources": {"source.airbyte_utils.bid._airbyte_raw_thong_tin_goi_thau": {"fqn": ["airbyte_utils", "generated", "bid", "_airbyte_raw_thong_tin_goi_thau"], "database": null, "schema": "bid", "unique_id": "source.airbyte_utils.bid._airbyte_raw_thong_tin_goi_thau", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "models/generated/sources.yml", "original_file_path": "models/generated/sources.yml", "name": "_airbyte_raw_thong_tin_goi_thau", "source_name": "bid", "source_description": "", "loader": "", "identifier": "_airbyte_raw_thong_tin_goi_thau", "resource_type": "source", "quoting": {"database": true, "schema": false, "identifier": false, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "bid._airbyte_raw_thong_tin_goi_thau", "created_at": 1677145224.331643}}, "macros": {"macro.airbyte_utils.need_full_refresh": {"unique_id": "macro.airbyte_utils.need_full_refresh", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/should_full_refresh.sql", "original_file_path": "macros/should_full_refresh.sql", "name": "need_full_refresh", "macro_sql": "\n\n{%- macro need_full_refresh(col_ab_id, target_table=this) -%}\n    {%- if not execute -%}\n        {{ return(false) }}\n    {%- endif -%}\n    {%- set found_column = [] %}\n    {%- set cols = adapter.get_columns_in_relation(target_table) -%}\n    {%- for col in cols -%}\n        {%- if col.column == col_ab_id -%}\n            {% do found_column.append(col.column) %}\n        {%- endif -%}\n    {%- endfor -%}\n    {%- if found_column -%}\n        {{ return(false) }}\n    {%- else -%}\n        {{ dbt_utils.log_info(target_table ~ \".\" ~ col_ab_id ~ \" does not exist yet. The table will be created or rebuilt with dbt.full_refresh\") }}\n        {{ return(true) }}\n    {%- endif -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.log_info"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.2694592}, "macro.airbyte_utils.should_full_refresh": {"unique_id": "macro.airbyte_utils.should_full_refresh", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/should_full_refresh.sql", "original_file_path": "macros/should_full_refresh.sql", "name": "should_full_refresh", "macro_sql": "{%- macro should_full_refresh() -%}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {%- if config_full_refresh is none -%}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {%- endif -%}\n  {%- if not config_full_refresh -%}\n    {% set config_full_refresh = need_full_refresh(get_col_ab_id(), this) %}\n  {%- endif -%}\n  {% do return(config_full_refresh) %}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.need_full_refresh", "macro.airbyte_utils.get_col_ab_id"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.271148}, "macro.airbyte_utils.get_col_ab_id": {"unique_id": "macro.airbyte_utils.get_col_ab_id", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/should_full_refresh.sql", "original_file_path": "macros/should_full_refresh.sql", "name": "get_col_ab_id", "macro_sql": "{%- macro get_col_ab_id() -%}\n  {{ adapter.dispatch('get_col_ab_id')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__get_col_ab_id"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.271709}, "macro.airbyte_utils.default__get_col_ab_id": {"unique_id": "macro.airbyte_utils.default__get_col_ab_id", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/should_full_refresh.sql", "original_file_path": "macros/should_full_refresh.sql", "name": "default__get_col_ab_id", "macro_sql": "{%- macro default__get_col_ab_id() -%}\n    _airbyte_ab_id\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.2720394}, "macro.airbyte_utils.oracle__get_col_ab_id": {"unique_id": "macro.airbyte_utils.oracle__get_col_ab_id", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/should_full_refresh.sql", "original_file_path": "macros/should_full_refresh.sql", "name": "oracle__get_col_ab_id", "macro_sql": "{%- macro oracle__get_col_ab_id() -%}\n    \"_AIRBYTE_AB_ID\"\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.272435}, "macro.airbyte_utils.snowflake__get_col_ab_id": {"unique_id": "macro.airbyte_utils.snowflake__get_col_ab_id", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/should_full_refresh.sql", "original_file_path": "macros/should_full_refresh.sql", "name": "snowflake__get_col_ab_id", "macro_sql": "{%- macro snowflake__get_col_ab_id() -%}\n    _AIRBYTE_AB_ID\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.2727473}, "macro.airbyte_utils.generate_schema_name": {"unique_id": "macro.airbyte_utils.generate_schema_name", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/get_custom_schema.sql", "original_file_path": "macros/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n    {{ generate_schema_name_for_env(custom_schema_name, node) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.generate_schema_name_for_env"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.2738695}, "macro.airbyte_utils.star_intersect": {"unique_id": "macro.airbyte_utils.star_intersect", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/star_intersect.sql", "original_file_path": "macros/star_intersect.sql", "name": "star_intersect", "macro_sql": "{% macro star_intersect(from, intersect, from_alias=False, intersect_alias=False, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'star_intersect') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'star_intersect') -%}\n    {%- do dbt_utils._is_relation(intersect, 'star_intersect') -%}\n    {%- do dbt_utils._is_ephemeral(intersect, 'star_intersect') -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {%- set include_intersect_cols = [] %}\n    {%- set intersect_cols = adapter.get_columns_in_relation(intersect) -%}\n    {%- for col in intersect_cols -%}\n        {%- if col.column|lower not in except -%}\n            {% do include_intersect_cols.append(col.column) %}\n        {%- endif %}\n    {%- endfor %}\n\n    {%- for col in include_cols %}\n        {%- if col in include_intersect_cols -%}\n            {%- if intersect_alias %}{{ intersect_alias }}.{% else %}{%- endif -%}{{ adapter.quote(col)|trim }}\n            {%- if not loop.last %},{{ '\\n  ' }}{% endif %}\n        {%- else %}\n            {%- if from_alias %}{{ from_alias }}.{% else %}{{ from }}.{%- endif -%}{{ adapter.quote(col)|trim }} as {{ adapter.quote(col)|trim }}\n            {%- if not loop.last %},{{ '\\n  ' }}{% endif %}\n        {%- endif %}\n    {%- endfor -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.283974}, "macro.airbyte_utils.incremental_clause": {"unique_id": "macro.airbyte_utils.incremental_clause", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/incremental.sql", "original_file_path": "macros/incremental.sql", "name": "incremental_clause", "macro_sql": "{% macro incremental_clause(col_emitted_at, tablename)  -%}\n  {{ adapter.dispatch('incremental_clause')(col_emitted_at, tablename) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__incremental_clause"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.287709}, "macro.airbyte_utils.default__incremental_clause": {"unique_id": "macro.airbyte_utils.default__incremental_clause", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/incremental.sql", "original_file_path": "macros/incremental.sql", "name": "default__incremental_clause", "macro_sql": "\n\n{%- macro default__incremental_clause(col_emitted_at, tablename) -%}\n{% if is_incremental() %}\nand coalesce(\n    cast({{ col_emitted_at }} as {{ type_timestamp_with_timezone() }}) >= (select max(cast({{ col_emitted_at }} as {{ type_timestamp_with_timezone() }})) from {{ tablename }}),\n    {# -- if {{ col_emitted_at }} is NULL in either table, the previous comparison would evaluate to NULL, #}\n    {# -- so we coalesce and make sure the row is always returned for incremental processing instead #}\n    true)\n{% endif %}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.airbyte_utils.type_timestamp_with_timezone"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.288947}, "macro.airbyte_utils.snowflake__incremental_clause": {"unique_id": "macro.airbyte_utils.snowflake__incremental_clause", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/incremental.sql", "original_file_path": "macros/incremental.sql", "name": "snowflake__incremental_clause", "macro_sql": "\n{%- macro snowflake__incremental_clause(col_emitted_at, tablename) -%}\n{% if is_incremental() %}\n    {% if get_max_normalized_cursor(col_emitted_at, tablename) %}\nand cast({{ col_emitted_at }} as {{ type_timestamp_with_timezone() }}) >=\n    cast('{{ get_max_normalized_cursor(col_emitted_at, tablename) }}' as {{ type_timestamp_with_timezone() }})\n    {% endif %}\n{% endif %}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.airbyte_utils.get_max_normalized_cursor", "macro.airbyte_utils.type_timestamp_with_timezone"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.290354}, "macro.airbyte_utils.bigquery__incremental_clause": {"unique_id": "macro.airbyte_utils.bigquery__incremental_clause", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/incremental.sql", "original_file_path": "macros/incremental.sql", "name": "bigquery__incremental_clause", "macro_sql": "\n{%- macro bigquery__incremental_clause(col_emitted_at, tablename) -%}\n{% if is_incremental() %}\n    {% if get_max_normalized_cursor(col_emitted_at, tablename) %}\nand cast({{ col_emitted_at }} as {{ type_timestamp_with_timezone() }}) >=\n    cast('{{ get_max_normalized_cursor(col_emitted_at, tablename) }}' as {{ type_timestamp_with_timezone() }})\n    {% endif %}\n{% endif %}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.airbyte_utils.get_max_normalized_cursor", "macro.airbyte_utils.type_timestamp_with_timezone"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.2918103}, "macro.airbyte_utils.sqlserver__incremental_clause": {"unique_id": "macro.airbyte_utils.sqlserver__incremental_clause", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/incremental.sql", "original_file_path": "macros/incremental.sql", "name": "sqlserver__incremental_clause", "macro_sql": "{%- macro sqlserver__incremental_clause(col_emitted_at, tablename) -%}\n{% if is_incremental() %}\nand ((select max(cast({{ col_emitted_at }} as {{ type_timestamp_with_timezone() }})) from {{ tablename }}) is null\n  or cast({{ col_emitted_at }} as {{ type_timestamp_with_timezone() }}) >=\n     (select max(cast({{ col_emitted_at }} as {{ type_timestamp_with_timezone() }})) from {{ tablename }}))\n{% endif %}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.airbyte_utils.type_timestamp_with_timezone"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.293167}, "macro.airbyte_utils.get_max_normalized_cursor": {"unique_id": "macro.airbyte_utils.get_max_normalized_cursor", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/incremental.sql", "original_file_path": "macros/incremental.sql", "name": "get_max_normalized_cursor", "macro_sql": "{% macro get_max_normalized_cursor(col_emitted_at, tablename) %}\n{% if execute and is_incremental() %}\n {% if env_var('INCREMENTAL_CURSOR', 'UNSET') == 'UNSET' %}\n     {% set query %}\n        select max(cast({{ col_emitted_at }} as {{ type_timestamp_with_timezone() }})) from {{ tablename }}\n     {% endset %}\n     {% set max_cursor = run_query(query).columns[0][0] %}\n     {% do return(max_cursor) %}\n {% else %}\n    {% do return(env_var('INCREMENTAL_CURSOR')) %}\n {% endif %}\n{% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.is_incremental", "macro.airbyte_utils.type_timestamp_with_timezone", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.295673}, "macro.airbyte_utils.clean_tmp_tables": {"unique_id": "macro.airbyte_utils.clean_tmp_tables", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/clean_tmp_tables.sql", "original_file_path": "macros/clean_tmp_tables.sql", "name": "clean_tmp_tables", "macro_sql": "{% macro clean_tmp_tables(schemas) -%}\n  {{ adapter.dispatch('clean_tmp_tables')(schemas) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__clean_tmp_tables"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.297163}, "macro.airbyte_utils.default__clean_tmp_tables": {"unique_id": "macro.airbyte_utils.default__clean_tmp_tables", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/clean_tmp_tables.sql", "original_file_path": "macros/clean_tmp_tables.sql", "name": "default__clean_tmp_tables", "macro_sql": "{% macro default__clean_tmp_tables(schemas) -%}\n    {% do exceptions.warn(\"\\tINFO: CLEANING TEST LEFTOVERS IS NOT IMPLEMENTED FOR THIS DESTINATION. CONSIDER TO REMOVE TEST TABLES MANUALY.\\n\") %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.2977462}, "macro.airbyte_utils.redshift__clean_tmp_tables": {"unique_id": "macro.airbyte_utils.redshift__clean_tmp_tables", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/clean_tmp_tables.sql", "original_file_path": "macros/clean_tmp_tables.sql", "name": "redshift__clean_tmp_tables", "macro_sql": "{% macro redshift__clean_tmp_tables(schemas) %}\n    {%- for tmp_schema in schemas -%}\n        {% do log(\"\\tDROP SCHEMA IF EXISTS \" ~ tmp_schema, info=True) %}\n        {%- set drop_query -%}\n            drop schema if exists {{ tmp_schema }} cascade;\n        {%- endset -%}\n        {%- do run_query(drop_query) -%}\n    {%- endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.2990148}, "macro.airbyte_utils.redshift_super_type": {"unique_id": "macro.airbyte_utils.redshift_super_type", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/configuration.sql", "original_file_path": "macros/configuration.sql", "name": "redshift_super_type", "macro_sql": "{%- macro redshift_super_type() -%}\n    {%- if not execute -%}\n        {{ return(\"\") }}\n    {%- endif -%}\n\n    {%- set table_schema, _, table_name = var(\"models_to_source\")[this.identifier].partition(\".\") -%}\n\n    {%- call statement(\"get_column_type\", fetch_result=True) -%}\n        select data_type from SVV_COLUMNS where table_name = '{{ table_name }}' and column_name = '{{ var(\"json_column\") }}' and table_schema = '{{ table_schema }}';\n    {%- endcall -%}\n\n    {%- set column_type = load_result(\"get_column_type\")[\"data\"][0][0] -%}\n    {{ return(column_type == \"super\") }}\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3023534}, "macro.airbyte_utils.oracle__test_equal_rowcount": {"unique_id": "macro.airbyte_utils.oracle__test_equal_rowcount", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/schema_tests/equal_rowcount.sql", "original_file_path": "macros/schema_tests/equal_rowcount.sql", "name": "oracle__test_equal_rowcount", "macro_sql": "{% macro oracle__test_equal_rowcount(model, compare_model) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'coalesce(diff_count, 0)') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\nwith a as (\n\n    select count(*) as count_a from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_b from {{ compare_model }}\n\n),\nfinal as (\n\n    select\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n    from a\n    cross join b\n\n)\n\nselect diff_count from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.304239}, "macro.airbyte_utils.mysql__test_equality": {"unique_id": "macro.airbyte_utils.mysql__test_equality", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/schema_tests/equality.sql", "original_file_path": "macros/schema_tests/equality.sql", "name": "mysql__test_equality", "macro_sql": "{% macro mysql__test_equality(model, compare_model, compare_columns=None) %}\n\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n    {%- if not compare_columns -%}\n        {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n        {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n    {%- endif -%}\n\n    {% set compare_cols_csv = compare_columns | join(', ') %}\n\n    with a as (\n        select * from {{ model }}\n    ),\n\n    b as (\n        select * from {{ compare_model }}\n    ),\n\n    a_minus_b as (\n        select {{ compare_cols_csv }} from a\n        where ({{ compare_cols_csv }}) not in\n            (select {{ compare_cols_csv }} from b)\n    ),\n\n    b_minus_a as (\n        select {{ compare_cols_csv }} from b\n        where ({{ compare_cols_csv }}) not in\n            (select {{ compare_cols_csv }} from a)\n    ),\n\n    unioned as (\n        select * from a_minus_b\n        union all\n        select * from b_minus_a\n    ),\n\n    final as (\n        select (select count(*) from unioned) +\n        (select abs(\n            (select count(*) from a_minus_b) -\n            (select count(*) from b_minus_a)\n            ))\n        as count\n    )\n\n    select count from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3106394}, "macro.airbyte_utils.oracle__test_equality": {"unique_id": "macro.airbyte_utils.oracle__test_equality", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/schema_tests/equality.sql", "original_file_path": "macros/schema_tests/equality.sql", "name": "oracle__test_equality", "macro_sql": "{% macro oracle__test_equality(model) %}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    -- setup\n    {%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n    {#-\n    If the compare_cols arg is provided, we can run this test without querying the\n    information schema \u2014 this allows the model to be an ephemeral model\n    -#}\n    {%- set compare_columns = kwargs.get('compare_columns', None) -%}\n\n    {%- if not compare_columns -%}\n        {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n        {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n    {%- endif -%}\n\n    {% set compare_model = kwargs.get('compare_model', kwargs.get('arg')) %}\n    {% set compare_cols_csv = compare_columns | join(', ') %}\n\n    with a as (\n        select * from {{ model }}\n    ),\n    b as (\n        select * from {{ compare_model }}\n    ),\n    a_minus_b as (\n        select {{compare_cols_csv}} from a\n        {{ dbt_utils.except() }}\n        select {{compare_cols_csv}} from b\n    ),\n    b_minus_a as (\n        select {{compare_cols_csv}} from b\n        {{ dbt_utils.except() }}\n        select {{compare_cols_csv}} from a\n    ),\n    unioned as (\n        select * from a_minus_b\n        union all\n        select * from b_minus_a\n    )\n    select count(*) from unioned\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3144739}, "macro.airbyte_utils.mysql__current_timestamp": {"unique_id": "macro.airbyte_utils.mysql__current_timestamp", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "mysql__current_timestamp", "macro_sql": "{% macro mysql__current_timestamp() %}\n    CURRENT_TIMESTAMP\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3152266}, "macro.airbyte_utils.oracle__current_timestamp": {"unique_id": "macro.airbyte_utils.oracle__current_timestamp", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "oracle__current_timestamp", "macro_sql": "{% macro oracle__current_timestamp() %}\n    CURRENT_TIMESTAMP\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.315536}, "macro.airbyte_utils.oracle__surrogate_key": {"unique_id": "macro.airbyte_utils.oracle__surrogate_key", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/surrogate_key.sql", "original_file_path": "macros/cross_db_utils/surrogate_key.sql", "name": "oracle__surrogate_key", "macro_sql": "{% macro oracle__surrogate_key(field_list) -%}\n    ora_hash(\n        {%- for field in field_list %}\n            {% if not loop.last %}\n                {{ field }} || '~' ||\n            {% else %}\n                {{ field }}\n            {% endif %}\n        {%- endfor %}\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3175995}, "macro.airbyte_utils.clickhouse__surrogate_key": {"unique_id": "macro.airbyte_utils.clickhouse__surrogate_key", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/surrogate_key.sql", "original_file_path": "macros/cross_db_utils/surrogate_key.sql", "name": "clickhouse__surrogate_key", "macro_sql": "{% macro clickhouse__surrogate_key(field_list) -%}\n    assumeNotNull(hex(MD5(\n        {%- for field in field_list %}\n            {% if not loop.last %}\n                toString({{ field }}) || '~' ||\n            {% else %}\n                toString({{ field }})\n            {% endif %}\n        {%- endfor %}\n    )))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.31867}, "macro.airbyte_utils.quote": {"unique_id": "macro.airbyte_utils.quote", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/quote.sql", "original_file_path": "macros/cross_db_utils/quote.sql", "name": "quote", "macro_sql": "{% macro quote(column_name) -%}\n  {{ adapter.dispatch('quote')(column_name) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__quote"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3199387}, "macro.airbyte_utils.default__quote": {"unique_id": "macro.airbyte_utils.default__quote", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/quote.sql", "original_file_path": "macros/cross_db_utils/quote.sql", "name": "default__quote", "macro_sql": "{% macro default__quote(column_name) -%}\n  adapter.quote(column_name)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.320297}, "macro.airbyte_utils.oracle__quote": {"unique_id": "macro.airbyte_utils.oracle__quote", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/quote.sql", "original_file_path": "macros/cross_db_utils/quote.sql", "name": "oracle__quote", "macro_sql": "{% macro oracle__quote(column_name) -%}\n  {{ '\\\"' ~ column_name ~ '\\\"'}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3207932}, "macro.airbyte_utils.clickhouse__quote": {"unique_id": "macro.airbyte_utils.clickhouse__quote", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/quote.sql", "original_file_path": "macros/cross_db_utils/quote.sql", "name": "clickhouse__quote", "macro_sql": "{% macro clickhouse__quote(column_name) -%}\n  {{ '\\\"' ~ column_name ~ '\\\"'}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3212702}, "macro.airbyte_utils.type_json": {"unique_id": "macro.airbyte_utils.type_json", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_json", "macro_sql": "\n\n{%- macro type_json() -%}\n  {{ adapter.dispatch('type_json')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__type_json"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3292773}, "macro.airbyte_utils.default__type_json": {"unique_id": "macro.airbyte_utils.default__type_json", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_json", "macro_sql": "{% macro default__type_json() %}\n    string\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3295872}, "macro.airbyte_utils.type_binary": {"unique_id": "macro.airbyte_utils.type_binary", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_binary", "macro_sql": "\n\n{%- macro type_binary() -%}\n  {{ adapter.dispatch('type_binary')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__type_binary"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3301244}, "macro.airbyte_utils.default__type_binary": {"unique_id": "macro.airbyte_utils.default__type_binary", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_binary", "macro_sql": "{%- macro default__type_binary() -%}\n    binary\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3304322}, "macro.airbyte_utils.redshift__type_json": {"unique_id": "macro.airbyte_utils.redshift__type_json", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "redshift__type_json", "macro_sql": "{%- macro redshift__type_json() -%}\n  {%- if redshift_super_type() -%}\n    super\n  {%- else -%}\n    varchar\n  {%- endif -%}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.redshift_super_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3310237}, "macro.airbyte_utils.postgres__type_json": {"unique_id": "macro.airbyte_utils.postgres__type_json", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_json", "macro_sql": "{% macro postgres__type_json() %}\n    jsonb\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3313415}, "macro.airbyte_utils.oracle__type_json": {"unique_id": "macro.airbyte_utils.oracle__type_json", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "oracle__type_json", "macro_sql": "\n\n{%- macro oracle__type_json() -%}\n    varchar2(4000)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.331653}, "macro.airbyte_utils.snowflake__type_json": {"unique_id": "macro.airbyte_utils.snowflake__type_json", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_json", "macro_sql": "{% macro snowflake__type_json() %}\n    variant\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3321066}, "macro.airbyte_utils.mysql__type_json": {"unique_id": "macro.airbyte_utils.mysql__type_json", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mysql__type_json", "macro_sql": "\n\n{%- macro mysql__type_json() -%}\n    json\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3324075}, "macro.airbyte_utils.sqlserver__type_json": {"unique_id": "macro.airbyte_utils.sqlserver__type_json", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "sqlserver__type_json", "macro_sql": "{%- macro sqlserver__type_json() -%}\n    NVARCHAR(max)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3327062}, "macro.airbyte_utils.clickhouse__type_json": {"unique_id": "macro.airbyte_utils.clickhouse__type_json", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_json", "macro_sql": "{% macro clickhouse__type_json() %}\n    String\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3330023}, "macro.airbyte_utils.tidb__type_json": {"unique_id": "macro.airbyte_utils.tidb__type_json", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_json", "macro_sql": "\n\n{%- macro tidb__type_json() -%}\n    json\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3332977}, "macro.airbyte_utils.mysql__type_string": {"unique_id": "macro.airbyte_utils.mysql__type_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mysql__type_string", "macro_sql": "\n\n{%- macro mysql__type_string() -%}\n    char\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.33359}, "macro.airbyte_utils.oracle__type_string": {"unique_id": "macro.airbyte_utils.oracle__type_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "oracle__type_string", "macro_sql": "{%- macro oracle__type_string() -%}\n    varchar2(4000)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.333897}, "macro.airbyte_utils.sqlserver__type_string": {"unique_id": "macro.airbyte_utils.sqlserver__type_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "sqlserver__type_string", "macro_sql": "{% macro sqlserver__type_string() %}\n    NVARCHAR(max)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3341954}, "macro.airbyte_utils.clickhouse__type_string": {"unique_id": "macro.airbyte_utils.clickhouse__type_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_string", "macro_sql": "{%- macro clickhouse__type_string() -%}\n    String\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3344913}, "macro.airbyte_utils.postgres__type_string": {"unique_id": "macro.airbyte_utils.postgres__type_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_string", "macro_sql": "\n{%- macro postgres__type_string() -%}\n    text\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3347938}, "macro.airbyte_utils.tidb__type_string": {"unique_id": "macro.airbyte_utils.tidb__type_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_string", "macro_sql": "{%- macro tidb__type_string() -%}\n    char(1000)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3351035}, "macro.airbyte_utils.postgres__type_binary": {"unique_id": "macro.airbyte_utils.postgres__type_binary", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_binary", "macro_sql": "\n\n{%- macro postgres__type_binary() -%}\n    bytea\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3354414}, "macro.airbyte_utils.bigquery__type_binary": {"unique_id": "macro.airbyte_utils.bigquery__type_binary", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_binary", "macro_sql": "{%- macro bigquery__type_binary() -%}\n    bytes\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3357368}, "macro.airbyte_utils.mssql__type_binary": {"unique_id": "macro.airbyte_utils.mssql__type_binary", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mssql__type_binary", "macro_sql": "{%- macro mssql__type_binary() -%}\n    VARBINARY(MAX)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3360431}, "macro.airbyte_utils.snowflake__type_binary": {"unique_id": "macro.airbyte_utils.snowflake__type_binary", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_binary", "macro_sql": "{%- macro snowflake__type_binary() -%}\n    VARBINARY\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3363605}, "macro.airbyte_utils.clickhouse__type_binary": {"unique_id": "macro.airbyte_utils.clickhouse__type_binary", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_binary", "macro_sql": "{%- macro clickhouse__type_binary() -%}\n    VARBINARY\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3367274}, "macro.airbyte_utils.mysql__type_float": {"unique_id": "macro.airbyte_utils.mysql__type_float", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mysql__type_float", "macro_sql": "{% macro mysql__type_float() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3370476}, "macro.airbyte_utils.oracle__type_float": {"unique_id": "macro.airbyte_utils.oracle__type_float", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "oracle__type_float", "macro_sql": "{% macro oracle__type_float() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.337359}, "macro.airbyte_utils.clickhouse__type_float": {"unique_id": "macro.airbyte_utils.clickhouse__type_float", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_float", "macro_sql": "{% macro clickhouse__type_float() %}\n    Float64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3376808}, "macro.airbyte_utils.tidb__type_float": {"unique_id": "macro.airbyte_utils.tidb__type_float", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_float", "macro_sql": "{% macro tidb__type_float() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.337976}, "macro.airbyte_utils.default__type_int": {"unique_id": "macro.airbyte_utils.default__type_int", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_int", "macro_sql": "{% macro default__type_int() %}\n    int\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3382685}, "macro.airbyte_utils.mysql__type_int": {"unique_id": "macro.airbyte_utils.mysql__type_int", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mysql__type_int", "macro_sql": "{% macro mysql__type_int() %}\n    signed\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3385763}, "macro.airbyte_utils.oracle__type_int": {"unique_id": "macro.airbyte_utils.oracle__type_int", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "oracle__type_int", "macro_sql": "{% macro oracle__type_int() %}\n    int\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3390167}, "macro.airbyte_utils.clickhouse__type_int": {"unique_id": "macro.airbyte_utils.clickhouse__type_int", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_int", "macro_sql": "{% macro clickhouse__type_int() %}\n    INT\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3393123}, "macro.airbyte_utils.tidb__type_int": {"unique_id": "macro.airbyte_utils.tidb__type_int", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_int", "macro_sql": "{% macro tidb__type_int() %}\n    signed\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3396049}, "macro.airbyte_utils.mysql__type_bigint": {"unique_id": "macro.airbyte_utils.mysql__type_bigint", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mysql__type_bigint", "macro_sql": "{% macro mysql__type_bigint() %}\n    signed\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3398948}, "macro.airbyte_utils.oracle__type_bigint": {"unique_id": "macro.airbyte_utils.oracle__type_bigint", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "oracle__type_bigint", "macro_sql": "{% macro oracle__type_bigint() %}\n    numeric\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3402045}, "macro.airbyte_utils.clickhouse__type_bigint": {"unique_id": "macro.airbyte_utils.clickhouse__type_bigint", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_bigint", "macro_sql": "{% macro clickhouse__type_bigint() %}\n    BIGINT\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3404925}, "macro.airbyte_utils.tidb__type_bigint": {"unique_id": "macro.airbyte_utils.tidb__type_bigint", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_bigint", "macro_sql": "{% macro tidb__type_bigint() %}\n    signed\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3407943}, "macro.airbyte_utils.mysql__type_numeric": {"unique_id": "macro.airbyte_utils.mysql__type_numeric", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mysql__type_numeric", "macro_sql": "{% macro mysql__type_numeric() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3410816}, "macro.airbyte_utils.clickhouse__type_numeric": {"unique_id": "macro.airbyte_utils.clickhouse__type_numeric", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_numeric", "macro_sql": "{% macro clickhouse__type_numeric() %}\n    Float64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.341372}, "macro.airbyte_utils.tidb__type_numeric": {"unique_id": "macro.airbyte_utils.tidb__type_numeric", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_numeric", "macro_sql": "{% macro tidb__type_numeric() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3416631}, "macro.airbyte_utils.type_very_large_integer": {"unique_id": "macro.airbyte_utils.type_very_large_integer", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_very_large_integer", "macro_sql": "\n{%- macro type_very_large_integer() -%}\n  {{ adapter.dispatch('type_very_large_integer')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__type_very_large_integer"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3421679}, "macro.airbyte_utils.default__type_very_large_integer": {"unique_id": "macro.airbyte_utils.default__type_very_large_integer", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_very_large_integer", "macro_sql": "{% macro default__type_very_large_integer() %}\n    numeric\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3424644}, "macro.airbyte_utils.snowflake__type_very_large_integer": {"unique_id": "macro.airbyte_utils.snowflake__type_very_large_integer", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_very_large_integer", "macro_sql": "{% macro snowflake__type_very_large_integer() %}\n    numeric\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.342755}, "macro.airbyte_utils.mysql__type_very_large_integer": {"unique_id": "macro.airbyte_utils.mysql__type_very_large_integer", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mysql__type_very_large_integer", "macro_sql": "{% macro mysql__type_very_large_integer() %}\n    decimal(38, 0)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3430533}, "macro.airbyte_utils.clickhouse__type_very_large_integer": {"unique_id": "macro.airbyte_utils.clickhouse__type_very_large_integer", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_very_large_integer", "macro_sql": "{% macro clickhouse__type_very_large_integer() %}\n    decimal128(0)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3433466}, "macro.airbyte_utils.tidb__type_very_large_integer": {"unique_id": "macro.airbyte_utils.tidb__type_very_large_integer", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_very_large_integer", "macro_sql": "{% macro tidb__type_very_large_integer() %}\n    decimal(38, 0)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.343657}, "macro.airbyte_utils.mysql__type_timestamp": {"unique_id": "macro.airbyte_utils.mysql__type_timestamp", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mysql__type_timestamp", "macro_sql": "{% macro mysql__type_timestamp() %}\n    time\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.343948}, "macro.airbyte_utils.sqlserver__type_timestamp": {"unique_id": "macro.airbyte_utils.sqlserver__type_timestamp", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "sqlserver__type_timestamp", "macro_sql": "\n\n{%- macro sqlserver__type_timestamp() -%}\n    {#-- in TSQL timestamp is really datetime --#}\n    {#-- https://docs.microsoft.com/en-us/sql/t-sql/functions/date-and-time-data-types-and-functions-transact-sql?view=sql-server-ver15#DateandTimeDataTypes --#}\n    datetime\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3443048}, "macro.airbyte_utils.clickhouse__type_timestamp": {"unique_id": "macro.airbyte_utils.clickhouse__type_timestamp", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_timestamp", "macro_sql": "{% macro clickhouse__type_timestamp() %}\n    DateTime64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3446083}, "macro.airbyte_utils.tidb__type_timestamp": {"unique_id": "macro.airbyte_utils.tidb__type_timestamp", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_timestamp", "macro_sql": "{% macro tidb__type_timestamp() %}\n    time\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3449075}, "macro.airbyte_utils.type_timestamp_with_timezone": {"unique_id": "macro.airbyte_utils.type_timestamp_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_timestamp_with_timezone", "macro_sql": "\n\n{%- macro type_timestamp_with_timezone() -%}\n  {{ adapter.dispatch('type_timestamp_with_timezone')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__type_timestamp_with_timezone"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.34542}, "macro.airbyte_utils.default__type_timestamp_with_timezone": {"unique_id": "macro.airbyte_utils.default__type_timestamp_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_timestamp_with_timezone", "macro_sql": "{% macro default__type_timestamp_with_timezone() %}\n    timestamp with time zone\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3458817}, "macro.airbyte_utils.bigquery__type_timestamp_with_timezone": {"unique_id": "macro.airbyte_utils.bigquery__type_timestamp_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_timestamp_with_timezone", "macro_sql": "{% macro bigquery__type_timestamp_with_timezone() %}\n    timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3461752}, "macro.airbyte_utils.mysql__type_timestamp_with_timezone": {"unique_id": "macro.airbyte_utils.mysql__type_timestamp_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mysql__type_timestamp_with_timezone", "macro_sql": "\n{%- macro mysql__type_timestamp_with_timezone() -%}\n    char(1024)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3464699}, "macro.airbyte_utils.oracle__type_timestamp_with_timezone": {"unique_id": "macro.airbyte_utils.oracle__type_timestamp_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "oracle__type_timestamp_with_timezone", "macro_sql": "{% macro oracle__type_timestamp_with_timezone() %}\n    varchar2(4000)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3467925}, "macro.airbyte_utils.sqlserver__type_timestamp_with_timezone": {"unique_id": "macro.airbyte_utils.sqlserver__type_timestamp_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "sqlserver__type_timestamp_with_timezone", "macro_sql": "\n\n{%- macro sqlserver__type_timestamp_with_timezone() -%}\n    datetimeoffset\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3471286}, "macro.airbyte_utils.redshift__type_timestamp_with_timezone": {"unique_id": "macro.airbyte_utils.redshift__type_timestamp_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "redshift__type_timestamp_with_timezone", "macro_sql": "{% macro redshift__type_timestamp_with_timezone() %}\n    TIMESTAMPTZ\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3474324}, "macro.airbyte_utils.clickhouse__type_timestamp_with_timezone": {"unique_id": "macro.airbyte_utils.clickhouse__type_timestamp_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_timestamp_with_timezone", "macro_sql": "{% macro clickhouse__type_timestamp_with_timezone() %}\n    DateTime64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.347751}, "macro.airbyte_utils.tidb__type_timestamp_with_timezone": {"unique_id": "macro.airbyte_utils.tidb__type_timestamp_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_timestamp_with_timezone", "macro_sql": "\n\n{%- macro tidb__type_timestamp_with_timezone() -%}\n    char(1000)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.348078}, "macro.airbyte_utils.type_timestamp_without_timezone": {"unique_id": "macro.airbyte_utils.type_timestamp_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_timestamp_without_timezone", "macro_sql": "\n\n{%- macro type_timestamp_without_timezone() -%}\n  {{ adapter.dispatch('type_timestamp_without_timezone')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__type_timestamp_without_timezone"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.348601}, "macro.airbyte_utils.default__type_timestamp_without_timezone": {"unique_id": "macro.airbyte_utils.default__type_timestamp_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_timestamp_without_timezone", "macro_sql": "{% macro default__type_timestamp_without_timezone() %}\n    timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3489103}, "macro.airbyte_utils.sqlserver__type_timestamp_without_timezone": {"unique_id": "macro.airbyte_utils.sqlserver__type_timestamp_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "sqlserver__type_timestamp_without_timezone", "macro_sql": "\n\n{%- macro sqlserver__type_timestamp_without_timezone() -%}\n    {#-- in TSQL timestamp is really datetime or datetime2 --#}\n    {#-- https://docs.microsoft.com/en-us/sql/t-sql/functions/date-and-time-data-types-and-functions-transact-sql?view=sql-server-ver15#DateandTimeDataTypes --#}\n    datetime2\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3492632}, "macro.airbyte_utils.bigquery__type_timestamp_without_timezone": {"unique_id": "macro.airbyte_utils.bigquery__type_timestamp_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_timestamp_without_timezone", "macro_sql": "{% macro bigquery__type_timestamp_without_timezone() %}\n    datetime\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3495665}, "macro.airbyte_utils.oracle__type_timestamp_without_timezone": {"unique_id": "macro.airbyte_utils.oracle__type_timestamp_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "oracle__type_timestamp_without_timezone", "macro_sql": "{% macro oracle__type_timestamp_without_timezone() %}\n    varchar2(4000)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.349869}, "macro.airbyte_utils.redshift__type_timestamp_without_timezone": {"unique_id": "macro.airbyte_utils.redshift__type_timestamp_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "redshift__type_timestamp_without_timezone", "macro_sql": "{% macro redshift__type_timestamp_without_timezone() %}\n    TIMESTAMP\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3501701}, "macro.airbyte_utils.tidb__type_timestamp_without_timezone": {"unique_id": "macro.airbyte_utils.tidb__type_timestamp_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_timestamp_without_timezone", "macro_sql": "{% macro tidb__type_timestamp_without_timezone() %}\n    datetime\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.350469}, "macro.airbyte_utils.type_time_without_timezone": {"unique_id": "macro.airbyte_utils.type_time_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_time_without_timezone", "macro_sql": "\n\n{%- macro type_time_without_timezone() -%}\n  {{ adapter.dispatch('type_time_without_timezone')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__type_time_without_timezone"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.351023}, "macro.airbyte_utils.default__type_time_without_timezone": {"unique_id": "macro.airbyte_utils.default__type_time_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_time_without_timezone", "macro_sql": "{% macro default__type_time_without_timezone() %}\n    time\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3513293}, "macro.airbyte_utils.oracle__type_time_without_timezone": {"unique_id": "macro.airbyte_utils.oracle__type_time_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "oracle__type_time_without_timezone", "macro_sql": "{% macro oracle__type_time_without_timezone() %}\n    varchar2(4000)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.351633}, "macro.airbyte_utils.redshift__type_time_without_timezone": {"unique_id": "macro.airbyte_utils.redshift__type_time_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "redshift__type_time_without_timezone", "macro_sql": "{% macro redshift__type_time_without_timezone() %}\n    TIME\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3519568}, "macro.airbyte_utils.clickhouse__type_time_without_timezone": {"unique_id": "macro.airbyte_utils.clickhouse__type_time_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_time_without_timezone", "macro_sql": "{% macro clickhouse__type_time_without_timezone() %}\n    String\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3522878}, "macro.airbyte_utils.tidb__type_time_without_timezone": {"unique_id": "macro.airbyte_utils.tidb__type_time_without_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_time_without_timezone", "macro_sql": "{% macro tidb__type_time_without_timezone() %}\n    time\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3526676}, "macro.airbyte_utils.type_time_with_timezone": {"unique_id": "macro.airbyte_utils.type_time_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_time_with_timezone", "macro_sql": "\n\n{%- macro type_time_with_timezone() -%}\n  {{ adapter.dispatch('type_time_with_timezone')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__type_time_with_timezone"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.353355}, "macro.airbyte_utils.default__type_time_with_timezone": {"unique_id": "macro.airbyte_utils.default__type_time_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_time_with_timezone", "macro_sql": "{% macro default__type_time_with_timezone() %}\n    time with time zone\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3536797}, "macro.airbyte_utils.mysql__type_time_with_timezone": {"unique_id": "macro.airbyte_utils.mysql__type_time_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "mysql__type_time_with_timezone", "macro_sql": "\n\n{%- macro mysql__type_time_with_timezone() -%}\n    char(1024)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.353988}, "macro.airbyte_utils.sqlserver__type_time_with_timezone": {"unique_id": "macro.airbyte_utils.sqlserver__type_time_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "sqlserver__type_time_with_timezone", "macro_sql": "{%- macro sqlserver__type_time_with_timezone() -%}\n    NVARCHAR(max)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3543062}, "macro.airbyte_utils.bigquery__type_time_with_timezone": {"unique_id": "macro.airbyte_utils.bigquery__type_time_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_time_with_timezone", "macro_sql": "{% macro bigquery__type_time_with_timezone() %}\n    STRING\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.354597}, "macro.airbyte_utils.oracle__type_time_with_timezone": {"unique_id": "macro.airbyte_utils.oracle__type_time_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "oracle__type_time_with_timezone", "macro_sql": "{% macro oracle__type_time_with_timezone() %}\n    varchar2(4000)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3550174}, "macro.airbyte_utils.snowflake__type_time_with_timezone": {"unique_id": "macro.airbyte_utils.snowflake__type_time_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_time_with_timezone", "macro_sql": "{% macro snowflake__type_time_with_timezone() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3553348}, "macro.airbyte_utils.redshift__type_time_with_timezone": {"unique_id": "macro.airbyte_utils.redshift__type_time_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "redshift__type_time_with_timezone", "macro_sql": "{% macro redshift__type_time_with_timezone() %}\n    TIMETZ\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3556602}, "macro.airbyte_utils.clickhouse__type_time_with_timezone": {"unique_id": "macro.airbyte_utils.clickhouse__type_time_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_time_with_timezone", "macro_sql": "{% macro clickhouse__type_time_with_timezone() %}\n    String\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3559992}, "macro.airbyte_utils.tidb__type_time_with_timezone": {"unique_id": "macro.airbyte_utils.tidb__type_time_with_timezone", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "tidb__type_time_with_timezone", "macro_sql": "\n\n{%- macro tidb__type_time_with_timezone() -%}\n    char(1000)\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.356334}, "macro.airbyte_utils.type_date": {"unique_id": "macro.airbyte_utils.type_date", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_date", "macro_sql": "\n\n{%- macro type_date() -%}\n  {{ adapter.dispatch('type_date')() }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__type_date"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3568704}, "macro.airbyte_utils.default__type_date": {"unique_id": "macro.airbyte_utils.default__type_date", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_date", "macro_sql": "{% macro default__type_date() %}\n    date\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3571792}, "macro.airbyte_utils.oracle__type_date": {"unique_id": "macro.airbyte_utils.oracle__type_date", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "oracle__type_date", "macro_sql": "{% macro oracle__type_date() %}\n    varchar2(4000)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3574831}, "macro.airbyte_utils.sqlserver__type_date": {"unique_id": "macro.airbyte_utils.sqlserver__type_date", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "sqlserver__type_date", "macro_sql": "\n\n{%- macro sqlserver__type_date() -%}\n    date\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.357801}, "macro.airbyte_utils.clickhouse__type_date": {"unique_id": "macro.airbyte_utils.clickhouse__type_date", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "clickhouse__type_date", "macro_sql": "{% macro clickhouse__type_date() %}\n    Date32\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3581157}, "macro.airbyte_utils.redshift__alter_column_type": {"unique_id": "macro.airbyte_utils.redshift__alter_column_type", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/columns.sql", "original_file_path": "macros/cross_db_utils/columns.sql", "name": "redshift__alter_column_type", "macro_sql": "{% macro redshift__alter_column_type(relation, column_name, new_column_type) -%}\n\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    {% if new_column_type.lower() == \"super\" %}\n        update {{ relation }} set {{ adapter.quote(tmp_column) }} = JSON_PARSE({{ adapter.quote(column_name) }});\n    {% else %}\n        update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    {% endif %}\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3627017}, "macro.airbyte_utils.sqlserver__hash": {"unique_id": "macro.airbyte_utils.sqlserver__hash", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "sqlserver__hash", "macro_sql": "{% macro sqlserver__hash(field) -%}\n    convert(varchar(32), HashBytes('md5',  coalesce(cast({{field}} as {{dbt_utils.type_string()}}), '')), 2)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3637335}, "macro.airbyte_utils.mysql__except": {"unique_id": "macro.airbyte_utils.mysql__except", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "mysql__except", "macro_sql": "{% macro mysql__except() %}\n    {% do exceptions.warn(\"MySQL does not support EXCEPT operator\") %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3648105}, "macro.airbyte_utils.oracle__except": {"unique_id": "macro.airbyte_utils.oracle__except", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "oracle__except", "macro_sql": "{% macro oracle__except() %}\n    minus\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.365115}, "macro.airbyte_utils.boolean_to_string": {"unique_id": "macro.airbyte_utils.boolean_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "boolean_to_string", "macro_sql": "{% macro boolean_to_string(boolean_column) -%}\n  {{ adapter.dispatch('boolean_to_string')(boolean_column) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__boolean_to_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3685687}, "macro.airbyte_utils.default__boolean_to_string": {"unique_id": "macro.airbyte_utils.default__boolean_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "default__boolean_to_string", "macro_sql": "{% macro default__boolean_to_string(boolean_column) -%}\n    {{ boolean_column }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.368961}, "macro.airbyte_utils.redshift__boolean_to_string": {"unique_id": "macro.airbyte_utils.redshift__boolean_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "redshift__boolean_to_string", "macro_sql": "{% macro redshift__boolean_to_string(boolean_column) -%}\n    case when {{ boolean_column }} then 'true' else 'false' end\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3694193}, "macro.airbyte_utils.array_to_string": {"unique_id": "macro.airbyte_utils.array_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "array_to_string", "macro_sql": "{% macro array_to_string(array_column) -%}\n  {{ adapter.dispatch('array_to_string')(array_column) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__array_to_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3699992}, "macro.airbyte_utils.default__array_to_string": {"unique_id": "macro.airbyte_utils.default__array_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "default__array_to_string", "macro_sql": "{% macro default__array_to_string(array_column) -%}\n    {{ array_column }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.370388}, "macro.airbyte_utils.bigquery__array_to_string": {"unique_id": "macro.airbyte_utils.bigquery__array_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "bigquery__array_to_string", "macro_sql": "{% macro bigquery__array_to_string(array_column) -%}\n    array_to_string({{ array_column }}, \"|\", \"\")\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.370816}, "macro.airbyte_utils.oracle__array_to_string": {"unique_id": "macro.airbyte_utils.oracle__array_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "oracle__array_to_string", "macro_sql": "{% macro oracle__array_to_string(array_column) -%}\n    cast({{ array_column }} as varchar2(4000))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3714333}, "macro.airbyte_utils.sqlserver__array_to_string": {"unique_id": "macro.airbyte_utils.sqlserver__array_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "sqlserver__array_to_string", "macro_sql": "{% macro sqlserver__array_to_string(array_column) -%}\n    cast({{ array_column }} as {{dbt_utils.type_string()}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3720455}, "macro.airbyte_utils.redshift__array_to_string": {"unique_id": "macro.airbyte_utils.redshift__array_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "redshift__array_to_string", "macro_sql": "{% macro redshift__array_to_string(array_column) -%}\n  {% if redshift_super_type() -%}\n    json_serialize({{array_column}})\n  {%- else -%}\n    {{ array_column }}\n  {%- endif %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.redshift_super_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3727748}, "macro.airbyte_utils.object_to_string": {"unique_id": "macro.airbyte_utils.object_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "object_to_string", "macro_sql": "{% macro object_to_string(object_column) -%}\n  {{ adapter.dispatch('object_to_string')(object_column) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__object_to_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3733428}, "macro.airbyte_utils.default__object_to_string": {"unique_id": "macro.airbyte_utils.default__object_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "default__object_to_string", "macro_sql": "{% macro default__object_to_string(object_column) -%}\n    {{ object_column }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3737373}, "macro.airbyte_utils.redshift__object_to_string": {"unique_id": "macro.airbyte_utils.redshift__object_to_string", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "redshift__object_to_string", "macro_sql": "{% macro redshift__object_to_string(object_column) -%}\n  {% if redshift_super_type() -%}\n    json_serialize({{object_column}})\n  {%- else -%}\n    {{ object_column }}\n  {%- endif %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.redshift_super_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3744392}, "macro.airbyte_utils.cast_to_boolean": {"unique_id": "macro.airbyte_utils.cast_to_boolean", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "cast_to_boolean", "macro_sql": "{% macro cast_to_boolean(field) -%}\n    {{ adapter.dispatch('cast_to_boolean')(field) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__cast_to_boolean"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.375003}, "macro.airbyte_utils.default__cast_to_boolean": {"unique_id": "macro.airbyte_utils.default__cast_to_boolean", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "default__cast_to_boolean", "macro_sql": "{% macro default__cast_to_boolean(field) -%}\n    cast({{ field }} as boolean)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.375481}, "macro.airbyte_utils.mysql__cast_to_boolean": {"unique_id": "macro.airbyte_utils.mysql__cast_to_boolean", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "mysql__cast_to_boolean", "macro_sql": "{% macro mysql__cast_to_boolean(field) -%}\n    IF(lower({{ field }}) = 'true', true, false)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3758893}, "macro.airbyte_utils.tidb__cast_to_boolean": {"unique_id": "macro.airbyte_utils.tidb__cast_to_boolean", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "tidb__cast_to_boolean", "macro_sql": "{% macro tidb__cast_to_boolean(field) -%}\n    IF(lower({{ field }}) = 'true', true, false)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3763185}, "macro.airbyte_utils.redshift__cast_to_boolean": {"unique_id": "macro.airbyte_utils.redshift__cast_to_boolean", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "redshift__cast_to_boolean", "macro_sql": "{% macro redshift__cast_to_boolean(field) -%}\n  {% if redshift_super_type() -%}\n    cast({{ field }} as boolean)\n  {%- else -%}\n    cast(decode({{ field }}, 'true', '1', 'false', '0')::integer as boolean)\n  {%- endif %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.redshift_super_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.37708}, "macro.airbyte_utils.sqlserver__cast_to_boolean": {"unique_id": "macro.airbyte_utils.sqlserver__cast_to_boolean", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "sqlserver__cast_to_boolean", "macro_sql": "{% macro sqlserver__cast_to_boolean(field) -%}\n    cast({{ field }} as bit)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.377507}, "macro.airbyte_utils.clickhouse__cast_to_boolean": {"unique_id": "macro.airbyte_utils.clickhouse__cast_to_boolean", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "clickhouse__cast_to_boolean", "macro_sql": "{% macro clickhouse__cast_to_boolean(field) -%}\n    IF(lower({{ field }}) = 'true', 1, 0)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.377928}, "macro.airbyte_utils.empty_string_to_null": {"unique_id": "macro.airbyte_utils.empty_string_to_null", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "empty_string_to_null", "macro_sql": "{% macro empty_string_to_null(field) -%}\n    {{ return(adapter.dispatch('empty_string_to_null')(field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__empty_string_to_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3785722}, "macro.airbyte_utils.default__empty_string_to_null": {"unique_id": "macro.airbyte_utils.default__empty_string_to_null", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "default__empty_string_to_null", "macro_sql": "\n\n{%- macro default__empty_string_to_null(field) -%}\n    nullif({{ field }}, '')\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3789866}, "macro.airbyte_utils.redshift__empty_string_to_null": {"unique_id": "macro.airbyte_utils.redshift__empty_string_to_null", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/type_conversions.sql", "original_file_path": "macros/cross_db_utils/type_conversions.sql", "name": "redshift__empty_string_to_null", "macro_sql": "\n\n{%- macro redshift__empty_string_to_null(field) -%}\n    nullif({{ field }}::varchar, '')\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.3793976}, "macro.airbyte_utils.format_json_path": {"unique_id": "macro.airbyte_utils.format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "format_json_path", "macro_sql": "{% macro format_json_path(json_path_list) -%}\n    {{ adapter.dispatch('format_json_path')(json_path_list) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.400493}, "macro.airbyte_utils.default__format_json_path": {"unique_id": "macro.airbyte_utils.default__format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "default__format_json_path", "macro_sql": "{% macro default__format_json_path(json_path_list) -%}\n    {{ '.' ~ json_path_list|join('.') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4010677}, "macro.airbyte_utils.oracle__format_json_path": {"unique_id": "macro.airbyte_utils.oracle__format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "oracle__format_json_path", "macro_sql": "{% macro oracle__format_json_path(json_path_list) -%}\n  {{ '\\'$.\"' ~ json_path_list|join('.\"') ~ '\"\\'' }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4016683}, "macro.airbyte_utils.bigquery__format_json_path": {"unique_id": "macro.airbyte_utils.bigquery__format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "bigquery__format_json_path", "macro_sql": "{% macro bigquery__format_json_path(json_path_list) -%}\n    {%- set str_list = [] -%}\n    {%- for json_path in json_path_list -%}\n        {%- if str_list.append(json_path.replace('\"', '\\\\\"')) -%} {%- endif -%}\n    {%- endfor -%}\n    {{ '\"$[\\'' ~ str_list|join('\\'][\\'') ~ '\\']\"' }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.403292}, "macro.airbyte_utils.bigquery_new_format_json_path": {"unique_id": "macro.airbyte_utils.bigquery_new_format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "bigquery_new_format_json_path", "macro_sql": "{% macro bigquery_new_format_json_path(json_path_list) -%}\n    {%- set str_list = [] -%}\n    {%- for json_path in json_path_list -%}\n        {%- if str_list.append(json_path.replace('\\'', '\\\\\\'')) -%} {%- endif -%}\n    {%- endfor -%}\n    {{ '\\'$.\"' ~ str_list|join('\".\"') ~ '\"\\'' }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4047542}, "macro.airbyte_utils.postgres__format_json_path": {"unique_id": "macro.airbyte_utils.postgres__format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "postgres__format_json_path", "macro_sql": "{% macro postgres__format_json_path(json_path_list) -%}\n    {%- set str_list = [] -%}\n    {%- for json_path in json_path_list -%}\n        {%- if str_list.append(json_path.replace(\"'\", \"''\")) -%} {%- endif -%}\n    {%- endfor -%}\n    {{ \"'\" ~ str_list|join(\"','\") ~ \"'\" }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4061122}, "macro.airbyte_utils.mysql__format_json_path": {"unique_id": "macro.airbyte_utils.mysql__format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "mysql__format_json_path", "macro_sql": "{% macro mysql__format_json_path(json_path_list) -%}\n    {# -- '$.\"x\".\"y\".\"z\"' #}\n    {{ \"'$.\\\"\" ~ json_path_list|join(\".\") ~ \"\\\"'\" }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.406749}, "macro.airbyte_utils.redshift__format_json_path": {"unique_id": "macro.airbyte_utils.redshift__format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "redshift__format_json_path", "macro_sql": "{% macro redshift__format_json_path(json_path_list) -%}\n    {%- set quote = '\"' if redshift_super_type() else \"'\" -%}\n    {%- set str_list = [] -%}\n    {%- for json_path in json_path_list -%}\n        {%- if str_list.append(json_path.replace(quote, quote + quote)) -%} {%- endif -%}\n    {%- endfor -%}\n    {{ quote ~ str_list|join(quote + \",\" + quote) ~ quote }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.redshift_super_type", "macro.dbt_utils.replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4086518}, "macro.airbyte_utils.snowflake__format_json_path": {"unique_id": "macro.airbyte_utils.snowflake__format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "snowflake__format_json_path", "macro_sql": "{% macro snowflake__format_json_path(json_path_list) -%}\n    {%- set str_list = [] -%}\n    {%- for json_path in json_path_list -%}\n        {%- if str_list.append(json_path.replace(\"'\", \"''\").replace('\"', '\"\"')) -%} {%- endif -%}\n    {%- endfor -%}\n    {{ \"'\\\"\" ~ str_list|join('\".\"') ~ \"\\\"'\" }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4101639}, "macro.airbyte_utils.sqlserver__format_json_path": {"unique_id": "macro.airbyte_utils.sqlserver__format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "sqlserver__format_json_path", "macro_sql": "{% macro sqlserver__format_json_path(json_path_list) -%}\n    {# -- '$.\"x\".\"y\".\"z\"' #}\n    {%- set str_list = [] -%}\n    {%- for json_path in json_path_list -%}\n        {%- if str_list.append(json_path.replace(\"'\", \"''\").replace('\"', '\\\\\"')) -%} {%- endif -%}\n    {%- endfor -%}\n    {{ \"'$.\\\"\" ~ str_list|join(\".\") ~ \"\\\"'\" }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4117415}, "macro.airbyte_utils.clickhouse__format_json_path": {"unique_id": "macro.airbyte_utils.clickhouse__format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "clickhouse__format_json_path", "macro_sql": "{% macro clickhouse__format_json_path(json_path_list) -%}\n    {%- set str_list = [] -%}\n    {%- for json_path in json_path_list -%}\n        {%- if str_list.append(json_path.replace(\"'\", \"''\").replace('\"', '\\\\\"')) -%} {%- endif -%}\n    {%- endfor -%}\n    {{ \"'\" ~ str_list|join(\"','\") ~ \"'\" }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4132943}, "macro.airbyte_utils.tidb__format_json_path": {"unique_id": "macro.airbyte_utils.tidb__format_json_path", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "tidb__format_json_path", "macro_sql": "{% macro tidb__format_json_path(json_path_list) -%}\n    {# -- '$.\"x\".\"y\".\"z\"' #}\n    {{ \"'$.\\\"\" ~ json_path_list|join(\".\") ~ \"\\\"'\" }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4139621}, "macro.airbyte_utils.json_extract": {"unique_id": "macro.airbyte_utils.json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "json_extract", "macro_sql": "{% macro json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    {{ adapter.dispatch('json_extract')(from_table, json_column, json_path_list, normalized_json_path) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__json_extract"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4148436}, "macro.airbyte_utils.default__json_extract": {"unique_id": "macro.airbyte_utils.default__json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "default__json_extract", "macro_sql": "{% macro default__json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    json_extract({{ from_table}}.{{ json_column }}, {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4156215}, "macro.airbyte_utils.oracle__json_extract": {"unique_id": "macro.airbyte_utils.oracle__json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "oracle__json_extract", "macro_sql": "{% macro oracle__json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    json_value({{ json_column }}, {{ format_json_path(normalized_json_path) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4163563}, "macro.airbyte_utils.bigquery__json_extract": {"unique_id": "macro.airbyte_utils.bigquery__json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "bigquery__json_extract", "macro_sql": "{% macro bigquery__json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    {%- if from_table|string() == '' %}\n        json_extract({{ json_column }}, {{ format_json_path(normalized_json_path) }})\n    {% else %}\n        json_extract({{ from_table}}.{{ json_column }}, {{ format_json_path(normalized_json_path) }})\n    {% endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4177673}, "macro.airbyte_utils.postgres__json_extract": {"unique_id": "macro.airbyte_utils.postgres__json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "postgres__json_extract", "macro_sql": "{% macro postgres__json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    {%- if from_table|string() == '' %}\n        jsonb_extract_path({{ json_column }}, {{ format_json_path(json_path_list) }})\n    {% else %}\n        jsonb_extract_path({{ from_table }}.{{ json_column }}, {{ format_json_path(json_path_list) }})\n    {% endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4191213}, "macro.airbyte_utils.mysql__json_extract": {"unique_id": "macro.airbyte_utils.mysql__json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "mysql__json_extract", "macro_sql": "{% macro mysql__json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    {%- if from_table|string() == '' %}\n        json_extract({{ json_column }}, {{ format_json_path(normalized_json_path) }})\n    {% else %}\n        json_extract({{ from_table }}.{{ json_column }}, {{ format_json_path(normalized_json_path) }})\n    {% endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4204822}, "macro.airbyte_utils.redshift__json_extract": {"unique_id": "macro.airbyte_utils.redshift__json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "redshift__json_extract", "macro_sql": "{% macro redshift__json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    {%- if from_table|string() != '' -%}\n    {%- set json_column = from_table|string() + \".\" + json_column|string() -%}\n    {%- endif -%}\n    {%- if redshift_super_type() -%}\n        case when {{ json_column }}.{{ format_json_path(json_path_list) }} != '' then {{ json_column }}.{{ format_json_path(json_path_list) }} end\n    {%- else -%}\n        case when json_extract_path_text({{ json_column }}, {{ format_json_path(json_path_list) }}, true) != '' then json_extract_path_text({{ json_column }}, {{ format_json_path(json_path_list) }}, true) end\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.redshift_super_type", "macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4227748}, "macro.airbyte_utils.snowflake__json_extract": {"unique_id": "macro.airbyte_utils.snowflake__json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "snowflake__json_extract", "macro_sql": "{% macro snowflake__json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    {%- if from_table|string() == '' %}\n        get_path(parse_json({{ json_column }}), {{ format_json_path(json_path_list) }})\n    {% else %}\n        get_path(parse_json({{ from_table }}.{{ json_column }}), {{ format_json_path(json_path_list) }})\n    {% endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4241512}, "macro.airbyte_utils.sqlserver__json_extract": {"unique_id": "macro.airbyte_utils.sqlserver__json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "sqlserver__json_extract", "macro_sql": "{% macro sqlserver__json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    json_query({{ json_column }}, {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4248357}, "macro.airbyte_utils.clickhouse__json_extract": {"unique_id": "macro.airbyte_utils.clickhouse__json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "clickhouse__json_extract", "macro_sql": "{% macro clickhouse__json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    {%- if from_table|string() == '' %}\n        JSONExtractRaw(assumeNotNull({{ json_column }}), {{ format_json_path(json_path_list) }})\n    {% else %}\n        JSONExtractRaw(assumeNotNull({{ from_table }}.{{ json_column }}), {{ format_json_path(json_path_list) }})\n    {% endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4261606}, "macro.airbyte_utils.tidb__json_extract": {"unique_id": "macro.airbyte_utils.tidb__json_extract", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "tidb__json_extract", "macro_sql": "{% macro tidb__json_extract(from_table, json_column, json_path_list, normalized_json_path) -%}\n    {%- if from_table|string() == '' %}\n        json_extract({{ json_column }}, {{ format_json_path(normalized_json_path) }})\n    {% else %}\n        json_extract({{ from_table }}.{{ json_column }}, {{ format_json_path(normalized_json_path) }})\n    {% endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4276934}, "macro.airbyte_utils.json_extract_scalar": {"unique_id": "macro.airbyte_utils.json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "json_extract_scalar", "macro_sql": "{% macro json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    {{ adapter.dispatch('json_extract_scalar')(json_column, json_path_list, normalized_json_path) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__json_extract_scalar"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.428467}, "macro.airbyte_utils.default__json_extract_scalar": {"unique_id": "macro.airbyte_utils.default__json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "default__json_extract_scalar", "macro_sql": "{% macro default__json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    json_extract_scalar({{ json_column }}, {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4291115}, "macro.airbyte_utils.oracle__json_extract_scalar": {"unique_id": "macro.airbyte_utils.oracle__json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "oracle__json_extract_scalar", "macro_sql": "{% macro oracle__json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    json_value({{ json_column }}, {{ format_json_path(normalized_json_path) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4297488}, "macro.airbyte_utils.bigquery__json_extract_scalar": {"unique_id": "macro.airbyte_utils.bigquery__json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "bigquery__json_extract_scalar", "macro_sql": "{% macro bigquery__json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    json_extract_scalar({{ json_column }}, {{ format_json_path(normalized_json_path) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4304357}, "macro.airbyte_utils.postgres__json_extract_scalar": {"unique_id": "macro.airbyte_utils.postgres__json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "postgres__json_extract_scalar", "macro_sql": "{% macro postgres__json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    jsonb_extract_path_text({{ json_column }}, {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.431133}, "macro.airbyte_utils.mysql__json_extract_scalar": {"unique_id": "macro.airbyte_utils.mysql__json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "mysql__json_extract_scalar", "macro_sql": "{% macro mysql__json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    json_value({{ json_column }}, {{ format_json_path(normalized_json_path) }} RETURNING CHAR)\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4317982}, "macro.airbyte_utils.redshift__json_extract_scalar": {"unique_id": "macro.airbyte_utils.redshift__json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "redshift__json_extract_scalar", "macro_sql": "{% macro redshift__json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    {%- if redshift_super_type() -%}\n    case when {{ json_column }}.{{ format_json_path(json_path_list) }} != '' then {{ json_column }}.{{ format_json_path(json_path_list) }} end\n    {%- else -%}\n    case when json_extract_path_text({{ json_column }}, {{ format_json_path(json_path_list) }}, true) != '' then json_extract_path_text({{ json_column }}, {{ format_json_path(json_path_list) }}, true) end\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.redshift_super_type", "macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4334729}, "macro.airbyte_utils.snowflake__json_extract_scalar": {"unique_id": "macro.airbyte_utils.snowflake__json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "snowflake__json_extract_scalar", "macro_sql": "{% macro snowflake__json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    to_varchar(get_path(parse_json({{ json_column }}), {{ format_json_path(json_path_list) }}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4341896}, "macro.airbyte_utils.sqlserver__json_extract_scalar": {"unique_id": "macro.airbyte_utils.sqlserver__json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "sqlserver__json_extract_scalar", "macro_sql": "{% macro sqlserver__json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    json_value({{ json_column }}, {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4348319}, "macro.airbyte_utils.clickhouse__json_extract_scalar": {"unique_id": "macro.airbyte_utils.clickhouse__json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "clickhouse__json_extract_scalar", "macro_sql": "{% macro clickhouse__json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    JSONExtractRaw(assumeNotNull({{ json_column }}), {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4355388}, "macro.airbyte_utils.tidb__json_extract_scalar": {"unique_id": "macro.airbyte_utils.tidb__json_extract_scalar", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "tidb__json_extract_scalar", "macro_sql": "{% macro tidb__json_extract_scalar(json_column, json_path_list, normalized_json_path) -%}\n    IF(\n        JSON_UNQUOTE(JSON_EXTRACT({{ json_column }}, {{ format_json_path(normalized_json_path) }})) = 'null',\n        NULL,\n        JSON_UNQUOTE(JSON_EXTRACT({{ json_column }}, {{ format_json_path(normalized_json_path) }}))\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.436491}, "macro.airbyte_utils.json_extract_array": {"unique_id": "macro.airbyte_utils.json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "json_extract_array", "macro_sql": "{% macro json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    {{ adapter.dispatch('json_extract_array')(json_column, json_path_list, normalized_json_path) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__json_extract_array"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4372535}, "macro.airbyte_utils.default__json_extract_array": {"unique_id": "macro.airbyte_utils.default__json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "default__json_extract_array", "macro_sql": "{% macro default__json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    json_extract_array({{ json_column }}, {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4379177}, "macro.airbyte_utils.oracle__json_extract_array": {"unique_id": "macro.airbyte_utils.oracle__json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "oracle__json_extract_array", "macro_sql": "{% macro oracle__json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    json_value({{ json_column }}, {{ format_json_path(normalized_json_path) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4385536}, "macro.airbyte_utils.bigquery__json_extract_array": {"unique_id": "macro.airbyte_utils.bigquery__json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "bigquery__json_extract_array", "macro_sql": "{% macro bigquery__json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    json_extract_array({{ json_column }}, {{ format_json_path(normalized_json_path) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4392192}, "macro.airbyte_utils.postgres__json_extract_array": {"unique_id": "macro.airbyte_utils.postgres__json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "postgres__json_extract_array", "macro_sql": "{% macro postgres__json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    jsonb_extract_path({{ json_column }}, {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.439908}, "macro.airbyte_utils.mysql__json_extract_array": {"unique_id": "macro.airbyte_utils.mysql__json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "mysql__json_extract_array", "macro_sql": "{% macro mysql__json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    json_extract({{ json_column }}, {{ format_json_path(normalized_json_path) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4406419}, "macro.airbyte_utils.redshift__json_extract_array": {"unique_id": "macro.airbyte_utils.redshift__json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "redshift__json_extract_array", "macro_sql": "{% macro redshift__json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    {%- if redshift_super_type() -%}\n    {{ json_column }}.{{ format_json_path(json_path_list) }}\n    {%- else -%}\n    json_extract_path_text({{ json_column }}, {{ format_json_path(json_path_list) }}, true)\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.redshift_super_type", "macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4417791}, "macro.airbyte_utils.snowflake__json_extract_array": {"unique_id": "macro.airbyte_utils.snowflake__json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "snowflake__json_extract_array", "macro_sql": "{% macro snowflake__json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    get_path(parse_json({{ json_column }}), {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.442459}, "macro.airbyte_utils.sqlserver__json_extract_array": {"unique_id": "macro.airbyte_utils.sqlserver__json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "sqlserver__json_extract_array", "macro_sql": "{% macro sqlserver__json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    json_query({{ json_column }}, {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.443142}, "macro.airbyte_utils.clickhouse__json_extract_array": {"unique_id": "macro.airbyte_utils.clickhouse__json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "clickhouse__json_extract_array", "macro_sql": "{% macro clickhouse__json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    JSONExtractArrayRaw(assumeNotNull({{ json_column }}), {{ format_json_path(json_path_list) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4437938}, "macro.airbyte_utils.tidb__json_extract_array": {"unique_id": "macro.airbyte_utils.tidb__json_extract_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "tidb__json_extract_array", "macro_sql": "{% macro tidb__json_extract_array(json_column, json_path_list, normalized_json_path) -%}\n    json_extract({{ json_column }}, {{ format_json_path(normalized_json_path) }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4450393}, "macro.airbyte_utils.json_extract_string_array": {"unique_id": "macro.airbyte_utils.json_extract_string_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "json_extract_string_array", "macro_sql": "{% macro json_extract_string_array(json_column, json_path_list, normalized_json_path) -%}\n    {{ adapter.dispatch('json_extract_string_array')(json_column, json_path_list, normalized_json_path) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.default__json_extract_string_array"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4457965}, "macro.airbyte_utils.default__json_extract_string_array": {"unique_id": "macro.airbyte_utils.default__json_extract_string_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "default__json_extract_string_array", "macro_sql": "{% macro default__json_extract_string_array(json_column, json_path_list, normalized_json_path) -%}\n    {{ json_extract_array(json_column, json_path_list, normalized_json_path) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.json_extract_array"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.446424}, "macro.airbyte_utils.bigquery__json_extract_string_array": {"unique_id": "macro.airbyte_utils.bigquery__json_extract_string_array", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/json_operations.sql", "original_file_path": "macros/cross_db_utils/json_operations.sql", "name": "bigquery__json_extract_string_array", "macro_sql": "{% macro bigquery__json_extract_string_array(json_column, json_path_list, normalized_json_path) -%}\n    array(\n        select ifnull(x, \"NULL\")\n        from unnest(json_value_array({{ json_column }}, {{ bigquery_new_format_json_path(normalized_json_path) }})) as x\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.bigquery_new_format_json_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4470766}, "macro.airbyte_utils.concat": {"unique_id": "macro.airbyte_utils.concat", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ adapter.dispatch('concat')(fields) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4486907}, "macro.airbyte_utils.bigquery__concat": {"unique_id": "macro.airbyte_utils.bigquery__concat", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "bigquery__concat", "macro_sql": "{% macro bigquery__concat(fields) -%}\n    {#-- concat() in SQL bigquery scales better with number of columns than using the '||' operator --#}\n    concat({{ fields|join(', ') }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4492815}, "macro.airbyte_utils.mysql__concat": {"unique_id": "macro.airbyte_utils.mysql__concat", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "mysql__concat", "macro_sql": "{% macro mysql__concat(fields) -%}\n    {#-- MySQL doesn't support the '||' operator as concatenation by default --#}\n    concat({{ fields|join(', ') }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4498537}, "macro.airbyte_utils.sqlserver__concat": {"unique_id": "macro.airbyte_utils.sqlserver__concat", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "sqlserver__concat", "macro_sql": "{% macro sqlserver__concat(fields) -%}\n    {#-- CONCAT() in SQL SERVER accepts from 2 to 254 arguments, we use batches for the main concat, to overcome the limit. --#}\n    {% set concat_chunks = [] %}\n    {% for chunk in fields|batch(253) -%}\n        {% set _ = concat_chunks.append( \"concat(\" ~ chunk|join(', ') ~ \",'')\" ) %}\n    {% endfor %}\n\n    concat({{ concat_chunks|join(', ') }}, '')\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4513986}, "macro.airbyte_utils.tidb__concat": {"unique_id": "macro.airbyte_utils.tidb__concat", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "tidb__concat", "macro_sql": "{% macro tidb__concat(fields) -%}\n    concat({{ fields|join(', ') }})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4520056}, "macro.airbyte_utils.cross_join_unnest": {"unique_id": "macro.airbyte_utils.cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "cross_join_unnest", "macro_sql": "{% macro cross_join_unnest(stream_name, array_col) -%}\n  {{ adapter.dispatch('cross_join_unnest')(stream_name, array_col) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__cross_join_unnest"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4601698}, "macro.airbyte_utils.default__cross_join_unnest": {"unique_id": "macro.airbyte_utils.default__cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "default__cross_join_unnest", "macro_sql": "{% macro default__cross_join_unnest(stream_name, array_col) -%}\n    {% do exceptions.warn(\"Undefined macro cross_join_unnest for this destination engine\") %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4607646}, "macro.airbyte_utils.bigquery__cross_join_unnest": {"unique_id": "macro.airbyte_utils.bigquery__cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "bigquery__cross_join_unnest", "macro_sql": "{% macro bigquery__cross_join_unnest(stream_name, array_col) -%}\n    cross join unnest({{ array_col }}) as {{ array_col }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4613073}, "macro.airbyte_utils.clickhouse__cross_join_unnest": {"unique_id": "macro.airbyte_utils.clickhouse__cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "clickhouse__cross_join_unnest", "macro_sql": "{% macro clickhouse__cross_join_unnest(stream_name, array_col) -%}\n    ARRAY JOIN {{ array_col }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4617593}, "macro.airbyte_utils.oracle__cross_join_unnest": {"unique_id": "macro.airbyte_utils.oracle__cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "oracle__cross_join_unnest", "macro_sql": "{% macro oracle__cross_join_unnest(stream_name, array_col) -%}\n    {% do exceptions.warn(\"Normalization does not support unnesting for Oracle yet.\") %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4623299}, "macro.airbyte_utils.postgres__cross_join_unnest": {"unique_id": "macro.airbyte_utils.postgres__cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "postgres__cross_join_unnest", "macro_sql": "{% macro postgres__cross_join_unnest(stream_name, array_col) -%}\n    cross join jsonb_array_elements(\n        case jsonb_typeof({{ array_col }})\n        when 'array' then {{ array_col }}\n        else '[]' end\n    ) as _airbyte_nested_data\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4628956}, "macro.airbyte_utils.mysql__cross_join_unnest": {"unique_id": "macro.airbyte_utils.mysql__cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "mysql__cross_join_unnest", "macro_sql": "{% macro mysql__cross_join_unnest(stream_name, array_col) -%}\n    left join joined on _airbyte_{{ stream_name }}_hashid = joined._airbyte_hashid\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4633641}, "macro.airbyte_utils.tidb__cross_join_unnest": {"unique_id": "macro.airbyte_utils.tidb__cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "tidb__cross_join_unnest", "macro_sql": "{% macro tidb__cross_join_unnest(stream_name, array_col) -%}\n    left join joined on _airbyte_{{ stream_name }}_hashid = joined._airbyte_hashid\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4638622}, "macro.airbyte_utils.redshift__cross_join_unnest": {"unique_id": "macro.airbyte_utils.redshift__cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "redshift__cross_join_unnest", "macro_sql": "{% macro redshift__cross_join_unnest(stream_name, array_col) -%}\n    left join joined on _airbyte_{{ stream_name }}_hashid = joined._airbyte_hashid\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4643595}, "macro.airbyte_utils.snowflake__cross_join_unnest": {"unique_id": "macro.airbyte_utils.snowflake__cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "snowflake__cross_join_unnest", "macro_sql": "{% macro snowflake__cross_join_unnest(stream_name, array_col) -%}\n    cross join table(flatten({{ array_col }})) as {{ array_col }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.464896}, "macro.airbyte_utils.sqlserver__cross_join_unnest": {"unique_id": "macro.airbyte_utils.sqlserver__cross_join_unnest", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "sqlserver__cross_join_unnest", "macro_sql": "{% macro sqlserver__cross_join_unnest(stream_name, array_col) -%}\n{# https://docs.microsoft.com/en-us/sql/relational-databases/json/convert-json-data-to-rows-and-columns-with-openjson-sql-server?view=sql-server-ver15#option-1---openjson-with-the-default-output #}\n    CROSS APPLY (\n\t    SELECT [value] = CASE\n\t\t\tWHEN [type] = 4 THEN (SELECT [value] FROM OPENJSON([value]))\n\t\t\tWHEN [type] = 5 THEN [value]\n\t\t\tEND\n\t    FROM OPENJSON({{ array_col }})\n    ) AS {{ array_col }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4654853}, "macro.airbyte_utils.unnested_column_value": {"unique_id": "macro.airbyte_utils.unnested_column_value", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "unnested_column_value", "macro_sql": "{% macro unnested_column_value(column_col) -%}\n  {{ adapter.dispatch('unnested_column_value')(column_col) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__unnested_column_value"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.4660702}, "macro.airbyte_utils.default__unnested_column_value": {"unique_id": "macro.airbyte_utils.default__unnested_column_value", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "default__unnested_column_value", "macro_sql": "{% macro default__unnested_column_value(column_col) -%}\n    {{ column_col }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.466465}, "macro.airbyte_utils.postgres__unnested_column_value": {"unique_id": "macro.airbyte_utils.postgres__unnested_column_value", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "postgres__unnested_column_value", "macro_sql": "{% macro postgres__unnested_column_value(column_col) -%}\n    _airbyte_nested_data\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.466816}, "macro.airbyte_utils.snowflake__unnested_column_value": {"unique_id": "macro.airbyte_utils.snowflake__unnested_column_value", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "snowflake__unnested_column_value", "macro_sql": "{% macro snowflake__unnested_column_value(column_col) -%}\n    {{ column_col }}.value\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.501489}, "macro.airbyte_utils.redshift__unnested_column_value": {"unique_id": "macro.airbyte_utils.redshift__unnested_column_value", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "redshift__unnested_column_value", "macro_sql": "{% macro redshift__unnested_column_value(column_col) -%}\n    _airbyte_nested_data\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5018666}, "macro.airbyte_utils.mysql__unnested_column_value": {"unique_id": "macro.airbyte_utils.mysql__unnested_column_value", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "mysql__unnested_column_value", "macro_sql": "{% macro mysql__unnested_column_value(column_col) -%}\n    _airbyte_nested_data\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.502201}, "macro.airbyte_utils.tidb__unnested_column_value": {"unique_id": "macro.airbyte_utils.tidb__unnested_column_value", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "tidb__unnested_column_value", "macro_sql": "{% macro tidb__unnested_column_value(column_col) -%}\n    _airbyte_nested_data\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5025322}, "macro.airbyte_utils.oracle__unnested_column_value": {"unique_id": "macro.airbyte_utils.oracle__unnested_column_value", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "oracle__unnested_column_value", "macro_sql": "{% macro oracle__unnested_column_value(column_col) -%}\n    {{ column_col }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.502912}, "macro.airbyte_utils.sqlserver__unnested_column_value": {"unique_id": "macro.airbyte_utils.sqlserver__unnested_column_value", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "sqlserver__unnested_column_value", "macro_sql": "{% macro sqlserver__unnested_column_value(column_col) -%}\n    {# unnested array/sub_array will be located in `value` column afterwards, we need to address to it #}\n    {{ column_col }}.value\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.50334}, "macro.airbyte_utils.unnest_cte": {"unique_id": "macro.airbyte_utils.unnest_cte", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "unnest_cte", "macro_sql": "{% macro unnest_cte(from_table, stream_name, column_col) -%}\n  {{ adapter.dispatch('unnest_cte')(from_table, stream_name, column_col) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__unnest_cte"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5041835}, "macro.airbyte_utils.default__unnest_cte": {"unique_id": "macro.airbyte_utils.default__unnest_cte", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "default__unnest_cte", "macro_sql": "{% macro default__unnest_cte(from_table, stream_name, column_col) -%}{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5045629}, "macro.airbyte_utils.redshift__unnest_cte": {"unique_id": "macro.airbyte_utils.redshift__unnest_cte", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "redshift__unnest_cte", "macro_sql": "{% macro redshift__unnest_cte(from_table, stream_name, column_col) -%}\n\n    {# -- based on https://docs.aws.amazon.com/redshift/latest/dg/query-super.html #}\n    {% if redshift_super_type() -%}\n        with joined as (\n            select\n                table_alias._airbyte_{{ stream_name }}_hashid as _airbyte_hashid,\n                _airbyte_nested_data\n            from {{ from_table }} as table_alias, table_alias.{{ column_col }} as _airbyte_nested_data\n        )\n    {%- else -%}\n\n    {# -- based on https://blog.getdbt.com/how-to-unnest-arrays-in-redshift/ #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n    {%- call statement('max_json_array_length', fetch_result=True) -%}\n        with max_value as (\n            select max(json_array_length({{ column_col }}, true)) as max_number_of_items\n            from {{ from_table }}\n        )\n        select\n            case when max_number_of_items is not null and max_number_of_items > 1\n            then max_number_of_items\n            else 1 end as max_number_of_items\n        from max_value\n    {%- endcall -%}\n    {%- set max_length = load_result('max_json_array_length') -%}\nwith numbers as (\n    {{dbt_utils.generate_series(max_length[\"data\"][0][0])}}\n),\njoined as (\n    select\n        _airbyte_{{ stream_name }}_hashid as _airbyte_hashid,\n        json_extract_array_element_text({{ column_col }}, numbers.generated_number::int - 1, true) as _airbyte_nested_data\n    from {{ from_table }}\n    cross join numbers\n    -- only generate the number of records in the cross join that corresponds\n    -- to the number of items in {{ from_table }}.{{ column_col }}\n    where numbers.generated_number <= json_array_length({{ column_col }}, true)\n)\n    {%- endif %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.redshift_super_type", "macro.dbt.statement", "macro.dbt_utils.generate_series"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5077581}, "macro.airbyte_utils.mysql__unnest_cte": {"unique_id": "macro.airbyte_utils.mysql__unnest_cte", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "mysql__unnest_cte", "macro_sql": "{% macro mysql__unnest_cte(from_table, stream_name, column_col) -%}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- call statement('max_json_array_length', fetch_result=True) -%}\n        with max_value as (\n            select max(json_length({{ column_col }})) as max_number_of_items\n            from {{ from_table }}\n        )\n        select\n            case when max_number_of_items is not null and max_number_of_items > 1\n            then max_number_of_items\n            else 1 end as max_number_of_items\n        from max_value\n    {%- endcall -%}\n\n    {%- set max_length = load_result('max_json_array_length') -%}\n    with numbers as (\n        {{ dbt_utils.generate_series(max_length[\"data\"][0][0]) }}\n    ),\n    joined as (\n        select\n            _airbyte_{{ stream_name }}_hashid as _airbyte_hashid,\n            {# -- json_extract(column_col, '$[i][0]') as _airbyte_nested_data #}\n            json_extract({{ column_col }}, concat(\"$[\", numbers.generated_number - 1, \"][0]\")) as _airbyte_nested_data\n        from {{ from_table }}\n        cross join numbers\n        -- only generate the number of records in the cross join that corresponds\n        -- to the number of items in {{ from_table }}.{{ column_col }}\n        where numbers.generated_number <= json_length({{ column_col }})\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.generate_series"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5102925}, "macro.airbyte_utils.tidb__unnest_cte": {"unique_id": "macro.airbyte_utils.tidb__unnest_cte", "package_name": "airbyte_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize", "path": "macros/cross_db_utils/array.sql", "original_file_path": "macros/cross_db_utils/array.sql", "name": "tidb__unnest_cte", "macro_sql": "{% macro tidb__unnest_cte(from_table, stream_name, column_col) -%}\n    {{ mysql__unnest_cte(from_table, stream_name, column_col) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__unnest_cte"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5109541}, "macro.dbt_mysql.mysql__get_catalog": {"unique_id": "macro.dbt_mysql.mysql__get_catalog", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "mysql__get_catalog", "macro_sql": "{% macro mysql__get_catalog(information_schema, schemas) -%}\n    {%- call statement('catalog', fetch_result=True) -%}\n    with tables as (\n\n        select\n            null as \"table_database\",\n            table_schema as \"table_schema\",\n            table_name as \"table_name\",\n            case when table_type = 'BASE TABLE' then 'table'\n                 when table_type = 'VIEW' then 'view'\n                 else table_type\n            end as \"table_type\",\n            null as \"table_owner\"\n\n        from {{ information_schema }}.tables\n\n    ),\n\n    columns as (\n\n        select\n            null as \"table_database\",\n            table_schema as \"table_schema\",\n            table_name as \"table_name\",\n            null as \"table_comment\",\n\n            column_name as \"column_name\",\n            ordinal_position as \"column_index\",\n            data_type as \"column_type\",\n            null as \"column_comment\"\n\n        from {{ information_schema }}.columns\n\n    )\n\n    select\n        columns.table_database,\n        columns.table_schema,\n        columns.table_name,\n        tables.table_type,\n        columns.table_comment,\n        tables.table_owner,\n        columns.column_name,\n        columns.column_index,\n        columns.column_type,\n        columns.column_comment\n    from tables\n    join columns using (table_schema, table_name)\n    where table_schema not in ('information_schema', 'performance_schema', 'mysql', 'sys')\n    and (\n    {%- for schema in schemas -%}\n      upper(table_schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    )\n    order by column_index\n    {%- endcall -%}\n\n    {{ return(load_result('catalog').table) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5140517}, "macro.dbt_mysql.mysql__list_schemas": {"unique_id": "macro.dbt_mysql.mysql__list_schemas", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__list_schemas", "macro_sql": "{% macro mysql__list_schemas(database) %}\n    {% call statement('list_schemas', fetch_result=True, auto_begin=False) -%}\n        select distinct schema_name\n        from information_schema.schemata\n    {%- endcall %}\n\n    {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5186214}, "macro.dbt_mysql.mysql__create_schema": {"unique_id": "macro.dbt_mysql.mysql__create_schema", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__create_schema", "macro_sql": "{% macro mysql__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.519346}, "macro.dbt_mysql.mysql__drop_schema": {"unique_id": "macro.dbt_mysql.mysql__drop_schema", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__drop_schema", "macro_sql": "{% macro mysql__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.52012}, "macro.dbt_mysql.mysql__drop_relation": {"unique_id": "macro.dbt_mysql.mysql__drop_relation", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__drop_relation", "macro_sql": "{% macro mysql__drop_relation(relation) -%}\n    {% call statement('drop_relation', auto_begin=False) -%}\n        drop {{ relation.type }} if exists {{ relation }}\n    {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.521137}, "macro.dbt_mysql.mysql__truncate_relation": {"unique_id": "macro.dbt_mysql.mysql__truncate_relation", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__truncate_relation", "macro_sql": "{% macro mysql__truncate_relation(relation) -%}\n    {% call statement('truncate_relation') -%}\n      truncate table {{ relation }}\n    {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5218093}, "macro.dbt_mysql.mysql__create_table_as": {"unique_id": "macro.dbt_mysql.mysql__create_table_as", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__create_table_as", "macro_sql": "{% macro mysql__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=False) }}\n  as (\n    {{ sql }}\n  )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.523216}, "macro.dbt_mysql.mysql__current_timestamp": {"unique_id": "macro.dbt_mysql.mysql__current_timestamp", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__current_timestamp", "macro_sql": "{% macro mysql__current_timestamp() -%}\n  current_timestamp()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.523529}, "macro.dbt_mysql.mysql__rename_relation": {"unique_id": "macro.dbt_mysql.mysql__rename_relation", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__rename_relation", "macro_sql": "{% macro mysql__rename_relation(from_relation, to_relation) -%}\n  {#\n    MySQL rename fails when the relation already exists, so a 2-step process is needed:\n    1. Drop the existing relation\n    2. Rename the new relation to existing relation\n  #}\n  {% call statement('drop_relation') %}\n    drop {{ to_relation.type }} if exists {{ to_relation }} cascade\n  {% endcall %}\n  {% call statement('rename_relation') %}\n    rename table {{ from_relation }} to {{ to_relation }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.524896}, "macro.dbt_mysql.mysql__check_schema_exists": {"unique_id": "macro.dbt_mysql.mysql__check_schema_exists", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__check_schema_exists", "macro_sql": "{% macro mysql__check_schema_exists(database, schema) -%}\n    {# no-op #}\n    {# see MySQLAdapter.check_schema_exists() #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5253172}, "macro.dbt_mysql.mysql__get_columns_in_relation": {"unique_id": "macro.dbt_mysql.mysql__get_columns_in_relation", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__get_columns_in_relation", "macro_sql": "{% macro mysql__get_columns_in_relation(relation) -%}\n    {% call statement('get_columns_in_relation', fetch_result=True) %}\n        show columns from {{ relation.schema }}.{{ relation.identifier }}\n    {% endcall %}\n\n    {% set table = load_result('get_columns_in_relation').table %}\n    {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5267286}, "macro.dbt_mysql.mysql__list_relations_without_caching": {"unique_id": "macro.dbt_mysql.mysql__list_relations_without_caching", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__list_relations_without_caching", "macro_sql": "{% macro mysql__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      null as \"database\",\n      table_name as name,\n      table_schema as \"schema\",\n      case when table_type = 'BASE TABLE' then 'table'\n           when table_type = 'VIEW' then 'view'\n           else table_type\n      end as table_type\n    from information_schema.tables\n    where table_schema = '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.527882}, "macro.dbt_mysql.mysql__generate_database_name": {"unique_id": "macro.dbt_mysql.mysql__generate_database_name", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "mysql__generate_database_name", "macro_sql": "{% macro mysql__generate_database_name(custom_database_name=none, node=none) -%}\n  {% do return(None) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5285082}, "macro.dbt_mysql.incremental_delete": {"unique_id": "macro.dbt_mysql.incremental_delete", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/incremental/helpers.sql", "original_file_path": "macros/materializations/incremental/helpers.sql", "name": "incremental_delete", "macro_sql": "{% macro incremental_delete(tmp_relation, target_relation, unique_key=none, statement_name=\"pre_main\") %}\n    {%- if unique_key is not none -%}\n    delete\n    from {{ target_relation }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ tmp_relation }}\n    )\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5306199}, "macro.dbt_mysql.incremental_insert": {"unique_id": "macro.dbt_mysql.incremental_insert", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/incremental/helpers.sql", "original_file_path": "macros/materializations/incremental/helpers.sql", "name": "incremental_insert", "macro_sql": "{% macro incremental_insert(tmp_relation, target_relation, unique_key=none, statement_name=\"main\") %}\n    {%- set dest_columns = adapter.get_columns_in_relation(target_relation) -%}\n    {%- set dest_cols_csv = dest_columns | map(attribute='quoted') | join(', ') -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n       select {{ dest_cols_csv }}\n       from {{ tmp_relation }}\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5321944}, "macro.dbt_mysql.materialization_incremental_mysql": {"unique_id": "macro.dbt_mysql.materialization_incremental_mysql", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/incremental/incremental.sql", "original_file_path": "macros/materializations/incremental/incremental.sql", "name": "materialization_incremental_mysql", "macro_sql": "{% materialization incremental, adapter='mysql' %}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(this) %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n  {% elif existing_relation.is_view or should_full_refresh() %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set backup_identifier = existing_relation.identifier ~ \"__dbt_backup\" %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n      {% do adapter.drop_relation(backup_relation) %}\n\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n      {% set tmp_relation = make_temp_relation(target_relation) %}\n      {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n      {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n      {% set build_sql = incremental_delete(tmp_relation, target_relation, unique_key=unique_key, statement_name=\"pre_main\") %}\n      {% call statement(\"pre_main\") %}\n          {{ build_sql }}\n      {% endcall %}\n      {% set build_sql = incremental_insert(tmp_relation, target_relation, unique_key=unique_key) %}\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.airbyte_utils.should_full_refresh", "macro.dbt.run_query", "macro.dbt_mysql.incremental_delete", "macro.dbt.statement", "macro.dbt_mysql.incremental_insert", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5431437}, "macro.dbt_mysql.mysql__get_test_sql": {"unique_id": "macro.dbt_mysql.mysql__get_test_sql", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/test/test.sql", "original_file_path": "macros/materializations/test/test.sql", "name": "mysql__get_test_sql", "macro_sql": "{% macro mysql__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      case\n        when {{ fail_calc }} {{ warn_if | replace(\"!=\",\"<>\") }} then 'true'\n        else 'false'\n      end as should_warn,\n      case\n        when {{ fail_calc }} {{ error_if | replace(\"!=\",\"<>\") }} then 'true'\n        else 'false'\n      end as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5454915}, "macro.dbt_mysql.mysql__snapshot_merge_sql_update": {"unique_id": "macro.dbt_mysql.mysql__snapshot_merge_sql_update", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/snapshot/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot/snapshot_merge.sql", "name": "mysql__snapshot_merge_sql_update", "macro_sql": "{% macro mysql__snapshot_merge_sql_update(target, source, insert_cols) -%}\n    update {{ target }}, (select dbt_scd_id, dbt_change_type, dbt_valid_to from {{ source }}) as DBT_INTERNAL_SOURCE\n    set {{ target }}.dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    where DBT_INTERNAL_SOURCE.dbt_scd_id = {{ target }}.dbt_scd_id\n    and DBT_INTERNAL_SOURCE.dbt_change_type = 'update'\n    and {{ target }}.dbt_valid_to is null\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5473871}, "macro.dbt_mysql.mysql__snapshot_merge_sql_insert": {"unique_id": "macro.dbt_mysql.mysql__snapshot_merge_sql_insert", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/snapshot/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot/snapshot_merge.sql", "name": "mysql__snapshot_merge_sql_insert", "macro_sql": "{% macro mysql__snapshot_merge_sql_insert(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5489051}, "macro.dbt_mysql.mysql__snapshot_hash_arguments": {"unique_id": "macro.dbt_mysql.mysql__snapshot_hash_arguments", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "mysql__snapshot_hash_arguments", "macro_sql": "{% macro mysql__snapshot_hash_arguments(args) -%}\n    md5(concat_ws('|', {%- for arg in args -%}\n        coalesce(cast({{ arg }} as char), '')\n        {% if not loop.last %}, {% endif %}\n    {%- endfor -%}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5502949}, "macro.dbt_mysql.mysql__snapshot_string_as_time": {"unique_id": "macro.dbt_mysql.mysql__snapshot_string_as_time", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "mysql__snapshot_string_as_time", "macro_sql": "{% macro mysql__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"str_to_date('\" ~ timestamp ~ \"', '%Y-%m-%d %T')\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5605125}, "macro.dbt_mysql.materialization_snapshot_mysql": {"unique_id": "macro.dbt_mysql.materialization_snapshot_mysql", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "materialization_snapshot_mysql", "macro_sql": "{% materialization snapshot, adapter='mysql' %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=none,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n      {% call statement('main') %}\n          {{ final_sql }}\n      {% endcall %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      -- MySQL does not support the MERGE statement, so we need to use seperate UPDATE + INSERT statements instead\n      {% set final_sql_update = mysql__snapshot_merge_sql_update(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n      {% set final_sql_insert = mysql__snapshot_merge_sql_insert(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n      {% call statement('main') %}\n          {{ final_sql_update }}\n      {% endcall %}\n\n      {% call statement('main') %}\n          {{ final_sql_insert }}\n      {% endcall %}\n\n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_schema", "macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.statement", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt_mysql.mysql__snapshot_merge_sql_update", "macro.dbt_mysql.mysql__snapshot_merge_sql_insert", "macro.dbt.persist_docs", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5742192}, "macro.dbt_mysql.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt_mysql.snapshot_check_all_get_existing_columns", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=None, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.578301}, "macro.dbt_mysql.basic_load_csv_rows": {"unique_id": "macro.dbt_mysql.basic_load_csv_rows", "package_name": "dbt_mysql", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/mysql", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "basic_load_csv_rows", "macro_sql": "{% macro basic_load_csv_rows(model, batch_size, agate_table) %}\n    {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n    {% set bindings = [] %}\n\n    {% set statements = [] %}\n\n    {% for chunk in agate_table.rows | batch(batch_size) %}\n        {% set bindings = [] %}\n\n        {% for row in chunk %}\n            {% do bindings.extend(row) %}\n        {% endfor %}\n\n        {% set sql %}\n            insert into {{ this.render() }} ({{ cols_sql }}) values\n            {% for row in chunk -%}\n                ({%- for column in agate_table.column_names -%}\n                    %s\n                    {%- if not loop.last%},{%- endif %}\n                {%- endfor -%})\n                {%- if not loop.last%},{%- endif %}\n            {%- endfor %}\n        {% endset %}\n\n        {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n        {% if loop.index0 == 0 %}\n            {% do statements.append(sql) %}\n        {% endif %}\n    {% endfor %}\n\n    {# Return SQL so we can render it out into the compiled files #}\n    {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_seed_column_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5848367}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5863612}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5875669}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.588849}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5929506}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5937521}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.594341}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.594934}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.5955}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6046658}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.605799}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6064873}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.606879}, "macro.dbt.get_true_sql": {"unique_id": "macro.dbt.get_true_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6074708}, "macro.dbt.default__get_true_sql": {"unique_id": "macro.dbt.default__get_true_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6080647}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.608875}, "macro.dbt.default__snapshot_staging_table": {"unique_id": "macro.dbt.default__snapshot_staging_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6125169}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6132812}, "macro.dbt.default__build_snapshot_table": {"unique_id": "macro.dbt.default__build_snapshot_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6143677}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6161041}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.617819}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6189044}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6302109}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6309116}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6318245}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6324344}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6328433}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6357455}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.636471}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6371725}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6411235}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt_mysql.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6476254}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.665196}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6670222}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.668327}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.669894}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6714537}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "name": "materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.679146}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.6917706}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.697768}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.698694}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last }}\n                {% endfor %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            );\n\n        {% endif %}\n        {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7018254}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7028575}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.705399}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.717431}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7224584}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7271593}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7300074}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(target_relation) %}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n  {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n  -- the intermediate_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {% set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier,\n                                                                  schema=schema,\n                                                                  database=database) %}\n  {% set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                            schema=schema,\n                                                            database=database) %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {# -- first check whether we want to full refresh for source view or config reasons #}\n  {% set trigger_full_refresh = (full_refresh_mode or existing_relation.is_view) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n{% elif trigger_full_refresh %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + '__dbt_backup' %}\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {% set build_sql = get_delete_insert_merge_sql(target_relation, tmp_relation, unique_key, dest_columns) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.airbyte_utils.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.get_delete_insert_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.746903}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.749624}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7526271}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7548494}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.75736}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7587428}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7596595}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier,\n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_view_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7714245}, "macro.dbt.get_create_view_as_sql": {"unique_id": "macro.dbt.get_create_view_as_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7729475}, "macro.dbt.default__get_create_view_as_sql": {"unique_id": "macro.dbt.default__get_create_view_as_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7735865}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7743104}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7753294}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.airbyte_utils.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7799819}, "macro.dbt.get_create_table_as_sql": {"unique_id": "macro.dbt.get_create_table_as_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7817457}, "macro.dbt.default__get_create_table_as_sql": {"unique_id": "macro.dbt.default__get_create_table_as_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7824738}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7833004}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7849908}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier,\n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.7972329}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8073025}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.810958}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8118658}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8138602}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.814484}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8149729}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8156254}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8161237}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8180764}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8188164}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8236558}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8340685}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8357143}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8366795}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8386958}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8397655}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.84095}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8426745}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8436835}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.848483}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.849708}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.850465}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8514156}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8521802}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.852854}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8536901}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8548412}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8558643}, "macro.dbt.default__get_or_create_relation": {"unique_id": "macro.dbt.default__get_or_create_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8582716}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8591843}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8599825}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8644958}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8655202}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.866281}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8669658}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.867716}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8688228}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8696332}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8709488}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8717058}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8723924}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8741465}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8747737}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8757017}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.877412}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8789525}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8797255}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8804493}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.88123}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.883037}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.883823}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8845012}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8861208}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8886795}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8893952}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.890235}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.890941}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8920424}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8940253}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_mysql.mysql__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8987803}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.8994298}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9006982}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9014182}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.902774}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9037383}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.906123}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9071398}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.910922}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9151387}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.917484}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9186707}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9237876}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9285884}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9316227}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9325438}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9337974}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.935239}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.936706}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9390752}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9410088}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9419172}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9430304}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9441597}, "macro.dbt_utils.get_url_parameter": {"unique_id": "macro.dbt_utils.get_url_parameter", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "name": "get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9455686}, "macro.dbt_utils.default__get_url_parameter": {"unique_id": "macro.dbt_utils.default__get_url_parameter", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "name": "default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt_utils.split_part(dbt_utils.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9469516}, "macro.dbt_utils.get_url_path": {"unique_id": "macro.dbt_utils.get_url_path", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "name": "get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9487622}, "macro.dbt_utils.default__get_url_path": {"unique_id": "macro.dbt_utils.default__get_url_path", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "name": "default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url = \n        dbt_utils.replace(\n            dbt_utils.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{dbt_utils.position(\"'/'\", stripped_url)}}, 0),\n            {{dbt_utils.position(\"'?'\", stripped_url)}} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt_utils.split_part(\n            dbt_utils.right(\n                stripped_url, \n                dbt_utils.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ), \n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt_utils.safe_cast(\n        parsed_path,\n        dbt_utils.type_string()\n    )}}\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt_utils.position", "macro.dbt_utils.split_part", "macro.dbt_utils.right", "macro.dbt_utils.length", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9515624}, "macro.dbt_utils.get_url_host": {"unique_id": "macro.dbt_utils.get_url_host", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "name": "get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9530618}, "macro.dbt_utils.default__get_url_host": {"unique_id": "macro.dbt_utils.default__get_url_host", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "name": "default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed =\n    dbt_utils.split_part(\n        dbt_utils.split_part(\n            dbt_utils.replace(\n                dbt_utils.replace(\n                    dbt_utils.replace(field, \"'android-app://'\", \"''\"\n                    ), \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n\n-%}\n\n\n    {{ dbt_utils.safe_cast(\n        parsed,\n        dbt_utils.type_string()\n        )}}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part", "macro.dbt_utils.replace", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9549434}, "macro.dbt_utils.get_period_boundaries": {"unique_id": "macro.dbt_utils.get_period_boundaries", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "get_period_boundaries", "macro_sql": "{% macro get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n    {{ return(adapter.dispatch('get_period_boundaries', 'dbt_utils')(target_schema, target_table, timestamp_field, start_date, stop_date, period)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_boundaries"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9693692}, "macro.dbt_utils.default__get_period_boundaries": {"unique_id": "macro.dbt_utils.default__get_period_boundaries", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "default__get_period_boundaries", "macro_sql": "{% macro default__get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n\n  {% call statement('period_boundaries', fetch_result=True) -%}\n    with data as (\n      select\n          coalesce(max(\"{{timestamp_field}}\"), '{{start_date}}')::timestamp as start_timestamp,\n          coalesce(\n            {{dbt_utils.dateadd('millisecond',\n                                -1,\n                                \"nullif('\" ~ stop_date ~ \"','')::timestamp\")}},\n            {{dbt_utils.current_timestamp()}}\n          ) as stop_timestamp\n      from \"{{target_schema}}\".\"{{target_table}}\"\n    )\n\n    select\n      start_timestamp,\n      stop_timestamp,\n      {{dbt_utils.datediff('start_timestamp',\n                           'stop_timestamp',\n                           period)}}  + 1 as num_periods\n    from data\n  {%- endcall %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9715059}, "macro.dbt_utils.get_period_sql": {"unique_id": "macro.dbt_utils.get_period_sql", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "get_period_sql", "macro_sql": "{% macro get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n    {{ return(adapter.dispatch('get_period_sql', 'dbt_utils')(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9728162}, "macro.dbt_utils.default__get_period_sql": {"unique_id": "macro.dbt_utils.default__get_period_sql", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "default__get_period_sql", "macro_sql": "{% macro default__get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n\n  {%- set period_filter -%}\n    (\"{{timestamp_field}}\" >  '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' and\n     \"{{timestamp_field}}\" <= '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' + interval '1 {{period}}' and\n     \"{{timestamp_field}}\" <  '{{stop_timestamp}}'::timestamp)\n  {%- endset -%}\n\n  {%- set filtered_sql = sql | replace(\"__PERIOD_FILTER__\", period_filter) -%}\n\n  select\n    {{target_cols_csv}}\n  from (\n    {{filtered_sql}}\n  )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9749072}, "macro.dbt_utils.materialization_insert_by_period_default": {"unique_id": "macro.dbt_utils.materialization_insert_by_period_default", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "materialization_insert_by_period_default", "macro_sql": "{% materialization insert_by_period, default -%}\n  {%- set timestamp_field = config.require('timestamp_field') -%}\n  {%- set start_date = config.require('start_date') -%}\n  {%- set stop_date = config.get('stop_date') or '' -%}\n  {%- set period = config.get('period') or 'week' -%}\n\n  {%- if sql.find('__PERIOD_FILTER__') == -1 -%}\n    {%- set error_message -%}\n      Model '{{ model.unique_id }}' does not include the required string '__PERIOD_FILTER__' in its sql\n    {%- endset -%}\n    {{ exceptions.raise_compiler_error(error_message) }}\n  {%- endif -%}\n\n  {%- set identifier = model['name'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, type='table') -%}\n\n  {%- set non_destructive_mode = (flags.NON_DESTRUCTIVE == True) -%}\n  {%- set full_refresh_mode = (flags.FULL_REFRESH == True) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n\n  {%- set should_truncate = (non_destructive_mode and full_refresh_mode and exists_as_table) -%}\n  {%- set should_drop = (not should_truncate and (full_refresh_mode or exists_not_as_table)) -%}\n  {%- set force_create = (flags.FULL_REFRESH and not flags.NON_DESTRUCTIVE) -%}\n\n  -- setup\n  {% if old_relation is none -%}\n    -- noop\n  {%- elif should_truncate -%}\n    {{adapter.truncate_relation(old_relation)}}\n  {%- elif should_drop -%}\n    {{adapter.drop_relation(old_relation)}}\n    {%- set old_relation = none -%}\n  {%- endif %}\n\n  {{run_hooks(pre_hooks, inside_transaction=False)}}\n\n  -- `begin` happens here, so `commit` after it to finish the transaction\n  {{run_hooks(pre_hooks, inside_transaction=True)}}\n  {% call statement() -%}\n    begin; -- make extra sure we've closed out the transaction\n    commit;\n  {%- endcall %}\n\n  -- build model\n  {% if force_create or old_relation is none -%}\n    {# Create an empty target table -#}\n    {% call statement('main') -%}\n      {%- set empty_sql = sql | replace(\"__PERIOD_FILTER__\", 'false') -%}\n      {{create_table_as(False, target_relation, empty_sql)}}\n    {%- endcall %}\n  {%- endif %}\n\n  {% set _ = dbt_utils.get_period_boundaries(schema,\n                                              identifier,\n                                              timestamp_field,\n                                              start_date,\n                                              stop_date,\n                                              period) %}\n  {%- set start_timestamp = load_result('period_boundaries')['data'][0][0] | string -%}\n  {%- set stop_timestamp = load_result('period_boundaries')['data'][0][1] | string -%}\n  {%- set num_periods = load_result('period_boundaries')['data'][0][2] | int -%}\n\n  {% set target_columns = adapter.get_columns_in_relation(target_relation) %}\n  {%- set target_cols_csv = target_columns | map(attribute='quoted') | join(', ') -%}\n  {%- set loop_vars = {'sum_rows_inserted': 0} -%}\n\n  -- commit each period as a separate transaction\n  {% for i in range(num_periods) -%}\n    {%- set msg = \"Running for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) -%}\n    {{ dbt_utils.log_info(msg) }}\n\n    {%- set tmp_identifier = model['name'] ~ '__dbt_incremental_period' ~ i ~ '_tmp' -%}\n    {%- set tmp_relation = api.Relation.create(identifier=tmp_identifier,\n                                               schema=schema, type='table') -%}\n    {% call statement() -%}\n      {% set tmp_table_sql = dbt_utils.get_period_sql(target_cols_csv,\n                                                       sql,\n                                                       timestamp_field,\n                                                       period,\n                                                       start_timestamp,\n                                                       stop_timestamp,\n                                                       i) %}\n      {{dbt.create_table_as(True, tmp_relation, tmp_table_sql)}}\n    {%- endcall %}\n\n    {{adapter.expand_target_column_types(from_relation=tmp_relation,\n                                         to_relation=target_relation)}}\n    {%- set name = 'main-' ~ i -%}\n    {% call statement(name, fetch_result=True) -%}\n      insert into {{target_relation}} ({{target_cols_csv}})\n      (\n          select\n              {{target_cols_csv}}\n          from {{tmp_relation.include(schema=False)}}\n      );\n    {%- endcall %}\n    {% set result = load_result('main-' ~ i) %}\n    {% if 'response' in result.keys() %} {# added in v0.19.0 #}\n        {% set rows_inserted = result['response']['rows_affected'] %}\n    {% else %} {# older versions #}\n        {% set rows_inserted = result['status'].split(\" \")[2] | int %}\n    {% endif %}\n    \n    {%- set sum_rows_inserted = loop_vars['sum_rows_inserted'] + rows_inserted -%}\n    {%- if loop_vars.update({'sum_rows_inserted': sum_rows_inserted}) %} {% endif -%}\n\n    {%- set msg = \"Ran for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) ~ \"; \" ~ rows_inserted ~ \" records inserted\" -%}\n    {{ dbt_utils.log_info(msg) }}\n\n  {%- endfor %}\n\n  {% call statement() -%}\n    begin;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=True)}}\n\n  {% call statement() -%}\n    commit;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=False)}}\n\n  {%- set status_string = \"INSERT \" ~ loop_vars['sum_rows_inserted'] -%}\n\n  {% call noop_statement('main', status_string) -%}\n    -- no-op\n  {%- endcall %}\n\n  -- Return the relations created in this materialization\n  {{ return({'relations': [target_relation]}) }}  \n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt_utils.get_period_boundaries", "macro.dbt_utils.log_info", "macro.dbt_utils.get_period_sql", "macro.dbt.noop_statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9953787}, "macro.dbt_utils.test_equal_rowcount": {"unique_id": "macro.dbt_utils.test_equal_rowcount", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/equal_rowcount.sql", "original_file_path": "macros/schema_tests/equal_rowcount.sql", "name": "test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9970362}, "macro.dbt_utils.default__test_equal_rowcount": {"unique_id": "macro.dbt_utils.default__test_equal_rowcount", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/equal_rowcount.sql", "original_file_path": "macros/schema_tests/equal_rowcount.sql", "name": "default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'coalesce(diff_count, 0)') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\nwith a as (\n\n    select count(*) as count_a from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_b from {{ compare_model }}\n\n),\nfinal as (\n\n    select\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n    from a\n    cross join b\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9982095}, "macro.dbt_utils.test_recency": {"unique_id": "macro.dbt_utils.test_recency", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/recency.sql", "original_file_path": "macros/schema_tests/recency.sql", "name": "test_recency", "macro_sql": "{% test recency(model, field, datepart, interval) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145222.9998784}, "macro.dbt_utils.default__test_recency": {"unique_id": "macro.dbt_utils.default__test_recency", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/recency.sql", "original_file_path": "macros/schema_tests/recency.sql", "name": "default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval) %}\n\n{% set threshold = dbt_utils.dateadd(datepart, interval * -1, dbt_utils.current_timestamp()) %}\n\nwith recency as (\n\n    select max({{field}}) as most_recent\n    from {{ model }}\n\n)\n\nselect\n\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0012374}, "macro.dbt_utils.test_expression_is_true": {"unique_id": "macro.dbt_utils.test_expression_is_true", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/expression_is_true.sql", "original_file_path": "macros/schema_tests/expression_is_true.sql", "name": "test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None, condition='1=1') %}\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name, condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.003234}, "macro.dbt_utils.default__test_expression_is_true": {"unique_id": "macro.dbt_utils.default__test_expression_is_true", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/expression_is_true.sql", "original_file_path": "macros/schema_tests/expression_is_true.sql", "name": "default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name, condition) %}\n\nwith meet_condition as (\n    select * from {{ model }} where {{ condition }}\n)\n\nselect\n    *\nfrom meet_condition\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.004498}, "macro.dbt_utils.test_not_accepted_values": {"unique_id": "macro.dbt_utils.test_not_accepted_values", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/not_accepted_values.sql", "original_file_path": "macros/schema_tests/not_accepted_values.sql", "name": "test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0065403}, "macro.dbt_utils.default__test_not_accepted_values": {"unique_id": "macro.dbt_utils.default__test_not_accepted_values", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/not_accepted_values.sql", "original_file_path": "macros/schema_tests/not_accepted_values.sql", "name": "default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.008202}, "macro.dbt_utils.test_equality": {"unique_id": "macro.dbt_utils.test_equality", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/equality.sql", "original_file_path": "macros/schema_tests/equality.sql", "name": "test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0106575}, "macro.dbt_utils.default__test_equality": {"unique_id": "macro.dbt_utils.default__test_equality", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/equality.sql", "original_file_path": "macros/schema_tests/equality.sql", "name": "default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, a_minus_b.* from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, b_minus_a.* from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0141683}, "macro.dbt_utils.test_not_null_where": {"unique_id": "macro.dbt_utils.test_not_null_where", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/test_not_null_where.sql", "original_file_path": "macros/schema_tests/test_not_null_where.sql", "name": "test_not_null_where", "macro_sql": "{% test not_null_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.not_null_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `not_null` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_not_null_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0160184}, "macro.dbt_utils.default__test_not_null_where": {"unique_id": "macro.dbt_utils.default__test_not_null_where", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/test_not_null_where.sql", "original_file_path": "macros/schema_tests/test_not_null_where.sql", "name": "default__test_not_null_where", "macro_sql": "{% macro default__test_not_null_where(model, column_name) %}\r\n  {{ return(test_not_null(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0167332}, "macro.dbt_utils.test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/unique_combination_of_columns.sql", "original_file_path": "macros/schema_tests/unique_combination_of_columns.sql", "name": "test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.018959}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/unique_combination_of_columns.sql", "original_file_path": "macros/schema_tests/unique_combination_of_columns.sql", "name": "default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0216737}, "macro.dbt_utils.test_relationships_where": {"unique_id": "macro.dbt_utils.test_relationships_where", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/relationships_where.sql", "original_file_path": "macros/schema_tests/relationships_where.sql", "name": "test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0240688}, "macro.dbt_utils.default__test_relationships_where": {"unique_id": "macro.dbt_utils.default__test_relationships_where", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/relationships_where.sql", "original_file_path": "macros/schema_tests/relationships_where.sql", "name": "default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0254285}, "macro.dbt_utils.test_accepted_range": {"unique_id": "macro.dbt_utils.test_accepted_range", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/accepted_range.sql", "original_file_path": "macros/schema_tests/accepted_range.sql", "name": "test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0276823}, "macro.dbt_utils.default__test_accepted_range": {"unique_id": "macro.dbt_utils.default__test_accepted_range", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/accepted_range.sql", "original_file_path": "macros/schema_tests/accepted_range.sql", "name": "default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.02982}, "macro.dbt_utils.test_cardinality_equality": {"unique_id": "macro.dbt_utils.test_cardinality_equality", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/cardinality_equality.sql", "original_file_path": "macros/schema_tests/cardinality_equality.sql", "name": "test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0318527}, "macro.dbt_utils.default__test_cardinality_equality": {"unique_id": "macro.dbt_utils.default__test_cardinality_equality", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/cardinality_equality.sql", "original_file_path": "macros/schema_tests/cardinality_equality.sql", "name": "default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt_utils.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt_utils.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0332537}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/schema_tests/mutually_exclusive_ranges.sql", "name": "test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0410614}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/schema_tests/mutually_exclusive_ranges.sql", "name": "default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }} as partition_by_col,\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions nore cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0471945}, "macro.dbt_utils.test_unique_where": {"unique_id": "macro.dbt_utils.test_unique_where", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/test_unique_where.sql", "original_file_path": "macros/schema_tests/test_unique_where.sql", "name": "test_unique_where", "macro_sql": "{% test unique_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.unique_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `unique` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_unique_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0491068}, "macro.dbt_utils.default__test_unique_where": {"unique_id": "macro.dbt_utils.default__test_unique_where", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/test_unique_where.sql", "original_file_path": "macros/schema_tests/test_unique_where.sql", "name": "default__test_unique_where", "macro_sql": "{% macro default__test_unique_where(model, column_name) %}\r\n  {{ return(test_unique(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0497913}, "macro.dbt_utils.test_not_null_proportion": {"unique_id": "macro.dbt_utils.test_not_null_proportion", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/not_null_proportion.sql", "original_file_path": "macros/schema_tests/not_null_proportion.sql", "name": "test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, **kwargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0515156}, "macro.dbt_utils.default__test_not_null_proportion": {"unique_id": "macro.dbt_utils.default__test_not_null_proportion", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/not_null_proportion.sql", "original_file_path": "macros/schema_tests/not_null_proportion.sql", "name": "default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\nwith validation as (\n  select\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.053631}, "macro.dbt_utils.test_fewer_rows_than": {"unique_id": "macro.dbt_utils.test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/fewer_rows_than.sql", "original_file_path": "macros/schema_tests/fewer_rows_than.sql", "name": "test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0554886}, "macro.dbt_utils.default__test_fewer_rows_than": {"unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/fewer_rows_than.sql", "original_file_path": "macros/schema_tests/fewer_rows_than.sql", "name": "default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model) %}\n\n{{ config(fail_calc = 'coalesce(row_count_delta, 0)') }}\n\nwith a as (\n\n    select count(*) as count_our_model from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_comparison_model from {{ compare_model }}\n\n),\ncounts as (\n\n    select\n        count_our_model,\n        count_comparison_model\n    from a\n    cross join b\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.056403}, "macro.dbt_utils.test_at_least_one": {"unique_id": "macro.dbt_utils.test_at_least_one", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/at_least_one.sql", "original_file_path": "macros/schema_tests/at_least_one.sql", "name": "test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0578845}, "macro.dbt_utils.default__test_at_least_one": {"unique_id": "macro.dbt_utils.default__test_at_least_one", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/at_least_one.sql", "original_file_path": "macros/schema_tests/at_least_one.sql", "name": "default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name) %}\n\nselect *\nfrom (\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      count({{ column_name }}) as filler_column\n\n    from {{ model }}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.058628}, "macro.dbt_utils.test_not_constant": {"unique_id": "macro.dbt_utils.test_not_constant", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/not_constant.sql", "original_file_path": "macros/schema_tests/not_constant.sql", "name": "test_not_constant", "macro_sql": "{% test not_constant(model, column_name) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0600958}, "macro.dbt_utils.default__test_not_constant": {"unique_id": "macro.dbt_utils.default__test_not_constant", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/not_constant.sql", "original_file_path": "macros/schema_tests/not_constant.sql", "name": "default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name) %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0608077}, "macro.dbt_utils.test_sequential_values": {"unique_id": "macro.dbt_utils.test_sequential_values", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/sequential_values.sql", "original_file_path": "macros/schema_tests/sequential_values.sql", "name": "test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart)) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0630887}, "macro.dbt_utils.default__test_sequential_values": {"unique_id": "macro.dbt_utils.default__test_sequential_values", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/schema_tests/sequential_values.sql", "original_file_path": "macros/schema_tests/sequential_values.sql", "name": "default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None) %}\n\n{% set previous_column_name = \"previous_\" ~ dbt_utils.slugify(column_name) %}\n\nwith windowed as (\n\n    select\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            order by {{ column_name }}\n        ) as {{ previous_column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt_utils.type_timestamp() }})= cast({{ dbt_utils.dateadd(datepart, interval, previous_column_name) }} as {{ dbt_utils.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = {{ previous_column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.slugify", "macro.dbt_utils.type_timestamp", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0658174}, "macro.dbt_utils.log_info": {"unique_id": "macro.dbt_utils.log_info", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "name": "log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.067081}, "macro.dbt_utils.default__log_info": {"unique_id": "macro.dbt_utils.default__log_info", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "name": "default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0677805}, "macro.dbt_utils.pretty_log_format": {"unique_id": "macro.dbt_utils.pretty_log_format", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "name": "pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0691803}, "macro.dbt_utils.default__pretty_log_format": {"unique_id": "macro.dbt_utils.default__pretty_log_format", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "name": "default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0698373}, "macro.dbt_utils.pretty_time": {"unique_id": "macro.dbt_utils.pretty_time", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "name": "pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0711591}, "macro.dbt_utils.default__pretty_time": {"unique_id": "macro.dbt_utils.default__pretty_time", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "name": "default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0719612}, "macro.dbt_utils.slugify": {"unique_id": "macro.dbt_utils.slugify", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "name": "slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0739973}, "macro.dbt_utils.degrees_to_radians": {"unique_id": "macro.dbt_utils.degrees_to_radians", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0771086}, "macro.dbt_utils.haversine_distance": {"unique_id": "macro.dbt_utils.haversine_distance", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0782673}, "macro.dbt_utils.default__haversine_distance": {"unique_id": "macro.dbt_utils.default__haversine_distance", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0805988}, "macro.dbt_utils.bigquery__haversine_distance": {"unique_id": "macro.dbt_utils.bigquery__haversine_distance", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.083848}, "macro.dbt_utils.get_column_values": {"unique_id": "macro.dbt_utils.get_column_values", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "name": "get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0870328}, "macro.dbt_utils.default__get_column_values": {"unique_id": "macro.dbt_utils.default__get_column_values", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "name": "default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none) -%}\n{% if default is none %}\n    {% set default = [] %}\n{% endif %}\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return(default) }}\n    {% endif %}\n\n    {# Not all relations are tables. Renaming for internal clarity without breaking functionality for anyone using named arguments #}\n    {# TODO: Change the method signature in a future 0.x.0 release #}\n    {%- set target_relation = table -%}\n\n    {# adapter.load_relation is a convenience wrapper to avoid building a Relation when we already have one #}\n    {% set relation_exists = (load_relation(target_relation)) is not none %}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not relation_exists and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ target_relation ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not relation_exists and default is not none -%}\n\n          {{ log(\"Relation \" ~ target_relation ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0927267}, "macro.dbt_utils.nullcheck_table": {"unique_id": "macro.dbt_utils.nullcheck_table", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "name": "nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0941513}, "macro.dbt_utils.default__nullcheck_table": {"unique_id": "macro.dbt_utils.default__nullcheck_table", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "name": "default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0955253}, "macro.dbt_utils.group_by": {"unique_id": "macro.dbt_utils.group_by", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "name": "group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0968947}, "macro.dbt_utils.default__group_by": {"unique_id": "macro.dbt_utils.default__group_by", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "name": "default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.0979264}, "macro.dbt_utils.surrogate_key": {"unique_id": "macro.dbt_utils.surrogate_key", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "name": "surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1002204}, "macro.dbt_utils.default__surrogate_key": {"unique_id": "macro.dbt_utils.default__surrogate_key", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "name": "default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- if varargs|length >= 1 or field_list is string %}\n\n{%- set error_message = '\nWarning: the `surrogate_key` macro now takes a single list argument instead of \\\nmultiple string arguments. Support for multiple string arguments will be \\\ndeprecated in a future release of dbt-utils. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{# first argument is not included in varargs, so add first element to field_list_xf #}\n{%- set field_list_xf = [field_list] -%}\n\n{%- for field in varargs %}\n{%- set _ = field_list_xf.append(field) -%}\n{%- endfor -%}\n\n{%- else -%}\n\n{# if using list, just set field_list_xf as field_list #}\n{%- set field_list_xf = field_list -%}\n\n{%- endif -%}\n\n\n{%- set fields = [] -%}\n\n{%- for field in field_list_xf -%}\n\n    {%- set _ = fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt_utils.type_string() ~ \"), '')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- set _ = fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{dbt_utils.hash(dbt_utils.concat(fields))}}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string", "macro.dbt_utils.hash", "macro.dbt_utils.concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1038992}, "macro.dbt_utils.get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "name": "get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1057234}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "name": "default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1068876}, "macro.dbt_utils.get_relations_by_prefix": {"unique_id": "macro.dbt_utils.get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "name": "get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1093123}, "macro.dbt_utils.default__get_relations_by_prefix": {"unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "name": "default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1127}, "macro.dbt_utils.get_query_results_as_dict": {"unique_id": "macro.dbt_utils.get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "name": "get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.114343}, "macro.dbt_utils.default__get_query_results_as_dict": {"unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "name": "default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1166973}, "macro.dbt_utils.star": {"unique_id": "macro.dbt_utils.star", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "name": "star", "macro_sql": "{% macro star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except, prefix, suffix)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1194077}, "macro.dbt_utils.default__star": {"unique_id": "macro.dbt_utils.default__star", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "name": "default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[], prefix='', suffix='') -%}\n    {%- do dbt_utils._is_relation(from, 'star') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n\n        {%- endif %}\n    {%- endfor %}\n\n    {%- for col in include_cols %}\n\n        {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}{{ adapter.quote(col)|trim }} {%- if prefix!='' or suffix!='' -%} as {{ adapter.quote(prefix ~ col ~ suffix)|trim }} {%- endif -%}\n        {%- if not loop.last %},{{ '\\n  ' }}{% endif %}\n\n    {%- endfor -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1242023}, "macro.dbt_utils.nullcheck": {"unique_id": "macro.dbt_utils.nullcheck", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "name": "nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1256487}, "macro.dbt_utils.default__nullcheck": {"unique_id": "macro.dbt_utils.default__nullcheck", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "name": "default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1270003}, "macro.dbt_utils.get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1313152}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as \"table_schema\",\n            table_name as \"table_name\",\n            {{ dbt_utils.get_table_types_sql() }}\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1324499}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                case table_type\n                    when 'BASE TABLE' then 'table'\n                    else lower(table_type)\n                end as table_type\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1352704}, "macro.dbt_utils._bigquery__get_matching_schemata": {"unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "_bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1379957}, "macro.dbt_utils.get_powers_of_two": {"unique_id": "macro.dbt_utils.get_powers_of_two", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1407158}, "macro.dbt_utils.default__get_powers_of_two": {"unique_id": "macro.dbt_utils.default__get_powers_of_two", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.142483}, "macro.dbt_utils.generate_series": {"unique_id": "macro.dbt_utils.generate_series", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.143227}, "macro.dbt_utils.default__generate_series": {"unique_id": "macro.dbt_utils.default__generate_series", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1453166}, "macro.dbt_utils.safe_add": {"unique_id": "macro.dbt_utils.safe_add", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "name": "safe_add", "macro_sql": "{%- macro safe_add() -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(*varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1469839}, "macro.dbt_utils.default__safe_add": {"unique_id": "macro.dbt_utils.default__safe_add", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "name": "default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add() -%}\n\n{% set fields = [] %}\n\n{%- for field in varargs -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1482165}, "macro.dbt_utils.get_intervals_between": {"unique_id": "macro.dbt_utils.get_intervals_between", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.150623}, "macro.dbt_utils.default__get_intervals_between": {"unique_id": "macro.dbt_utils.default__get_intervals_between", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{dbt_utils.datediff(start_date, end_date, datepart)}}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1530156}, "macro.dbt_utils.date_spine": {"unique_id": "macro.dbt_utils.date_spine", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1539829}, "macro.dbt_utils.default__date_spine": {"unique_id": "macro.dbt_utils.default__date_spine", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n\n{# call as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n) #}\n\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt_utils.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.155425}, "macro.dbt_utils.unpivot": {"unique_id": "macro.dbt_utils.unpivot", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "name": "unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name, table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1606004}, "macro.dbt_utils.default__unpivot": {"unique_id": "macro.dbt_utils.default__unpivot", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "name": "default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n\n    {% if table %}\n        {%- set error_message = '\n            Warning: the `unpivot` macro no longer accepts a `table` parameter. \\\n            This parameter will be deprecated in a future release of dbt-utils. Use the `relation` parameter instead. \\\n            The {}.{} model triggered this warning. \\\n            '.format(model.package_name, model.name) -%}\n        {%- do exceptions.warn(error_message) -%}\n    {% endif %}\n\n    {% if relation and table %}\n        {{ exceptions.raise_compiler_error(\"Error: both the `relation` and `table` parameters were provided to `unpivot` macro. Choose one only (we recommend `relation`).\") }}\n    {% elif not relation and table %}\n        {% set relation=table %}\n    {% elif not relation and not table %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt_utils.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt_utils.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.type_string", "macro.dbt_utils.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1689603}, "macro.dbt_utils.union_relations": {"unique_id": "macro.dbt_utils.union_relations", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "name": "union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation') -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1751637}, "macro.dbt_utils.default__union_relations": {"unique_id": "macro.dbt_utils.default__union_relations", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "name": "default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation') -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column in exclude -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column not in include -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n\n    {% if (include | length > 0 or exclude | length > 0) and not column_superset.keys() %}\n        {%- set relations_string -%}\n            {%- for relation in relations -%}\n                {{ relation.name }}\n            {%- if not loop.last %}, {% endif -%}\n            {%- endfor -%}\n        {%- endset -%}\n\n        {%- set error_message -%}\n            There were no columns found to union for relations {{ relations_string }}\n        {%- endset -%}\n\n        {{ exceptions.raise_compiler_error(error_message) }}\n    {%- endif -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                cast({{ dbt_utils.string_literal(relation) }} as {{ dbt_utils.type_string() }}) as {{ source_column_name }},\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.string_literal", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1862018}, "macro.dbt_utils.pivot": {"unique_id": "macro.dbt_utils.pivot", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "name": "pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1898458}, "macro.dbt_utils.default__pivot": {"unique_id": "macro.dbt_utils.default__pivot", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "name": "default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for value in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ dbt_utils.escape_single_quotes(value) }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ value ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ value ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.escape_single_quotes", "macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1933324}, "macro.dbt_utils.get_table_types_sql": {"unique_id": "macro.dbt_utils.get_table_types_sql", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "get_table_types_sql", "macro_sql": "{%- macro get_table_types_sql() -%}\n  {{ return(adapter.dispatch('get_table_types_sql', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_table_types_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1947346}, "macro.dbt_utils.default__get_table_types_sql": {"unique_id": "macro.dbt_utils.default__get_table_types_sql", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "default__get_table_types_sql", "macro_sql": "{% macro default__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as \"table_type\"\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1950827}, "macro.dbt_utils.postgres__get_table_types_sql": {"unique_id": "macro.dbt_utils.postgres__get_table_types_sql", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_table_types_sql.sql", "original_file_path": "macros/sql/get_table_types_sql.sql", "name": "postgres__get_table_types_sql", "macro_sql": "{% macro postgres__get_table_types_sql() %}\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'FOREIGN' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as \"table_type\"\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.1954188}, "macro.dbt_utils.get_relations_by_pattern": {"unique_id": "macro.dbt_utils.get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "name": "get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.19784}, "macro.dbt_utils.default__get_relations_by_pattern": {"unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "name": "default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2011425}, "macro.dbt_utils.bool_or": {"unique_id": "macro.dbt_utils.bool_or", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.20254}, "macro.dbt_utils.default__bool_or": {"unique_id": "macro.dbt_utils.default__bool_or", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n    \n    bool_or({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.202965}, "macro.dbt_utils.snowflake__bool_or": {"unique_id": "macro.dbt_utils.snowflake__bool_or", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "snowflake__bool_or", "macro_sql": "{% macro snowflake__bool_or(expression) -%}\n    \n    boolor_agg({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.203383}, "macro.dbt_utils.bigquery__bool_or": {"unique_id": "macro.dbt_utils.bigquery__bool_or", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/bool_or.sql", "original_file_path": "macros/cross_db_utils/bool_or.sql", "name": "bigquery__bool_or", "macro_sql": "{% macro bigquery__bool_or(expression) -%}\n    \n    logical_or({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2038083}, "macro.dbt_utils.intersect": {"unique_id": "macro.dbt_utils.intersect", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2049937}, "macro.dbt_utils.default__intersect": {"unique_id": "macro.dbt_utils.default__intersect", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2053027}, "macro.dbt_utils.bigquery__intersect": {"unique_id": "macro.dbt_utils.bigquery__intersect", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "bigquery__intersect", "macro_sql": "{% macro bigquery__intersect() %}\n\n    intersect distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2056155}, "macro.dbt_utils.current_timestamp": {"unique_id": "macro.dbt_utils.current_timestamp", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ return(adapter.dispatch('current_timestamp', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.207672}, "macro.dbt_utils.default__current_timestamp": {"unique_id": "macro.dbt_utils.default__current_timestamp", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() %}\n    current_timestamp::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2081661}, "macro.dbt_utils.redshift__current_timestamp": {"unique_id": "macro.dbt_utils.redshift__current_timestamp", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "redshift__current_timestamp", "macro_sql": "{% macro redshift__current_timestamp() %}\n    getdate()\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.208478}, "macro.dbt_utils.bigquery__current_timestamp": {"unique_id": "macro.dbt_utils.bigquery__current_timestamp", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() %}\n    current_timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2087858}, "macro.dbt_utils.current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "current_timestamp_in_utc", "macro_sql": "{% macro current_timestamp_in_utc() -%}\n  {{ return(adapter.dispatch('current_timestamp_in_utc', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2094474}, "macro.dbt_utils.default__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.default__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "default__current_timestamp_in_utc", "macro_sql": "{% macro default__current_timestamp_in_utc() %}\n    {{dbt_utils.current_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2100604}, "macro.dbt_utils.snowflake__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.snowflake__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "snowflake__current_timestamp_in_utc", "macro_sql": "{% macro snowflake__current_timestamp_in_utc() %}\n    convert_timezone('UTC', {{dbt_utils.current_timestamp()}})::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2106621}, "macro.dbt_utils.postgres__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.postgres__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "postgres__current_timestamp_in_utc", "macro_sql": "{% macro postgres__current_timestamp_in_utc() %}\n    (current_timestamp at time zone 'utc')::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2111194}, "macro.dbt_utils.redshift__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.redshift__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "redshift__current_timestamp_in_utc", "macro_sql": "{% macro redshift__current_timestamp_in_utc() %}\n    {{ return(dbt_utils.default__current_timestamp_in_utc()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2116797}, "macro.dbt_utils.date_trunc": {"unique_id": "macro.dbt_utils.date_trunc", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt_utils') (datepart, date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2131255}, "macro.dbt_utils.default__date_trunc": {"unique_id": "macro.dbt_utils.default__date_trunc", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) %}\n    date_trunc('{{datepart}}', {{date}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2137144}, "macro.dbt_utils.bigquery__date_trunc": {"unique_id": "macro.dbt_utils.bigquery__date_trunc", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "bigquery__date_trunc", "macro_sql": "{% macro bigquery__date_trunc(datepart, date) %}\n    timestamp_trunc(\n        cast({{date}} as timestamp),\n        {{datepart}}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2142649}, "macro.dbt_utils.identifier": {"unique_id": "macro.dbt_utils.identifier", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "identifier", "macro_sql": "{% macro identifier(value) %}\t\n  {%- set error_message = '\n    Warning: the `identifier` macro is no longer supported and will be deprecated in a future release of dbt-utils. \\\n    Use `adapter.quote` instead. The {}.{} model triggered this warning. \\\n    '.format(model.package_name, model.name) -%}\n  {%- do exceptions.warn(error_message) -%}\n  {{ return(adapter.dispatch('identifier', 'dbt_utils') (value)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__identifier"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2162712}, "macro.dbt_utils.default__identifier": {"unique_id": "macro.dbt_utils.default__identifier", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "default__identifier", "macro_sql": "{% macro default__identifier(value) -%}\t\n    \"{{ value }}\"\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.216705}, "macro.dbt_utils.bigquery__identifier": {"unique_id": "macro.dbt_utils.bigquery__identifier", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "bigquery__identifier", "macro_sql": "{% macro bigquery__identifier(value) -%}\t\n    `{{ value }}`\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2171166}, "macro.dbt_utils.length": {"unique_id": "macro.dbt_utils.length", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__length"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2184305}, "macro.dbt_utils.default__length": {"unique_id": "macro.dbt_utils.default__length", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "default__length", "macro_sql": "{% macro default__length(expression) %}\n    \n    length(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.218862}, "macro.dbt_utils.redshift__length": {"unique_id": "macro.dbt_utils.redshift__length", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "redshift__length", "macro_sql": "{% macro redshift__length(expression) %}\n\n    len(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2192864}, "macro.dbt_utils.escape_single_quotes": {"unique_id": "macro.dbt_utils.escape_single_quotes", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2207932}, "macro.dbt_utils.default__escape_single_quotes": {"unique_id": "macro.dbt_utils.default__escape_single_quotes", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2214074}, "macro.dbt_utils.snowflake__escape_single_quotes": {"unique_id": "macro.dbt_utils.snowflake__escape_single_quotes", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "snowflake__escape_single_quotes", "macro_sql": "{% macro snowflake__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.221968}, "macro.dbt_utils.bigquery__escape_single_quotes": {"unique_id": "macro.dbt_utils.bigquery__escape_single_quotes", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/escape_single_quotes.sql", "original_file_path": "macros/cross_db_utils/escape_single_quotes.sql", "name": "bigquery__escape_single_quotes", "macro_sql": "{% macro bigquery__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\", \"\\\\'\") }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2225444}, "macro.dbt_utils.right": {"unique_id": "macro.dbt_utils.right", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt_utils') (string_text, length_expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__right"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2255576}, "macro.dbt_utils.default__right": {"unique_id": "macro.dbt_utils.default__right", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2261424}, "macro.dbt_utils.bigquery__right": {"unique_id": "macro.dbt_utils.bigquery__right", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "bigquery__right", "macro_sql": "{% macro bigquery__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        substr(\n            {{ string_text }},\n            -1 * ({{ length_expression }})\n        )\n    end\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2267985}, "macro.dbt_utils.snowflake__right": {"unique_id": "macro.dbt_utils.snowflake__right", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "snowflake__right", "macro_sql": "{% macro snowflake__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        right(\n            {{ string_text }},\n            {{ length_expression }}\n        )\n    end\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.227461}, "macro.dbt_utils.position": {"unique_id": "macro.dbt_utils.position", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt_utils') (substring_text, string_text)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__position"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2292223}, "macro.dbt_utils.default__position": {"unique_id": "macro.dbt_utils.default__position", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2297876}, "macro.dbt_utils.bigquery__position": {"unique_id": "macro.dbt_utils.bigquery__position", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "bigquery__position", "macro_sql": "{% macro bigquery__position(substring_text, string_text) %}\n\n    strpos(\n        {{ string_text }},\n        {{ substring_text }}\n        \n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.230346}, "macro.dbt_utils._is_relation": {"unique_id": "macro.dbt_utils._is_relation", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/_is_relation.sql", "original_file_path": "macros/cross_db_utils/_is_relation.sql", "name": "_is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2323897}, "macro.dbt_utils.last_day": {"unique_id": "macro.dbt_utils.last_day", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt_utils') (date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2344842}, "macro.dbt_utils.default_last_day": {"unique_id": "macro.dbt_utils.default_last_day", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "default_last_day", "macro_sql": "\n\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd(datepart, '1', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.235573}, "macro.dbt_utils.default__last_day": {"unique_id": "macro.dbt_utils.default__last_day", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2362003}, "macro.dbt_utils.postgres__last_day": {"unique_id": "macro.dbt_utils.postgres__last_day", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd('month', '3', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc", "macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2378764}, "macro.dbt_utils.redshift__last_day": {"unique_id": "macro.dbt_utils.redshift__last_day", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "redshift__last_day", "macro_sql": "{% macro redshift__last_day(date, datepart) %}\n\n    {{ return(dbt_utils.default__last_day(date, datepart)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.238571}, "macro.dbt_utils.datediff": {"unique_id": "macro.dbt_utils.datediff", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt_utils')(first_date, second_date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2452643}, "macro.dbt_utils.default__datediff": {"unique_id": "macro.dbt_utils.default__datediff", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) %}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.24595}, "macro.dbt_utils.bigquery__datediff": {"unique_id": "macro.dbt_utils.bigquery__datediff", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "bigquery__datediff", "macro_sql": "{% macro bigquery__datediff(first_date, second_date, datepart) %}\n\n    datetime_diff(\n        cast({{second_date}} as datetime),\n        cast({{first_date}} as datetime),\n        {{datepart}}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2466161}, "macro.dbt_utils.postgres__datediff": {"unique_id": "macro.dbt_utils.postgres__datediff", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) %}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.254258}, "macro.dbt_utils.redshift__datediff": {"unique_id": "macro.dbt_utils.redshift__datediff", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "redshift__datediff", "macro_sql": "{% macro redshift__datediff(first_date, second_date, datepart) %}\n\n    {{ return(dbt_utils.default__datediff(first_date, second_date, datepart)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2550912}, "macro.dbt_utils.type_string": {"unique_id": "macro.dbt_utils.type_string", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2577074}, "macro.dbt_utils.default__type_string": {"unique_id": "macro.dbt_utils.default__type_string", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_string", "macro_sql": "{% macro default__type_string() %}\n    string\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2580328}, "macro.dbt_utils.redshift__type_string": {"unique_id": "macro.dbt_utils.redshift__type_string", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "redshift__type_string", "macro_sql": "\n\n{%- macro redshift__type_string() -%}\n    varchar\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2583485}, "macro.dbt_utils.postgres__type_string": {"unique_id": "macro.dbt_utils.postgres__type_string", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_string", "macro_sql": "{% macro postgres__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2586598}, "macro.dbt_utils.snowflake__type_string": {"unique_id": "macro.dbt_utils.snowflake__type_string", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_string", "macro_sql": "{% macro snowflake__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.258967}, "macro.dbt_utils.type_timestamp": {"unique_id": "macro.dbt_utils.type_timestamp", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2596223}, "macro.dbt_utils.default__type_timestamp": {"unique_id": "macro.dbt_utils.default__type_timestamp", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2599354}, "macro.dbt_utils.postgres__type_timestamp": {"unique_id": "macro.dbt_utils.postgres__type_timestamp", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_timestamp", "macro_sql": "{% macro postgres__type_timestamp() %}\n    timestamp without time zone\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2602766}, "macro.dbt_utils.snowflake__type_timestamp": {"unique_id": "macro.dbt_utils.snowflake__type_timestamp", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_timestamp", "macro_sql": "{% macro snowflake__type_timestamp() %}\n    timestamp_ntz\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2605739}, "macro.dbt_utils.type_float": {"unique_id": "macro.dbt_utils.type_float", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__type_float"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.26125}, "macro.dbt_utils.default__type_float": {"unique_id": "macro.dbt_utils.default__type_float", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_float", "macro_sql": "{% macro default__type_float() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2615542}, "macro.dbt_utils.bigquery__type_float": {"unique_id": "macro.dbt_utils.bigquery__type_float", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_float", "macro_sql": "{% macro bigquery__type_float() %}\n    float64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2618537}, "macro.dbt_utils.type_numeric": {"unique_id": "macro.dbt_utils.type_numeric", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2624893}, "macro.dbt_utils.default__type_numeric": {"unique_id": "macro.dbt_utils.default__type_numeric", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    numeric(28, 6)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2627935}, "macro.dbt_utils.bigquery__type_numeric": {"unique_id": "macro.dbt_utils.bigquery__type_numeric", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_numeric", "macro_sql": "{% macro bigquery__type_numeric() %}\n    numeric\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.263122}, "macro.dbt_utils.type_bigint": {"unique_id": "macro.dbt_utils.type_bigint", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2637932}, "macro.dbt_utils.default__type_bigint": {"unique_id": "macro.dbt_utils.default__type_bigint", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    bigint\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2641366}, "macro.dbt_utils.bigquery__type_bigint": {"unique_id": "macro.dbt_utils.bigquery__type_bigint", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_bigint", "macro_sql": "{% macro bigquery__type_bigint() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2644444}, "macro.dbt_utils.type_int": {"unique_id": "macro.dbt_utils.type_int", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2652736}, "macro.dbt_utils.default__type_int": {"unique_id": "macro.dbt_utils.default__type_int", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_int", "macro_sql": "{% macro default__type_int() %}\n    int\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.265592}, "macro.dbt_utils.bigquery__type_int": {"unique_id": "macro.dbt_utils.bigquery__type_int", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_int", "macro_sql": "{% macro bigquery__type_int() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2659044}, "macro.dbt_utils.safe_cast": {"unique_id": "macro.dbt_utils.safe_cast", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt_utils') (field, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2674954}, "macro.dbt_utils.default__safe_cast": {"unique_id": "macro.dbt_utils.default__safe_cast", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2681227}, "macro.dbt_utils.snowflake__safe_cast": {"unique_id": "macro.dbt_utils.snowflake__safe_cast", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "snowflake__safe_cast", "macro_sql": "{% macro snowflake__safe_cast(field, type) %}\n    try_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2686484}, "macro.dbt_utils.bigquery__safe_cast": {"unique_id": "macro.dbt_utils.bigquery__safe_cast", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "bigquery__safe_cast", "macro_sql": "{% macro bigquery__safe_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.269165}, "macro.dbt_utils._is_ephemeral": {"unique_id": "macro.dbt_utils._is_ephemeral", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/_is_ephemeral.sql", "original_file_path": "macros/cross_db_utils/_is_ephemeral.sql", "name": "_is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.272592}, "macro.dbt_utils.split_part": {"unique_id": "macro.dbt_utils.split_part", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt_utils') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2743459}, "macro.dbt_utils.default__split_part": {"unique_id": "macro.dbt_utils.default__split_part", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2750125}, "macro.dbt_utils.bigquery__split_part": {"unique_id": "macro.dbt_utils.bigquery__split_part", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "bigquery__split_part", "macro_sql": "{% macro bigquery__split_part(string_text, delimiter_text, part_number) %}\n\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset({{ part_number - 1 }})]\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2757466}, "macro.dbt_utils.cast_bool_to_text": {"unique_id": "macro.dbt_utils.cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt_utils') (field) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2770925}, "macro.dbt_utils.default__cast_bool_to_text": {"unique_id": "macro.dbt_utils.default__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ dbt_utils.type_string() }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.277677}, "macro.dbt_utils.redshift__cast_bool_to_text": {"unique_id": "macro.dbt_utils.redshift__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "redshift__cast_bool_to_text", "macro_sql": "{% macro redshift__cast_bool_to_text(field) %}\n    case\n        when {{ field }} is true then 'true'\n        when {{ field }} is false then 'false'\n    end::text\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2781982}, "macro.dbt_utils.width_bucket": {"unique_id": "macro.dbt_utils.width_bucket", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2820027}, "macro.dbt_utils.default__width_bucket": {"unique_id": "macro.dbt_utils.default__width_bucket", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }},\n                    {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.283825}, "macro.dbt_utils.redshift__width_bucket": {"unique_id": "macro.dbt_utils.redshift__width_bucket", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "redshift__width_bucket", "macro_sql": "{% macro redshift__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is exactly at the bucket edge\n        case\n            when\n                {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }} %\n                {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                 = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2856925}, "macro.dbt_utils.snowflake__width_bucket": {"unique_id": "macro.dbt_utils.snowflake__width_bucket", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2864974}, "macro.dbt_utils.any_value": {"unique_id": "macro.dbt_utils.any_value", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/any_value.sql", "original_file_path": "macros/cross_db_utils/any_value.sql", "name": "any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__any_value"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.287868}, "macro.dbt_utils.default__any_value": {"unique_id": "macro.dbt_utils.default__any_value", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/any_value.sql", "original_file_path": "macros/cross_db_utils/any_value.sql", "name": "default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n    \n    any_value({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2883363}, "macro.dbt_utils.postgres__any_value": {"unique_id": "macro.dbt_utils.postgres__any_value", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/any_value.sql", "original_file_path": "macros/cross_db_utils/any_value.sql", "name": "postgres__any_value", "macro_sql": "{% macro postgres__any_value(expression) -%}\n    {#- /*Postgres doesn't support any_value, so we're using min() to get the same result*/ -#}\n    min({{ expression }})\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2887747}, "macro.dbt_utils.hash": {"unique_id": "macro.dbt_utils.hash", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt_utils') (field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2901077}, "macro.dbt_utils.default__hash": {"unique_id": "macro.dbt_utils.default__hash", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{field}} as {{dbt_utils.type_string()}}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2908843}, "macro.dbt_utils.bigquery__hash": {"unique_id": "macro.dbt_utils.bigquery__hash", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "bigquery__hash", "macro_sql": "{% macro bigquery__hash(field) -%}\n    to_hex({{dbt_utils.default__hash(field)}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.291423}, "macro.dbt_utils.dateadd": {"unique_id": "macro.dbt_utils.dateadd", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt_utils')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2934985}, "macro.dbt_utils.default__dateadd": {"unique_id": "macro.dbt_utils.default__dateadd", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2942152}, "macro.dbt_utils.bigquery__dateadd": {"unique_id": "macro.dbt_utils.bigquery__dateadd", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "bigquery__dateadd", "macro_sql": "{% macro bigquery__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n        datetime_add(\n            cast( {{ from_date_or_timestamp }} as datetime),\n        interval {{ interval }} {{ datepart }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2948775}, "macro.dbt_utils.postgres__dateadd": {"unique_id": "macro.dbt_utils.postgres__dateadd", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.295525}, "macro.dbt_utils.redshift__dateadd": {"unique_id": "macro.dbt_utils.redshift__dateadd", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "redshift__dateadd", "macro_sql": "{% macro redshift__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ return(dbt_utils.default__dateadd(datepart, interval, from_date_or_timestamp)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.296308}, "macro.dbt_utils.except": {"unique_id": "macro.dbt_utils.except", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.297558}, "macro.dbt_utils.default__except": {"unique_id": "macro.dbt_utils.default__except", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2978842}, "macro.dbt_utils.bigquery__except": {"unique_id": "macro.dbt_utils.bigquery__except", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "bigquery__except", "macro_sql": "{% macro bigquery__except() %}\n\n    except distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.2981918}, "macro.dbt_utils.replace": {"unique_id": "macro.dbt_utils.replace", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/replace.sql", "original_file_path": "macros/cross_db_utils/replace.sql", "name": "replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt_utils') (field, old_chars, new_chars)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.299616}, "macro.dbt_utils.default__replace": {"unique_id": "macro.dbt_utils.default__replace", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/replace.sql", "original_file_path": "macros/cross_db_utils/replace.sql", "name": "default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n    \n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.3003018}, "macro.dbt_utils.string_literal": {"unique_id": "macro.dbt_utils.string_literal", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/literal.sql", "original_file_path": "macros/cross_db_utils/literal.sql", "name": "string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt_utils') (value)) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.3014781}, "macro.dbt_utils.default__string_literal": {"unique_id": "macro.dbt_utils.default__string_literal", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/literal.sql", "original_file_path": "macros/cross_db_utils/literal.sql", "name": "default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.301897}, "macro.dbt_utils.concat": {"unique_id": "macro.dbt_utils.concat", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt_utils')(fields)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.airbyte_utils.mysql__concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.3030725}, "macro.dbt_utils.default__concat": {"unique_id": "macro.dbt_utils.default__concat", "package_name": "dbt_utils", "root_path": "/home/qtcd/Documents/Projects/airbyte/workspace/normalization-files/normalize/dbt/dbt_utils", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1677145223.3035862}}, "docs": {"dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/home/qtcd/Documents/Projects/airbyte/venv/lib/python3.9/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.airbyte_utils.thong_tin_goi_thau_ab2": ["model.airbyte_utils.thong_tin_goi_thau_ab1", "model.airbyte_utils.thong_tin_goi_thau_ab1"], "model.airbyte_utils.thong_tin_goi_thau_ab3": ["model.airbyte_utils.thong_tin_goi_thau_ab2", "model.airbyte_utils.thong_tin_goi_thau_ab2"], "model.airbyte_utils.thong_tin_goi_thau_ab1": ["source.airbyte_utils.bid._airbyte_raw_thong_tin_goi_thau", "source.airbyte_utils.bid._airbyte_raw_thong_tin_goi_thau"], "model.airbyte_utils.thong_tin_goi_thau": ["model.airbyte_utils.thong_tin_goi_thau_ab3", "model.airbyte_utils.thong_tin_goi_thau_ab3", "source.airbyte_utils.bid._airbyte_raw_thong_tin_goi_thau"], "source.airbyte_utils.bid._airbyte_raw_thong_tin_goi_thau": []}, "child_map": {"model.airbyte_utils.thong_tin_goi_thau_ab2": ["model.airbyte_utils.thong_tin_goi_thau_ab3", "model.airbyte_utils.thong_tin_goi_thau_ab3"], "model.airbyte_utils.thong_tin_goi_thau_ab3": ["model.airbyte_utils.thong_tin_goi_thau", "model.airbyte_utils.thong_tin_goi_thau"], "model.airbyte_utils.thong_tin_goi_thau_ab1": ["model.airbyte_utils.thong_tin_goi_thau_ab2", "model.airbyte_utils.thong_tin_goi_thau_ab2"], "model.airbyte_utils.thong_tin_goi_thau": [], "source.airbyte_utils.bid._airbyte_raw_thong_tin_goi_thau": ["model.airbyte_utils.thong_tin_goi_thau", "model.airbyte_utils.thong_tin_goi_thau_ab1", "model.airbyte_utils.thong_tin_goi_thau_ab1"]}}